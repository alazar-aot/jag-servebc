{"ast":null,"code":"/* istanbul ignore file */\nimport ACTION_CONSTANTS from './actionConstants';\nexport var setFormSubmissionDeleteStatus = function setFormSubmissionDeleteStatus(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_SUBMISSION_DELETE,\n      payload: data\n    });\n  };\n};\nexport var setFormSubmissionError = function setFormSubmissionError(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_SUBMISSION_ERROR,\n      payload: data\n    });\n  };\n};\nexport var setFormSubmissionLoading = function setFormSubmissionLoading(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.IS_FORM_SUBMISSION_LOADING,\n      payload: data\n    });\n  };\n};\nexport var setFormDeleteStatus = function setFormDeleteStatus(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_DELETE,\n      payload: data\n    });\n  };\n};\nexport var setFormWorkflowSaved = function setFormWorkflowSaved(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.IS_FORM_WORKFLOW_SAVED,\n      payload: data\n    });\n  };\n};\nexport var setBPMFormList = function setBPMFormList(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_LIST,\n      payload: data\n    });\n  };\n};\nexport var setBPMFormListLoading = function setBPMFormListLoading(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.IS_BPM_FORM_LIST_LOADING,\n      payload: data\n    });\n  };\n};\nexport var setBPMFormListPage = function setBPMFormListPage(page) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_LIST_PAGE_CHANGE,\n      payload: page\n    });\n  };\n};\nexport var setBPMFormLimit = function setBPMFormLimit(pageLimit) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_LIST_LIMIT_CHANGE,\n      payload: pageLimit\n    });\n  };\n};\nexport var setMaintainBPMFormPagination = function setMaintainBPMFormPagination(maintainList) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_MAINTAIN_PAGINATION,\n      payload: maintainList\n    });\n  };\n};\nexport var setBPMFormListSort = function setBPMFormListSort(sort) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_LIST_SORT_CHANGE,\n      payload: sort\n    });\n  };\n};\nexport var setFormSubmitted = function setFormSubmitted(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.PUBLIC_FORM_SUBMIT,\n      payload: data\n    });\n  };\n};\nexport var setPublicFormStatus = function setPublicFormStatus(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.PUBLIC_FORM_STATUS,\n      payload: data\n    });\n  };\n};\nexport var setFormSuccessData = function setFormSuccessData(name, form, url) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_SUCCESS,\n      form: form,\n      name: name,\n      url: url\n    });\n  };\n};\nexport var setFormRequestData = function setFormRequestData(name, id, url) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_REQUEST,\n      name: name,\n      id: id,\n      url: url\n    });\n  };\n};\nexport var resetFormData = function resetFormData(name) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_RESET,\n      name: name\n    });\n  };\n};\nexport var setFormFailureErrorData = function setFormFailureErrorData(name, error) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.FORM_FAILURE,\n      name: name,\n      error: error\n    });\n  };\n};\nexport var setBpmFormSearch = function setBpmFormSearch(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_SEARCH,\n      payload: data\n    });\n    return Promise.resolve();\n  };\n};\nexport var setBpmFormLoading = function setBpmFormLoading(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ACTION_CONSTANTS.BPM_FORM_LOADING,\n      payload: data\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/actions/formActions.js"],"names":["ACTION_CONSTANTS","setFormSubmissionDeleteStatus","data","dispatch","type","FORM_SUBMISSION_DELETE","payload","setFormSubmissionError","FORM_SUBMISSION_ERROR","setFormSubmissionLoading","IS_FORM_SUBMISSION_LOADING","setFormDeleteStatus","FORM_DELETE","setFormWorkflowSaved","IS_FORM_WORKFLOW_SAVED","setBPMFormList","BPM_FORM_LIST","setBPMFormListLoading","IS_BPM_FORM_LIST_LOADING","setBPMFormListPage","page","BPM_FORM_LIST_PAGE_CHANGE","setBPMFormLimit","pageLimit","BPM_FORM_LIST_LIMIT_CHANGE","setMaintainBPMFormPagination","maintainList","BPM_MAINTAIN_PAGINATION","setBPMFormListSort","sort","BPM_FORM_LIST_SORT_CHANGE","setFormSubmitted","PUBLIC_FORM_SUBMIT","setPublicFormStatus","PUBLIC_FORM_STATUS","setFormSuccessData","name","form","url","FORM_SUCCESS","setFormRequestData","id","FORM_REQUEST","resetFormData","FORM_RESET","setFormFailureErrorData","error","FORM_FAILURE","setBpmFormSearch","BPM_FORM_SEARCH","Promise","resolve","setBpmFormLoading","BPM_FORM_LOADING"],"mappings":"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","sourcesContent":[" /* istanbul ignore file */\r\nimport ACTION_CONSTANTS from './actionConstants'\r\n\r\nexport const setFormSubmissionDeleteStatus = (data) => dispatch =>{\r\n    dispatch({\r\n        type:ACTION_CONSTANTS.FORM_SUBMISSION_DELETE,\r\n        payload:data\r\n    })\r\n}\r\nexport const setFormSubmissionError = (data) => dispatch =>{\r\n    dispatch({\r\n        type:ACTION_CONSTANTS.FORM_SUBMISSION_ERROR,\r\n        payload:data\r\n    })\r\n}\r\n\r\nexport const setFormSubmissionLoading = (data) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.IS_FORM_SUBMISSION_LOADING,\r\n    payload:data\r\n  })\r\n}\r\n\r\nexport const setFormDeleteStatus = (data) => dispatch =>{\r\n    dispatch({\r\n        type:ACTION_CONSTANTS.FORM_DELETE,\r\n        payload:data\r\n    })\r\n}\r\n\r\nexport const setFormWorkflowSaved = (data) => dispatch =>{\r\n    dispatch({\r\n        type:ACTION_CONSTANTS.IS_FORM_WORKFLOW_SAVED,\r\n        payload:data\r\n    })\r\n}\r\n\r\nexport const setBPMFormList = (data) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.BPM_FORM_LIST,\r\n    payload:data\r\n  })\r\n}\r\n\r\nexport const setBPMFormListLoading = (data) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.IS_BPM_FORM_LIST_LOADING,\r\n    payload:data\r\n  })\r\n}\r\n\r\nexport const setBPMFormListPage = (page) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.BPM_FORM_LIST_PAGE_CHANGE,\r\n    payload:page\r\n  })\r\n}\r\n\r\nexport const setBPMFormLimit = (pageLimit) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.BPM_FORM_LIST_LIMIT_CHANGE,\r\n    payload:pageLimit\r\n  })\r\n}\r\n\r\nexport const setMaintainBPMFormPagination = (maintainList) => dispatch =>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.BPM_MAINTAIN_PAGINATION,\r\n    payload:maintainList\r\n  })\r\n}\r\n\r\nexport const setBPMFormListSort = (sort) => dispatch =>{\r\n    dispatch({\r\n      type:ACTION_CONSTANTS.BPM_FORM_LIST_SORT_CHANGE,\r\n      payload:sort\r\n    })\r\n}\r\n\r\nexport const setFormSubmitted =(data)=>dispatch=>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.PUBLIC_FORM_SUBMIT,\r\n    payload:data\r\n  })\r\n}\r\n\r\nexport const setPublicFormStatus =(data)=>dispatch=>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.PUBLIC_FORM_STATUS,\r\n    payload:data\r\n  })\r\n}\r\n\r\nexport const setFormSuccessData =( name,\r\n                                   form,\r\n                                   url)=>dispatch=>{\r\n   dispatch({\r\n     type:ACTION_CONSTANTS.FORM_SUCCESS,\r\n     form,\r\n     name,\r\n     url,\r\n   })\r\n }\r\n\r\n export const setFormRequestData =(name, id, url)=>dispatch=>{\r\n   dispatch({\r\n     type:ACTION_CONSTANTS.FORM_REQUEST,\r\n     name,\r\n     id,\r\n     url,\r\n   })\r\n }\r\n\r\n export const resetFormData =(name)=>dispatch=>{\r\n  dispatch({\r\n    type:ACTION_CONSTANTS.FORM_RESET,\r\n    name\r\n  })\r\n}\r\n\r\n export const setFormFailureErrorData =(name, error)=>dispatch=>{\r\n   dispatch({\r\n     type:ACTION_CONSTANTS.FORM_FAILURE,\r\n     name,\r\n     error\r\n   })\r\n }\r\n\r\n export const setBpmFormSearch = (data) => dispatch =>{\r\n   dispatch({\r\n    type:ACTION_CONSTANTS.BPM_FORM_SEARCH,\r\n    payload:data\r\n   })\r\n   return Promise.resolve()\r\n }\r\n\r\n export const setBpmFormLoading = (data) => dispatch =>{\r\n  dispatch({\r\n   type:ACTION_CONSTANTS.BPM_FORM_LOADING,\r\n   payload:data\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}