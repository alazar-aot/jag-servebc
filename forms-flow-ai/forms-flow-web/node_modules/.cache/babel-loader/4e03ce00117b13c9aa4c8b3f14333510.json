{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../../utils/utils\");\n\nvar _default = [{\n  key: 'eventType',\n  label: 'Type of event',\n  tooltip: 'Specify type of event that this reCAPTCHA would react to',\n  type: 'radio',\n  values: [{\n    label: 'Form Load',\n    value: 'formLoad'\n  }, {\n    label: 'Button Click',\n    value: 'buttonClick'\n  }],\n  weight: 650\n}, {\n  type: 'select',\n  input: true,\n  label: 'Button Key',\n  key: 'buttonKey',\n  dataSrc: 'custom',\n  valueProperty: 'value',\n  tooltip: 'Specify key of button on this form that this reCAPTCHA should react to',\n  weight: 660,\n  customConditional: function customConditional(context) {\n    return context.data.eventType === 'buttonClick';\n  },\n  data: {\n    custom: function custom(context) {\n      return (0, _utils.getContextButtons)(context);\n    }\n  }\n}, {\n  key: 'label',\n  ignore: true\n}, {\n  key: 'hideLabel',\n  ignore: true\n}, {\n  key: 'labelPosition',\n  ignore: true\n}, {\n  key: 'placeholder',\n  ignore: true\n}, {\n  key: 'description',\n  ignore: true\n}, {\n  key: 'tooltip',\n  ignore: true\n}, {\n  key: 'errorLabel',\n  ignore: true\n}, {\n  key: 'customClass',\n  ignore: true\n}, {\n  key: 'tabindex',\n  ignore: true\n}, {\n  key: 'multiple',\n  ignore: true\n}, {\n  key: 'clearOnHide',\n  ignore: true\n}, {\n  key: 'hidden',\n  ignore: true\n}, {\n  key: 'mask',\n  ignore: true\n}, {\n  key: 'dataGridLabel',\n  ignore: true\n}, {\n  key: 'disabled',\n  ignore: true\n}, {\n  key: 'autofocus',\n  ignore: true\n}, {\n  key: 'tableView',\n  ignore: true\n}];\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/node_modules/formiojs/components/recaptcha/editForm/ReCaptcha.edit.display.js"],"names":["Object","defineProperty","exports","value","default","_utils","require","_default","key","label","tooltip","type","values","weight","input","dataSrc","valueProperty","customConditional","context","data","eventType","custom","getContextButtons","ignore"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../../utils/utils\");\n\nvar _default = [{\n  key: 'eventType',\n  label: 'Type of event',\n  tooltip: 'Specify type of event that this reCAPTCHA would react to',\n  type: 'radio',\n  values: [{\n    label: 'Form Load',\n    value: 'formLoad'\n  }, {\n    label: 'Button Click',\n    value: 'buttonClick'\n  }],\n  weight: 650\n}, {\n  type: 'select',\n  input: true,\n  label: 'Button Key',\n  key: 'buttonKey',\n  dataSrc: 'custom',\n  valueProperty: 'value',\n  tooltip: 'Specify key of button on this form that this reCAPTCHA should react to',\n  weight: 660,\n  customConditional: function customConditional(context) {\n    return context.data.eventType === 'buttonClick';\n  },\n  data: {\n    custom: function custom(context) {\n      return (0, _utils.getContextButtons)(context);\n    }\n  }\n}, {\n  key: 'label',\n  ignore: true\n}, {\n  key: 'hideLabel',\n  ignore: true\n}, {\n  key: 'labelPosition',\n  ignore: true\n}, {\n  key: 'placeholder',\n  ignore: true\n}, {\n  key: 'description',\n  ignore: true\n}, {\n  key: 'tooltip',\n  ignore: true\n}, {\n  key: 'errorLabel',\n  ignore: true\n}, {\n  key: 'customClass',\n  ignore: true\n}, {\n  key: 'tabindex',\n  ignore: true\n}, {\n  key: 'multiple',\n  ignore: true\n}, {\n  key: 'clearOnHide',\n  ignore: true\n}, {\n  key: 'hidden',\n  ignore: true\n}, {\n  key: 'mask',\n  ignore: true\n}, {\n  key: 'dataGridLabel',\n  ignore: true\n}, {\n  key: 'disabled',\n  ignore: true\n}, {\n  key: 'autofocus',\n  ignore: true\n}, {\n  key: 'tableView',\n  ignore: true\n}];\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}