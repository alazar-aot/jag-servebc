{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\assertThisInitialized.js\";\nimport _inherits from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Stepper.js\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from 'react-toastify';\nimport Create from \"./Create.js\";\nimport Preview from \"./Item/Preview.js\";\nimport Edit from \"./Item/Edit.js\"; //TODO convert this code to functional component\n// for edit\n\nimport { fetchAllBpmProcesses, getFormProcesses, resetFormProcessData, saveFormProcessMapper } from \"../../apiManager/services/processServices\";\nimport { setFormProcessesData } from \"../../actions/processActions\"; //import { saveFormProcessMapper } from \"../../apiManager/services/formServices\";\n\nimport { selectRoot, saveForm as _saveForm, selectError, getForm as _getForm } from \"react-formio\";\nimport { SUBMISSION_ACCESS } from \"../../constants/constants\";\nimport { push } from \"connected-react-router\";\nimport WorkFlow from \"./Steps/WorkFlow\";\nimport PreviewStepper from \"./Steps/PreviewStepper\";\nimport \"./stepper.scss\";\nimport { Link } from \"react-router-dom\";\nimport { FORM_CREATE_ROUTE, STEPPER_ROUTES } from \"./constants/stepperConstants\";\nimport { resetFormData } from \"../../actions/formActions.js\";\n/*const statusList = [\r\n  { label: \"Active\", value: \"active\" },\r\n  { label: \"Inactive\", value: \"inactive\" },\r\n];*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar StepperPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StepperPage, _PureComponent);\n\n  var _super = _createSuper(StepperPage);\n\n  // UNSAFE_componentWillMount() {\n  //   this.props.getAllProcesses();\n  // }\n  function StepperPage(props) {\n    var _this;\n\n    _classCallCheck(this, StepperPage);\n\n    _this = _super.call(this, props);\n\n    _this.changeWorkFlowStatus = function (isWorkFlowAssociated) {\n      _this.setState({\n        workflow: null,\n        associateWorkFlow: isWorkFlowAssociated,\n        dataModified: true\n      });\n    };\n\n    _this.setProcessData = function (data) {\n      _this.setState(function (prevState) {\n        return {\n          processData: _objectSpread(_objectSpread({}, prevState.processData), data),\n          dataModified: true\n        };\n      });\n    };\n\n    _this.associateToWorkFlow = function (item) {\n      _this.setState({\n        workflow: item[0],\n        dataModified: true\n      });\n    };\n\n    _this.submitData = function () {\n      var _this$props = _this.props,\n          form = _this$props.form,\n          onSaveFormProcessMapper = _this$props.onSaveFormProcessMapper,\n          formProcessList = _this$props.formProcessList,\n          formPreviousData = _this$props.formPreviousData,\n          applicationCount = _this$props.applicationCount;\n      var _this$state = _this.state,\n          workflow = _this$state.workflow,\n          processData = _this$state.processData,\n          associateWorkFlow = _this$state.associateWorkFlow;\n      var data = {\n        formId: form.id,\n        formName: form.form && form.form.title,\n        status: processData.status ? processData.status : \"inactive\",\n        taskVariable: formProcessList.taskVariable ? formProcessList.taskVariable : [],\n        anonymous: formProcessList.anonymous ? true : false\n      };\n\n      if (associateWorkFlow === \"yes\" && workflow) {\n        data[\"processKey\"] = workflow && workflow.value;\n        data[\"processName\"] = workflow && workflow.label;\n      } else if (associateWorkFlow === \"no\") {\n        data[\"processKey\"] = \"\";\n        data[\"processName\"] = \"\";\n      }\n\n      var processNameChecking = data.processName !== formPreviousData.processName;\n      var processKeyChecking = data.processKey !== formPreviousData.processKey;\n\n      if (processData.comments) {\n        data[\"comments\"] = processData.comments;\n      }\n\n      var isUpdate = formProcessList && formProcessList.id ? true : false;\n\n      if (applicationCount > 0) {\n        if (formPreviousData.isTitleChanged || processKeyChecking || processNameChecking) {\n          isUpdate = false;\n          var version = +formProcessList.version + 1;\n          data.version = \"\".concat(version);\n        }\n      }\n\n      if (formProcessList && formProcessList.id) {\n        data.id = formProcessList.id;\n      }\n\n      onSaveFormProcessMapper(data, isUpdate);\n    };\n\n    _this.state = {\n      // checked: false,\n      activeStep: 0,\n      workflow: null,\n      status: null,\n      previewMode: false,\n      editMode: false,\n      associateWorkFlow: \"no\",\n      processData: {\n        status: \"inactive\",\n        comments: \"\"\n      },\n      formId: \"\",\n      processList: [],\n      processListLoaded: false,\n      displayMode: \"create\",\n      dataModified: false,\n      disableWorkflowAssociation: false,\n      disablePreview: false\n    };\n    _this.setPreviewMode = _this.setPreviewMode.bind(_assertThisInitialized(_this));\n    _this.handleNext = _this.handleNext.bind(_assertThisInitialized(_this)); // for edit\n\n    _this.setEditMode = _this.setEditMode.bind(_assertThisInitialized(_this));\n    _this.populateDropdown = _this.populateDropdown.bind(_assertThisInitialized(_this));\n    _this.handleBack = _this.handleBack.bind(_assertThisInitialized(_this));\n    _this.handleEditAssociation = _this.handleEditAssociation.bind(_assertThisInitialized(_this));\n    _this.handleEditPreview = _this.handleEditPreview.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(StepperPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state && this.state.displayMode === \"view\") {\n        this.setState({\n          disableWorkflowAssociation: true\n        });\n        this.setState({\n          disablePreview: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearFormProcessData();\n    }\n  }, {\n    key: \"setActiveStep\",\n    value: function setActiveStep(val) {\n      this.setState({\n        activeStep: val\n      });\n    }\n  }, {\n    key: \"setPreviewMode\",\n    value: function setPreviewMode(val) {\n      this.setState({\n        previewMode: val\n      });\n    }\n  }, {\n    key: \"setEditMode\",\n    value: function setEditMode(val) {\n      this.setState({\n        editMode: val\n      });\n    }\n  }, {\n    key: \"handleEditAssociation\",\n    value: function handleEditAssociation() {\n      this.setState({\n        disableWorkflowAssociation: false\n      });\n    }\n  }, {\n    key: \"handleEditPreview\",\n    value: function handleEditPreview() {\n      this.setState({\n        disablePreview: false\n      });\n    }\n  }, {\n    key: \"getSteps\",\n    value: function getSteps() {\n      return [\"Design Form\", \"Associate this form with a workflow?\", \"Preview and Confirm\"];\n    }\n  }, {\n    key: \"populateDropdown\",\n    value: function populateDropdown() {\n      var listProcess = function listProcess(processes) {\n        if ((processes === null || processes === void 0 ? void 0 : processes.length) > 0) {\n          var data = processes.map(function (process) {\n            return {\n              label: process.name,\n              value: process.key\n            };\n          });\n          return data;\n        } else {\n          return [];\n        }\n      };\n\n      return listProcess(this.props.processList);\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit() {\n      this.setState(function (editState) {\n        return {\n          activeStep: editState.activeStep + 1\n        };\n      });\n    }\n  }, {\n    key: \"handleNext\",\n    value: function handleNext() {\n      this.setState(function (prevState) {\n        return {\n          activeStep: prevState.activeStep + 1\n        };\n      });\n    }\n  }, {\n    key: \"setSelectedStatus\",\n    value: function setSelectedStatus(item) {\n      this.setState({\n        status: item[0]\n      }); //code to link form to a workflow\n    }\n  }, {\n    key: \"handleBack\",\n    value: function handleBack() {\n      this.setActiveStep(this.state.activeStep - 1);\n    }\n  }, {\n    key: \"getStepContent\",\n    value: function getStepContent(step) {\n      var _this$state2 = this.state,\n          previewMode = _this$state2.previewMode,\n          editMode = _this$state2.editMode,\n          processData = _this$state2.processData,\n          activeStep = _this$state2.activeStep,\n          workflow = _this$state2.workflow; // const { editMode } = this.state;\n\n      var _this$props2 = this.props,\n          form = _this$props2.form,\n          formProcessList = _this$props2.formProcessList;\n\n      switch (step) {\n        case 0:\n          // return(\n          // previewMode ? <Preview/> : <Create/> ;\n          if (previewMode) {\n            return /*#__PURE__*/_jsxDEV(Preview, {\n              handleNext: this.handleNext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 18\n            }, this);\n          } else if (editMode) {\n            return /*#__PURE__*/_jsxDEV(Edit, _objectSpread(_objectSpread({\n              handleNext: this.handleNext\n            }, this.props), {}, {\n              setPreviewMode: this.setPreviewMode\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 13\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Create, {\n            setPreviewMode: this.setPreviewMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 16\n          }, this);\n\n        case 1:\n          return /*#__PURE__*/_jsxDEV(WorkFlow, {\n            associateWorkFlow: this.state.associateWorkFlow,\n            changeWorkFlowStatus: this.changeWorkFlowStatus,\n            populateDropdown: this.populateDropdown,\n            associateToWorkFlow: this.associateToWorkFlow,\n            handleNext: this.handleNext,\n            handleBack: this.handleBack,\n            handleEditAssociation: this.handleEditAssociation,\n            activeStep: activeStep,\n            steps: this.getSteps().length,\n            workflow: this.state.workflow,\n            formProcessList: formProcessList,\n            disableWorkflowAssociation: this.state.disableWorkflowAssociation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }, this);\n\n        case 2:\n          return /*#__PURE__*/_jsxDEV(PreviewStepper, {\n            associateWorkFlow: this.state.associateWorkFlow,\n            setSelectedStatus: this.setSelectedStatus,\n            handleNext: this.handleNext,\n            handleBack: this.handleBack,\n            handleEditPreview: this.handleEditPreview,\n            activeStep: activeStep,\n            steps: this.getSteps().length,\n            processData: processData,\n            setProcessData: this.setProcessData,\n            formData: form,\n            workflow: workflow,\n            submitData: this.submitData,\n            formProcessList: formProcessList,\n            disablePreview: this.state.disablePreview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 11\n          }, this);\n\n        default:\n          return \"Unknown step\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { process } = this.props;\n      var steps = this.getSteps();\n\n      var handleReset = function handleReset() {\n        _this2.setActiveStep(0);\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/form\",\n            title: \"Back to Form List\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-chevron-left fa-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this) : null, /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            className: \"paper-root\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justify: \"flex-start\",\n              alignItems: \"baseline\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Stepper, {\n                  alternativeLabel: true,\n                  nonLinear: true,\n                  activeStep: this.state.activeStep,\n                  children: steps.map(function (label, index) {\n                    return /*#__PURE__*/_jsxDEV(Step, {\n                      children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                        children: label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 25\n                      }, _this2)\n                    }, label, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, _this2);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: this.state.activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"All steps completed - you're finished\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleReset,\n                      children: \"Reset\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: this.getStepContent(this.state.activeStep)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var stateData = null;\n\n      if (nextProps.match.params.step !== undefined && !STEPPER_ROUTES.includes(nextProps.match.params.step)) {\n        nextProps.goToPageNotFound();\n      }\n\n      if (nextProps.match.params.formId && nextProps.match.params.formId !== prevState.formId) {\n        if (nextProps.match.params.formId !== FORM_CREATE_ROUTE) {\n          nextProps.getForm(nextProps.match.params.formId);\n          nextProps.getFormProcessesDetails(nextProps.match.params.formId);\n        }\n      }\n\n      if (!prevState.processListLoaded) {\n        stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n          processList: nextProps.processList,\n          processListLoaded: true\n        });\n        nextProps.getAllProcesses();\n      }\n\n      if (nextProps.match.params.formId === FORM_CREATE_ROUTE && nextProps.match.params.step === undefined) {\n        stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n          editMode: false,\n          formId: \"\",\n          previewMode: false\n        });\n      } else if (nextProps.match.params.step === \"edit\") {\n        stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n          formId: nextProps.match.params.formId,\n          editMode: true,\n          previewMode: false\n        });\n      } else {\n        stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n          formId: nextProps.match.params.formId,\n          editMode: false,\n          previewMode: true\n        });\n      }\n\n      if (nextProps.match.params.step === \"view-edit\") {\n        stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n          displayMode: \"view\"\n        });\n\n        if (!prevState.dataModified && nextProps.formProcessList) {\n          if (nextProps.formProcessList.processKey) {\n            stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n              workflow: {\n                label: nextProps.formProcessList.processName,\n                value: nextProps.formProcessList.processKey\n              },\n              associateWorkFlow: \"yes\"\n            });\n          }\n\n          stateData = _objectSpread(_objectSpread({}, stateData), {}, {\n            processData: {\n              status: nextProps.formProcessList.status || \"inactive\",\n              isAnonymousAllowd: false,\n              comments: nextProps.formProcessList.comments\n            }\n          });\n        }\n      }\n\n      return _objectSpread({}, stateData); // else {\n      //   return { editMode: false, formId: \"\" };\n      // }\n    }\n  }]);\n\n  return StepperPage;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    form: selectRoot(\"form\", state),\n    saveText: \"Next\",\n    errors: selectError(\"form\", state),\n    processList: state.process.processList,\n    formProcessList: state.process.formProcessList,\n    isAuthenticated: state.user.isAuthenticated,\n    formPreviousData: state.process.formPreviousData,\n    applicationCount: state.process.applicationCount\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllProcesses: function getAllProcesses() {\n      dispatch(fetchAllBpmProcesses(function (err, res) {\n        if (err) {\n          console.log(err);\n        }\n      }));\n    },\n    onSaveFormProcessMapper: function onSaveFormProcessMapper(data, update) {\n      dispatch(saveFormProcessMapper(data, update, function (err, res) {\n        if (!err) {\n          toast.success('Form Workflow Association Saved.');\n          dispatch(push(\"/form\"));\n          dispatch(resetFormProcessData());\n        } else {\n          toast.error('Form Workflow Association Failed.');\n        }\n      }));\n    },\n    saveForm: function saveForm(form) {\n      var newForm = _objectSpread(_objectSpread({}, form), {}, {\n        tags: [\"common\"]\n      });\n\n      newForm.submissionAccess = SUBMISSION_ACCESS;\n      dispatch(_saveForm(\"form\", newForm, function (err, form) {\n        if (!err) {\n          toast.success('Form Saved');\n          dispatch(push(\"/formflow/\".concat(form._id, \"/preview\")));\n        } else {\n          toast.error(\"Error while saving Form\");\n        }\n      }));\n    },\n    getForm: function getForm(id) {\n      dispatch(resetFormData('form', id));\n      dispatch(_getForm(\"form\", id));\n    },\n    getFormProcessesDetails: function getFormProcessesDetails(formId) {\n      dispatch(getFormProcesses(formId, function (err, res) {\n        if (err) {\n          console.log(err);\n        }\n      }));\n    },\n    clearFormProcessData: function clearFormProcessData() {\n      return dispatch(setFormProcessesData([]));\n    },\n    goToPageNotFound: function goToPageNotFound() {\n      return dispatch(push(\"/404\"));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperPage);","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/components/Form/Stepper.js"],"names":["React","PureComponent","connect","Stepper","Step","StepLabel","Button","Typography","Grid","Paper","toast","Create","Preview","Edit","fetchAllBpmProcesses","getFormProcesses","resetFormProcessData","saveFormProcessMapper","setFormProcessesData","selectRoot","saveForm","selectError","getForm","SUBMISSION_ACCESS","push","WorkFlow","PreviewStepper","Link","FORM_CREATE_ROUTE","STEPPER_ROUTES","resetFormData","StepperPage","props","changeWorkFlowStatus","isWorkFlowAssociated","setState","workflow","associateWorkFlow","dataModified","setProcessData","data","prevState","processData","associateToWorkFlow","item","submitData","form","onSaveFormProcessMapper","formProcessList","formPreviousData","applicationCount","state","formId","id","formName","title","status","taskVariable","anonymous","value","label","processNameChecking","processName","processKeyChecking","processKey","comments","isUpdate","isTitleChanged","version","activeStep","previewMode","editMode","processList","processListLoaded","displayMode","disableWorkflowAssociation","disablePreview","setPreviewMode","bind","handleNext","setEditMode","populateDropdown","handleBack","handleEditAssociation","handleEditPreview","clearFormProcessData","val","listProcess","processes","length","map","process","name","key","editState","setActiveStep","step","getSteps","setSelectedStatus","steps","handleReset","isAuthenticated","index","getStepContent","nextProps","stateData","match","params","undefined","includes","goToPageNotFound","getFormProcessesDetails","getAllProcesses","isAnonymousAllowd","mapStateToProps","saveText","errors","user","mapDispatchToProps","dispatch","err","res","console","log","update","success","error","newForm","tags","submissionAccess","_id"],"mappings":"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","sourcesContent":["import React, {PureComponent} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Create from \"./Create.js\";\r\nimport Preview from \"./Item/Preview.js\";\r\nimport Edit from \"./Item/Edit.js\";\r\n\r\n//TODO convert this code to functional component\r\n\r\n// for edit\r\nimport {\r\n  fetchAllBpmProcesses,\r\n  getFormProcesses,\r\n  resetFormProcessData,\r\n  saveFormProcessMapper\r\n} from \"../../apiManager/services/processServices\";\r\nimport {\r\n  setFormProcessesData\r\n} from \"../../actions/processActions\";\r\n//import { saveFormProcessMapper } from \"../../apiManager/services/formServices\";\r\nimport { selectRoot, saveForm, selectError, getForm } from \"react-formio\";\r\nimport { SUBMISSION_ACCESS } from \"../../constants/constants\";\r\nimport { push } from \"connected-react-router\";\r\nimport WorkFlow from \"./Steps/WorkFlow\";\r\nimport PreviewStepper from \"./Steps/PreviewStepper\";\r\n\r\nimport \"./stepper.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FORM_CREATE_ROUTE, STEPPER_ROUTES} from \"./constants/stepperConstants\";\r\nimport { resetFormData } from \"../../actions/formActions.js\";\r\n\r\n/*const statusList = [\r\n  { label: \"Active\", value: \"active\" },\r\n  { label: \"Inactive\", value: \"inactive\" },\r\n];*/\r\n\r\nclass StepperPage extends PureComponent {\r\n  // UNSAFE_componentWillMount() {\r\n  //   this.props.getAllProcesses();\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // checked: false,\r\n      activeStep: 0,\r\n      workflow: null,\r\n      status: null,\r\n      previewMode: false,\r\n      editMode: false,\r\n      associateWorkFlow: \"no\",\r\n      processData: { status: \"inactive\", comments: \"\" },\r\n      formId: \"\",\r\n      processList: [],\r\n      processListLoaded: false,\r\n      displayMode: \"create\",\r\n      dataModified: false,\r\n      disableWorkflowAssociation: false,\r\n      disablePreview: false,\r\n    };\r\n    this.setPreviewMode = this.setPreviewMode.bind(this);\r\n    this.handleNext = this.handleNext.bind(this);\r\n    // for edit\r\n    this.setEditMode = this.setEditMode.bind(this);\r\n    this.populateDropdown = this.populateDropdown.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    this.handleEditAssociation = this.handleEditAssociation.bind(this);\r\n    this.handleEditPreview = this.handleEditPreview.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.state && this.state.displayMode === \"view\"){\r\n      this.setState({ disableWorkflowAssociation: true });\r\n      this.setState({ disablePreview: true });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearFormProcessData();\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let stateData = null;\r\n\r\n    if(nextProps.match.params.step !== undefined && !STEPPER_ROUTES.includes(nextProps.match.params.step)){\r\n      nextProps.goToPageNotFound();\r\n    }\r\n\r\n\r\n    if (\r\n      nextProps.match.params.formId &&\r\n      nextProps.match.params.formId !== prevState.formId\r\n    ) {\r\n      if (nextProps.match.params.formId !== FORM_CREATE_ROUTE) {\r\n        nextProps.getForm(nextProps.match.params.formId);\r\n        nextProps.getFormProcessesDetails(nextProps.match.params.formId);\r\n      }\r\n    }\r\n\r\n    if (!prevState.processListLoaded) {\r\n      stateData = {\r\n        ...stateData,\r\n        processList: nextProps.processList,\r\n        processListLoaded: true,\r\n      };\r\n      nextProps.getAllProcesses();\r\n    }\r\n    if (\r\n      nextProps.match.params.formId === FORM_CREATE_ROUTE &&\r\n      nextProps.match.params.step === undefined\r\n    ) {\r\n      stateData = {\r\n        ...stateData,\r\n        editMode: false,\r\n        formId: \"\",\r\n        previewMode: false,\r\n      };\r\n    } else if (nextProps.match.params.step === \"edit\") {\r\n      stateData = {\r\n        ...stateData,\r\n        formId: nextProps.match.params.formId,\r\n        editMode: true,\r\n        previewMode: false,\r\n      };\r\n    } else {\r\n      stateData = {\r\n        ...stateData,\r\n        formId: nextProps.match.params.formId,\r\n        editMode: false,\r\n        previewMode: true,\r\n      };\r\n    }\r\n\r\n    if (nextProps.match.params.step === \"view-edit\") {\r\n      stateData = {\r\n        ...stateData,\r\n        displayMode: \"view\",\r\n      };\r\n\r\n      if (!prevState.dataModified && nextProps.formProcessList) {\r\n        if (nextProps.formProcessList.processKey) {\r\n          stateData = {\r\n            ...stateData,\r\n            workflow: {\r\n              label: nextProps.formProcessList.processName,\r\n              value: nextProps.formProcessList.processKey,\r\n            },\r\n            associateWorkFlow: \"yes\",\r\n          };\r\n        }\r\n\r\n        stateData = {\r\n          ...stateData,\r\n          processData: {\r\n            status: nextProps.formProcessList.status||\"inactive\",\r\n            isAnonymousAllowd: false,\r\n            comments: nextProps.formProcessList.comments,\r\n          },\r\n        };\r\n      }\r\n    }\r\n\r\n    return { ...stateData };\r\n\r\n    // else {\r\n    //   return { editMode: false, formId: \"\" };\r\n    // }\r\n  }\r\n\r\n  setActiveStep(val) {\r\n    this.setState({ activeStep: val });\r\n  }\r\n  setPreviewMode(val) {\r\n    this.setState({ previewMode: val });\r\n  }\r\n  setEditMode(val) {\r\n    this.setState({ editMode: val });\r\n  }\r\n  handleEditAssociation() {\r\n    this.setState({ disableWorkflowAssociation: false });\r\n  };\r\n  handleEditPreview() {\r\n    this.setState({ disablePreview: false });\r\n  };\r\n  // handleCheckboxChange = (event) =>\r\n  //   this.setState({ checked: event.target.checked });\r\n  changeWorkFlowStatus = (isWorkFlowAssociated) => {\r\n    this.setState({workflow:null, associateWorkFlow: isWorkFlowAssociated, dataModified:true});\r\n  };\r\n\r\n  setProcessData = (data) => {\r\n    this.setState((prevState) => ({\r\n      processData: { ...prevState.processData, ...data },\r\n      dataModified: true,\r\n    }));\r\n  };\r\n\r\n  getSteps() {\r\n    return [\r\n      \"Design Form\",\r\n      \"Associate this form with a workflow?\",\r\n      \"Preview and Confirm\",\r\n    ];\r\n  }\r\n\r\n  populateDropdown() {\r\n    const listProcess = (processes) => {\r\n      if (processes?.length > 0) {\r\n        const data = processes.map((process) => {\r\n          return {\r\n            label: process.name,\r\n            value: process.key,\r\n          };\r\n        });\r\n        return data;\r\n      } else {\r\n        return [];\r\n      }\r\n    };\r\n\r\n    return listProcess(this.props.processList);\r\n  }\r\n\r\n  associateToWorkFlow = (item) => {\r\n    this.setState({ workflow: item[0], dataModified: true });\r\n  };\r\n\r\n  handleEdit() {\r\n    this.setState((editState) => ({\r\n      activeStep: editState.activeStep + 1,\r\n    }));\r\n  }\r\n  handleNext() {\r\n    this.setState((prevState) => ({\r\n      activeStep: prevState.activeStep + 1,\r\n    }));\r\n  }\r\n  setSelectedStatus(item) {\r\n    this.setState({ status: item[0] });\r\n    //code to link form to a workflow\r\n  }\r\n  handleBack() {\r\n    this.setActiveStep(this.state.activeStep - 1);\r\n  }\r\n\r\n  submitData = () => {\r\n    const { form, onSaveFormProcessMapper, formProcessList, formPreviousData ,applicationCount} = this.props;\r\n    const { workflow, processData, associateWorkFlow} = this.state;\r\n    const data = {\r\n      formId: form.id,\r\n      formName: form.form && form.form.title,\r\n      status: processData.status? processData.status:\"inactive\",\r\n      taskVariable:formProcessList.taskVariable?formProcessList.taskVariable:[],\r\n      anonymous:formProcessList.anonymous?true:false\r\n    };\r\n    if (associateWorkFlow === \"yes\" && workflow) {\r\n      data[\"processKey\"]= workflow && workflow.value;\r\n      data[\"processName\"]= workflow && workflow.label;\r\n    }else if(associateWorkFlow === \"no\"){\r\n      data[\"processKey\"]= \"\";\r\n      data[\"processName\"]= \"\";\r\n    }\r\n\r\n    const processNameChecking= data.processName!==formPreviousData.processName;\r\n    const processKeyChecking= data.processKey!==formPreviousData.processKey;\r\n\r\n    if(processData.comments){\r\n      data[\"comments\"] = processData.comments;\r\n    }\r\n\r\n    let isUpdate = formProcessList && formProcessList.id ? true : false;\r\n    if(applicationCount > 0){\r\n      if(formPreviousData.isTitleChanged || processKeyChecking || processNameChecking ){\r\n      isUpdate=false;\r\n      let version = +formProcessList.version+1\r\n      data.version = `${version}`\r\n    }\r\n  }\r\n\r\n  if(formProcessList && formProcessList.id ){\r\n    data.id = formProcessList.id;\r\n  }\r\n    onSaveFormProcessMapper(data, isUpdate);\r\n  };\r\n\r\n  getStepContent(step) {\r\n    const {\r\n      previewMode,\r\n      editMode,\r\n      processData,\r\n      activeStep,\r\n      workflow,\r\n    } = this.state;\r\n    // const { editMode } = this.state;\r\n    const { form, formProcessList } = this.props;\r\n\r\n    switch (step) {\r\n      case 0:\r\n        // return(\r\n        // previewMode ? <Preview/> : <Create/> ;\r\n        if (previewMode) {\r\n          return <Preview handleNext={this.handleNext} />;\r\n        } else if (editMode) {\r\n          return (\r\n            <Edit\r\n              handleNext={this.handleNext}\r\n              {...this.props}\r\n              setPreviewMode={this.setPreviewMode}\r\n            />\r\n          );\r\n        }\r\n        return <Create setPreviewMode={this.setPreviewMode} />;\r\n      case 1:\r\n        return (\r\n          <WorkFlow\r\n            associateWorkFlow={this.state.associateWorkFlow}\r\n            changeWorkFlowStatus={this.changeWorkFlowStatus}\r\n            populateDropdown={this.populateDropdown}\r\n            associateToWorkFlow={this.associateToWorkFlow}\r\n            handleNext={this.handleNext}\r\n            handleBack={this.handleBack}\r\n            handleEditAssociation={this.handleEditAssociation}\r\n            activeStep={activeStep}\r\n            steps={this.getSteps().length}\r\n            workflow={this.state.workflow}\r\n            formProcessList={formProcessList}\r\n            disableWorkflowAssociation={this.state.disableWorkflowAssociation}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <PreviewStepper\r\n            associateWorkFlow={this.state.associateWorkFlow}\r\n            setSelectedStatus={this.setSelectedStatus}\r\n            handleNext={this.handleNext}\r\n            handleBack={this.handleBack}\r\n            handleEditPreview={this.handleEditPreview}\r\n            activeStep={activeStep}\r\n            steps={this.getSteps().length}\r\n            processData={processData}\r\n            setProcessData={this.setProcessData}\r\n            formData={form}\r\n            workflow={workflow}\r\n            submitData={this.submitData}\r\n            formProcessList={formProcessList}\r\n            disablePreview={this.state.disablePreview}\r\n          />\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { process } = this.props;\r\n    const steps = this.getSteps();\r\n\r\n    const handleReset = () => {\r\n      this.setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {this.props.isAuthenticated ?\r\n            <Link to=\"/form\" title=\"Back to Form List\">\r\n              <i className=\"fa fa-chevron-left fa-lg\" />\r\n            </Link>\r\n            :\r\n            null\r\n          }\r\n          <Paper elevation={3} className=\"paper-root\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              {\" \"}\r\n              <Grid item xs={12} spacing={3}>\r\n                <Stepper\r\n                  alternativeLabel\r\n                  nonLinear\r\n                  activeStep={this.state.activeStep}\r\n                >\r\n                  {steps.map((label, index) => {\r\n                    return (\r\n                      <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                      </Step>\r\n                    );\r\n                  })}\r\n                </Stepper>\r\n                <div>\r\n                  {this.state.activeStep === steps.length ? (\r\n                    <div>\r\n                      <Typography>\r\n                        All steps completed - you're finished\r\n                      </Typography>\r\n                      <Button onClick={handleReset}>Reset</Button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>{this.getStepContent(this.state.activeStep)}</div>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot(\"form\", state),\r\n    saveText: \"Next\",\r\n    errors: selectError(\"form\", state),\r\n    processList: state.process.processList,\r\n    formProcessList: state.process.formProcessList,\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    formPreviousData:state.process.formPreviousData,\r\n    applicationCount:state.process.applicationCount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllProcesses: () => {\r\n      dispatch(\r\n        fetchAllBpmProcesses((err, res) => {\r\n          if (err) {\r\n            console.log(err);\r\n          }\r\n        })\r\n      );\r\n    },\r\n    onSaveFormProcessMapper: (data, update) => {\r\n      dispatch(\r\n        saveFormProcessMapper(data, update, (err, res) => {\r\n          if (!err) {\r\n            toast.success('Form Workflow Association Saved.');\r\n            dispatch(push(`/form`));\r\n            dispatch(resetFormProcessData())\r\n          }else{\r\n            toast.error('Form Workflow Association Failed.');\r\n          }\r\n        })\r\n      );\r\n    },\r\n\r\n    saveForm: (form) => {\r\n      const newForm = {\r\n        ...form,\r\n        tags: [\"common\"],\r\n      };\r\n      newForm.submissionAccess = SUBMISSION_ACCESS;\r\n      dispatch(\r\n        saveForm(\"form\", newForm, (err, form) => {\r\n          if (!err) {\r\n            toast.success('Form Saved');\r\n            dispatch(push(`/formflow/${form._id}/preview`));\r\n          }else{\r\n            toast.error(\"Error while saving Form\");\r\n          }\r\n        })\r\n      );\r\n    },\r\n    getForm: (id) => {\r\n      dispatch(resetFormData('form', id));\r\n      dispatch(getForm(\"form\", id))\r\n  },\r\n    getFormProcessesDetails: (formId) => {\r\n      dispatch(\r\n        getFormProcesses(formId, (err, res) => {\r\n          if (err) {\r\n            console.log(err);\r\n          }\r\n        })\r\n      );\r\n    },\r\n    clearFormProcessData: () => dispatch(setFormProcessesData([])),\r\n    goToPageNotFound:()=>dispatch(push(`/404`))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperPage);\r\n"]},"metadata":{},"sourceType":"module"}