{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\FormSearch\\\\FormSearch.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../FormSearch/formSearch.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { indexForms } from 'react-formio';\nimport { setFormLoading } from '../../../actions/checkListActions';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { getSearchText } from \"../../../apiManager/services/formatterService\";\nimport { Button } from \"react-bootstrap\";\nimport { STAFF_DESIGNER } from '../../../constants/constants';\nimport { setBPMFormListSort, setBpmFormSearch, setBpmFormLoading } from '../../../actions/formActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar FormSearch = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  //Search query /form?type=form&title__regex=%2Fnew%2Fi  query Format title__regex= /^title/i\n  var dispatch = useDispatch();\n  var query = useSelector(function (state) {\n    return state.forms.query;\n  });\n  var sort = useSelector(function (state) {\n    return state.forms.sort;\n  });\n\n  var _useState = useState(getSearchText((query === null || query === void 0 ? void 0 : query.title__regex) || '')),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var bpmSort = useSelector(function (state) {\n    return state.bpmForms.sort;\n  });\n  var userRoles = useSelector(function (state) {\n    return state.user.roles;\n  });\n  var isDesigner = userRoles.includes(STAFF_DESIGNER); // if ascending sort value is title else -title for this case\n  // const isAscending = !sort.match(/^-/g);\n\n  var isAscending = isDesigner ? !sort.match(/^-/g) : bpmSort === '-title' ? false : true; //function for sorting  order\n\n  var updatedQuery = {};\n\n  var updateSort = function updateSort() {\n    if (isDesigner) {\n      dispatch(setFormLoading(true));\n      updatedQuery = {\n        sort: \"\".concat(isAscending ? '-' : '', \"title\")\n      };\n      dispatch(indexForms('forms', 1, updatedQuery, function () {\n        dispatch(setFormLoading(false));\n      }));\n    } else {\n      dispatch(setBpmFormLoading(true));\n      updatedQuery = {\n        sort: \"\".concat(isAscending ? '-' : '', \"title\")\n      };\n      dispatch(setBPMFormListSort(updatedQuery.sort || ''));\n      dispatch(setBpmFormLoading(false));\n    }\n  }; // To handle the search option\n\n\n  var searchTitle;\n\n  var handleSearch = function handleSearch(searchForm) {\n    if (isDesigner) {\n      dispatch(setFormLoading(true));\n      searchTitle = searchForm ? \"/\".concat(searchText, \"/i\") : '';\n      dispatch(indexForms('forms', 1, {\n        query: _objectSpread(_objectSpread({}, query), {}, {\n          title__regex: searchTitle\n        })\n      }, function () {\n        dispatch(setFormLoading(false));\n        setSearchText(searchForm);\n      }));\n    } else {\n      dispatch(setBpmFormLoading(true));\n      searchTitle = searchForm ? searchText : '';\n      dispatch(setBpmFormSearch(searchTitle));\n      setSearchText(searchTitle);\n      dispatch(setBpmFormLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"\",\n        \"data-testid\": \"sample\",\n        children: [\"Form\", /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: updateSort,\n          className: \"fa fa-long-arrow-up ml-2\",\n          style: {\n            cursor: 'pointer',\n            opacity: \"\".concat(isAscending ? 1 : 0.5)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: updateSort,\n          className: \"fa fa-long-arrow-down ml-1\",\n          style: {\n            cursor: 'pointer',\n            opacity: \"\".concat(isAscending ? 0.5 : 1)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_search\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            onChange: function onChange(e) {\n              setSearchText(e.target.value);\n            },\n            className: \"mr-1\",\n            placeholder: \"Search..\",\n            value: searchText,\n            onKeyPress: function onKeyPress(e) {\n              return e.key === 'Enter' && handleSearch(searchText);\n            },\n            style: {\n              border: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this), searchText !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              handleSearch('');\n            },\n            variant: \"outline-secondary\",\n            title: \"Click to clear\",\n            className: \"clear_button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-times fa-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              handleSearch(searchText);\n            },\n            variant: \"outline-primary\",\n            title: \"Press Enter key or click here to search\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-search fa-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"aN5M+gGORQPsu55FtrqVDJGdB4U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n}));\n_c2 = FormSearch;\nexport default FormSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormSearch$React.memo\");\n$RefreshReg$(_c2, \"FormSearch\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/components/Form/FormSearch/FormSearch.js"],"names":["React","useState","useDispatch","useSelector","indexForms","setFormLoading","InputGroup","FormControl","getSearchText","Button","STAFF_DESIGNER","setBPMFormListSort","setBpmFormSearch","setBpmFormLoading","FormSearch","memo","dispatch","query","state","forms","sort","title__regex","searchText","setSearchText","bpmSort","bpmForms","userRoles","user","roles","isDesigner","includes","isAscending","match","updatedQuery","updateSort","searchTitle","handleSearch","searchForm","cursor","opacity","e","target","value","key","border"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../FormSearch/formSearch.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { indexForms} from 'react-formio';\r\nimport { setFormLoading } from '../../../actions/checkListActions';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport {getSearchText} from \"../../../apiManager/services/formatterService\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport { STAFF_DESIGNER } from '../../../constants/constants';\r\nimport { setBPMFormListSort,setBpmFormSearch,setBpmFormLoading} from '../../../actions/formActions';\r\n\r\nconst FormSearch = React.memo(() => {\r\n  //Search query /form?type=form&title__regex=%2Fnew%2Fi  query Format title__regex= /^title/i\r\n  const dispatch = useDispatch();\r\n  const query = useSelector((state) => state.forms.query);\r\n  const sort =  useSelector((state) => state.forms.sort)\r\n  const [searchText, setSearchText] = useState(getSearchText(query?.title__regex||''));\r\n  const bpmSort = useSelector((state)=> state.bpmForms.sort);\r\n  const userRoles = useSelector((state) => state.user.roles);\r\n  const isDesigner = userRoles.includes(STAFF_DESIGNER);\r\n\r\n  // if ascending sort value is title else -title for this case\r\n  // const isAscending = !sort.match(/^-/g);\r\n  const isAscending = isDesigner ? !sort.match(/^-/g) : (bpmSort ==='-title'? false : true);\r\n  //function for sorting  order\r\n  let updatedQuery ={}\r\n  const updateSort = () => {\r\n    if(isDesigner){\r\n      dispatch(setFormLoading(true));\r\n      updatedQuery = {\r\n        sort: `${isAscending?'-':''}title`,\r\n      }\r\n      dispatch(indexForms('forms', 1, updatedQuery,()=>{\r\n        dispatch(setFormLoading(false));\r\n      })) \r\n    }else{\r\n      dispatch(setBpmFormLoading(true))\r\n      updatedQuery = {\r\n        sort: `${isAscending?'-':''}title`,\r\n      }\r\n     dispatch(setBPMFormListSort(updatedQuery.sort || ''));\r\n     dispatch(setBpmFormLoading(false))\r\n    }\r\n  }\r\n\r\n  // To handle the search option\r\n  let searchTitle\r\n  const handleSearch = (searchForm) => {\r\n    if(isDesigner){\r\n      dispatch(setFormLoading(true));\r\n       searchTitle = searchForm ? `/${searchText}/i` : '';\r\n      dispatch(indexForms('forms', 1, {query:{ ...query, title__regex: searchTitle}},()=>{\r\n        dispatch(setFormLoading(false));\r\n        setSearchText(searchForm);\r\n      }))\r\n    }else{\r\n      dispatch(setBpmFormLoading(true))\r\n     searchTitle = searchForm ? searchText : '';\r\n     dispatch(setBpmFormSearch(searchTitle))\r\n     setSearchText(searchTitle);\r\n     dispatch(setBpmFormLoading(false))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container main_div\">\r\n        <span className=\"\" data-testid = \"sample\">\r\n          Form\r\n          <i\r\n            onClick={updateSort}\r\n            className=\"fa fa-long-arrow-up ml-2\"\r\n            style={{ cursor: 'pointer',opacity: `${isAscending?1:0.5}`}}\r\n          />\r\n          <i\r\n            onClick={updateSort}\r\n            className=\"fa fa-long-arrow-down ml-1\"\r\n            style={{ cursor: 'pointer',opacity: `${isAscending?0.5:1}`}}\r\n          />\r\n        </span>\r\n\r\n        <div className=\"input_search\">\r\n          <InputGroup className=\"mb-3\" >\r\n            <FormControl\r\n              onChange={(e) => {\r\n                setSearchText(e.target.value)\r\n              }}\r\n              className=\"mr-1\"\r\n              placeholder=\"Search..\"\r\n              value={searchText}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSearch(searchText)}\r\n              style={{border:\"none\"}}\r\n            />\r\n            {searchText!==\"\" && (\r\n                <Button\r\n                    onClick={() => {\r\n                      handleSearch('')\r\n                    }}\r\n                    variant=\"outline-secondary\" title=\"Click to clear\"\r\n                    className='clear_button'\r\n                    >\r\n                  <i className=\"fa fa-times fa-lg\" />\r\n                </Button>\r\n              )}\r\n            <Button\r\n                onClick={() => {\r\n                  handleSearch(searchText)\r\n                }}\r\n                variant=\"outline-primary\"\r\n                title=\"Press Enter key or click here to search\"\r\n                >\r\n              <i className=\"fa fa-search fa-lg\"/>\r\n            </Button>\r\n          </InputGroup>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default FormSearch\r\n"]},"metadata":{},"sourceType":"module"}