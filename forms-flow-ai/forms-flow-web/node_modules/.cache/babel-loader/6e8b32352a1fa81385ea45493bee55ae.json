{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Steps\\\\WorkFlow.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport utils from 'formiojs/utils';\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Select from \"react-dropdown-select\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveNext from \"./SaveNext\";\nimport ProcessDiagram from \"../../BPMN/ProcessDiagramHook\";\nimport TaskvariableCreate from \"./TaskvariableCreate\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { setFormProcessesData } from \"../../../actions/processActions\";\nimport ViewAndEditTaskvariable from \"./ViewAndEditTaskvariable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar WorkFlow = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var associateWorkFlow = _ref.associateWorkFlow,\n      changeWorkFlowStatus = _ref.changeWorkFlowStatus,\n      populateDropdown = _ref.populateDropdown,\n      associateToWorkFlow = _ref.associateToWorkFlow,\n      handleNext = _ref.handleNext,\n      handleBack = _ref.handleBack,\n      handleEditAssociation = _ref.handleEditAssociation,\n      activeStep = _ref.activeStep,\n      steps = _ref.steps,\n      workflow = _ref.workflow,\n      disableWorkflowAssociation = _ref.disableWorkflowAssociation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modified = _useState2[0],\n      setModified = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabValue = _useState4[0],\n      setTabValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showTaskVaribleCrete = _useState6[0],\n      setShowTaskVaribleCrete = _useState6[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.form;\n  }),\n      form = _useSelector.form;\n\n  var componentLabel = [];\n  var ignoredTypes = ['button', 'columns', 'panel', 'well', 'container'];\n  var flattedComponent = Object.values(utils.flattenComponents(form.components, true));\n  flattedComponent.forEach(function (component) {\n    if (!ignoredTypes.includes(component.type)) {\n      componentLabel.push({\n        label: component.label,\n        value: component.key\n      });\n    }\n  });\n  var dispatch = useDispatch();\n  var formProcessList = useSelector(function (state) {\n    return state.process.formProcessList;\n  });\n\n  var _useState7 = useState(formProcessList.taskVariable ? formProcessList.taskVariable : []),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedTaskVariable = _useState8[0],\n      setSelectedTaskVariable = _useState8[1];\n\n  var _useState9 = useState(componentLabel.filter(function (item) {\n    return !selectedTaskVariable.find(function (variable) {\n      return item.value === variable.key;\n    });\n  })),\n      _useState10 = _slicedToArray(_useState9, 2),\n      keyOfVariable = _useState10[0],\n      setKeyOfVariable = _useState10[1];\n\n  var addTaskVariable = function addTaskVariable(data) {\n    setSelectedTaskVariable(function (prev) {\n      return [].concat(_toConsumableArray(prev), [data]);\n    });\n    setKeyOfVariable(function (prev) {\n      return prev.filter(function (item) {\n        return !selectedTaskVariable.find(function (variable) {\n          return variable.key === item.value;\n        }) && item.value !== data.key;\n      });\n    });\n    setShowTaskVaribleCrete(false);\n    dispatch(setFormProcessesData(_objectSpread(_objectSpread({}, formProcessList), {}, {\n      taskVariable: [].concat(_toConsumableArray(selectedTaskVariable), [data])\n    })));\n  };\n\n  var deleteTaskVariable = function deleteTaskVariable(data) {\n    setSelectedTaskVariable(function (prev) {\n      return prev.filter(function (item) {\n        return item.key !== data.key;\n      });\n    });\n    setKeyOfVariable([].concat(_toConsumableArray(keyOfVariable), [{\n      label: data.defaultLabel,\n      value: data.key\n    }]));\n    dispatch(setFormProcessesData(_objectSpread(_objectSpread({}, formProcessList), {}, {\n      taskVariable: selectedTaskVariable.filter(function (item) {\n        return item.key !== data.key;\n      })\n    })));\n  };\n\n  var editTaskVariable = function editTaskVariable(data) {\n    setSelectedTaskVariable(function (prev) {\n      return prev.map(function (item) {\n        return item.key === data.key ? _objectSpread({}, data) : item;\n      });\n    });\n    dispatch(setFormProcessesData(_objectSpread(_objectSpread({}, formProcessList), {}, {\n      taskVariable: selectedTaskVariable.map(function (variable) {\n        return variable.key === data.key ? _objectSpread({}, data) : variable;\n      })\n    })));\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setTabValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"baseline\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\",\n        onClick: handleEditAssociation,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      spacing: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      className: \"next-btn\",\n      children: /*#__PURE__*/_jsxDEV(SaveNext, {\n        handleBack: handleBack,\n        handleNext: handleNext,\n        activeStep: activeStep,\n        steps: steps,\n        changeWorkFlowStatus: changeWorkFlowStatus,\n        modified: modified\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: tabValue,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Workflow Associate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Task variable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      spacing: 3,\n      disabled: disableWorkflowAssociation,\n      children: tabValue === 0 ? /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        className: \"card-overflow\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Do you want to associate form with a workflow ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"associateWorkFlow\",\n              name: \"associateWorkFlow\",\n              value: associateWorkFlow,\n              onChange: function onChange(e) {\n                changeWorkFlowStatus(e.target.value);\n              },\n              row: true,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"yes\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 32\n                }, _this),\n                label: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"no\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 32\n                }, _this),\n                onClick: function onClick(item) {\n                  return setModified(true);\n                },\n                label: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, _this), associateWorkFlow === \"yes\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Please select from one of the following workflows.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                options: populateDropdown(),\n                onChange: function onChange(item) {\n                  setModified(true);\n                  associateToWorkFlow(item);\n                },\n                values: workflow && workflow.value ? [workflow] : [],\n                disabled: disableWorkflowAssociation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              spacing: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, _this), workflow && workflow.value && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              spacing: 3,\n              children: /*#__PURE__*/_jsxDEV(ProcessDiagram, {\n                process_key: workflow && workflow.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          className: \"card-overflow\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Add form fields to display in task list \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, _this), selectedTaskVariable.length !== 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 12,\n              className: \"mb-2\",\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                style: {\n                  maxHeight: \"250px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  stickyHeader: true,\n                  \"aria-label\": \"simple table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        className: \"font-weight-bold\",\n                        children: \"Form field\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 31\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        className: \"font-weight-bold\",\n                        align: \"left\",\n                        children: \"Label\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 31\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        className: \"font-weight-bold\",\n                        align: \"left\",\n                        children: \"Show in list\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 31\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        className: \"font-weight-bold\",\n                        align: \"right\",\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 31\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: selectedTaskVariable.map(function (item, index) {\n                      return /*#__PURE__*/_jsxDEV(ViewAndEditTaskvariable, {\n                        item: item,\n                        deleteTaskVariable: deleteTaskVariable,\n                        editTaskVariable: editTaskVariable\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 31\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 27\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 mb-2\",\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"No Task variable selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 20\n            }, _this), showTaskVaribleCrete && /*#__PURE__*/_jsxDEV(TaskvariableCreate, {\n              options: keyOfVariable,\n              addTaskVariable: addTaskVariable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, _this), keyOfVariable.length !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: function onClick() {\n                return setShowTaskVaribleCrete(!showTaskVaribleCrete);\n              },\n              color: showTaskVaribleCrete ? \"secondary\" : \"primary\",\n              children: showTaskVaribleCrete ? \"cancel\" : \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, _this);\n}, \"paF0UOeBAkZH4NTCohBwaQDrNz0=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n}));\n_c2 = WorkFlow;\nexport default WorkFlow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WorkFlow$React.memo\");\n$RefreshReg$(_c2, \"WorkFlow\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/Form/Steps/WorkFlow.js"],"names":["React","useState","utils","FormLabel","FormControlLabel","RadioGroup","Radio","Grid","CardContent","Card","Tabs","Tab","Select","Button","SaveNext","ProcessDiagram","TaskvariableCreate","useSelector","useDispatch","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","setFormProcessesData","ViewAndEditTaskvariable","WorkFlow","memo","associateWorkFlow","changeWorkFlowStatus","populateDropdown","associateToWorkFlow","handleNext","handleBack","handleEditAssociation","activeStep","steps","workflow","disableWorkflowAssociation","modified","setModified","tabValue","setTabValue","showTaskVaribleCrete","setShowTaskVaribleCrete","state","form","componentLabel","ignoredTypes","flattedComponent","Object","values","flattenComponents","components","forEach","component","includes","type","push","label","value","key","dispatch","formProcessList","process","taskVariable","selectedTaskVariable","setSelectedTaskVariable","filter","item","find","variable","keyOfVariable","setKeyOfVariable","addTaskVariable","data","prev","deleteTaskVariable","defaultLabel","editTaskVariable","map","handleChange","event","newValue","e","target","length","maxHeight","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport utils from 'formiojs/utils';\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Select from \"react-dropdown-select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveNext from \"./SaveNext\";\r\nimport ProcessDiagram from \"../../BPMN/ProcessDiagramHook\";\r\nimport TaskvariableCreate from \"./TaskvariableCreate\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { setFormProcessesData } from \"../../../actions/processActions\";\r\nimport ViewAndEditTaskvariable  from \"./ViewAndEditTaskvariable\";\r\nconst WorkFlow = React.memo(\r\n  ({\r\n    associateWorkFlow,\r\n    changeWorkFlowStatus,\r\n    populateDropdown,\r\n    associateToWorkFlow,\r\n    handleNext,\r\n    handleBack,\r\n    handleEditAssociation,\r\n    activeStep,\r\n    steps,\r\n    workflow,\r\n    disableWorkflowAssociation,\r\n  }) => {\r\n    const[modified,setModified] = useState(false)\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [showTaskVaribleCrete, setShowTaskVaribleCrete] = useState(false);\r\n    const { form } = useSelector((state) => state.form);\r\n\r\n    const componentLabel =[]\r\n    const ignoredTypes = ['button','columns','panel','well','container']\r\n    const flattedComponent = Object.values(utils.flattenComponents(form.components,true))\r\n    flattedComponent.forEach(component=>{\r\n      if(!ignoredTypes.includes(component.type)){\r\n        componentLabel.push({ label: component.label, value: component.key })\r\n      }\r\n    })\r\n  \r\n    const dispatch = useDispatch();\r\n    const formProcessList = useSelector(\r\n      (state) => state.process.formProcessList\r\n    );\r\n\r\n    \r\n    const [selectedTaskVariable, setSelectedTaskVariable] = useState(\r\n      formProcessList.taskVariable ? formProcessList.taskVariable : []\r\n    );\r\n    const [keyOfVariable, setKeyOfVariable] = useState(componentLabel.filter(item=>!selectedTaskVariable.find(variable=>item.value===variable.key)));\r\n  \r\n\r\n  \r\n\r\n\r\n    const addTaskVariable = (data) => {\r\n      setSelectedTaskVariable((prev) => {\r\n        return [...prev, data];\r\n      });\r\n\r\n      setKeyOfVariable((prev) => {\r\n        return prev.filter(\r\n          (item) =>\r\n            !selectedTaskVariable.find(\r\n              (variable) => variable.key === item.value\r\n            ) && item.value !== data.key\r\n        );\r\n      });\r\n      setShowTaskVaribleCrete(false);\r\n      dispatch(\r\n        setFormProcessesData({\r\n          ...formProcessList,\r\n          taskVariable: [...selectedTaskVariable, data],\r\n        })\r\n      );\r\n    };\r\n\r\n    const deleteTaskVariable = (data) => {\r\n      setSelectedTaskVariable((prev) =>\r\n        prev.filter((item) => item.key !== data.key)\r\n      );\r\n      setKeyOfVariable([\r\n        ...keyOfVariable,\r\n        { label: data.defaultLabel, value: data.key },\r\n      ]);\r\n      dispatch(\r\n        setFormProcessesData({\r\n          ...formProcessList,\r\n          taskVariable: selectedTaskVariable.filter(\r\n            (item) => item.key !== data.key\r\n          ),\r\n        })\r\n      );\r\n    };\r\n\r\n    const editTaskVariable= (data)=>{\r\n      setSelectedTaskVariable((prev)=>{\r\n        return prev.map(item=>item.key===data.key?{...data}:item)\r\n      })\r\n      dispatch(\r\n        setFormProcessesData({\r\n          ...formProcessList,\r\n          taskVariable: selectedTaskVariable.map(variable=>variable.key===data.key?{...data}:variable)\r\n        })\r\n      );\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n      setTabValue(newValue);\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"baseline\"\r\n      >\r\n        {/* <FormControl component=\"fieldset\"> */}\r\n\r\n        <Grid item xs={12} sm={1} spacing={3}>\r\n          <button\r\n            className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\"\r\n            onClick={handleEditAssociation}\r\n          >\r\n            Edit\r\n          </button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} spacing={3} />\r\n        <Grid item xs={12} sm={3} className=\"next-btn\">\r\n          <SaveNext\r\n            handleBack={handleBack}\r\n            handleNext={handleNext}\r\n            activeStep={activeStep}\r\n            steps={steps}\r\n            changeWorkFlowStatus={changeWorkFlowStatus}\r\n            modified={modified} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} spacing={3}>\r\n          <br />\r\n        </Grid>\r\n        <Tabs\r\n          value={tabValue}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n        >\r\n          <Tab label=\"Workflow Associate\" />\r\n          <Tab label=\"Task variable\" />\r\n        </Tabs>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          spacing={3}\r\n          disabled={disableWorkflowAssociation}\r\n        >\r\n          {tabValue === 0 ? (\r\n            <Card variant=\"outlined\" className=\"card-overflow\">\r\n              <CardContent>\r\n                <Grid item xs={12} sm={12} spacing={3}>\r\n                  <FormLabel component=\"legend\">\r\n                    Do you want to associate form with a workflow ?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"associateWorkFlow\"\r\n                    name=\"associateWorkFlow\"\r\n                    value={associateWorkFlow}\r\n                    onChange={(e) => {\r\n                      changeWorkFlowStatus(e.target.value);\r\n                    }}\r\n                    row\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"yes\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Yes\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"no\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      onClick={(item)=>setModified(true)}\r\n                      label=\"No\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n\r\n                {associateWorkFlow === \"yes\" && (\r\n                  <>\r\n                    <Grid item xs={12} sm={6} spacing={3}>\r\n                      <h5>\r\n                        Please select from one of the following workflows.\r\n                      </h5>\r\n                      <Select\r\n                        options={populateDropdown()}\r\n                        onChange={(item) =>{setModified(true);\r\n                        associateToWorkFlow(item)}}\r\n                        values={workflow && workflow.value ? [workflow] : []}\r\n                        disabled={disableWorkflowAssociation}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} spacing={3} />\r\n                    <br />\r\n                    {workflow && workflow.value && (\r\n                      <Grid item xs={12} spacing={3}>\r\n                        <ProcessDiagram\r\n                          process_key={workflow && workflow.value}\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {/* </FormControl> */}\r\n              </CardContent>\r\n            </Card>\r\n          ) : (\r\n            <>\r\n              <Card variant=\"outlined\" className=\"card-overflow\">\r\n                <CardContent>\r\n                  <p> Add form fields to display in task list </p>\r\n                  {selectedTaskVariable.length !== 0 ? (\r\n                    <Grid item xs={12} md={12} className=\"mb-2\">\r\n                      <TableContainer component={Paper} style={{maxHeight:\"250px\"}}>\r\n                        <Table stickyHeader aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow >\r\n                              <TableCell className=\"font-weight-bold\">Form field</TableCell>\r\n                              <TableCell className=\"font-weight-bold\" align=\"left\">Label</TableCell>\r\n                              <TableCell className=\"font-weight-bold\"align=\"left\">Show in list</TableCell>\r\n                              <TableCell className=\"font-weight-bold\" align=\"right\">\r\n                                Action\r\n                              </TableCell>\r\n                             \r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {selectedTaskVariable.map((item,index) => (\r\n                              <ViewAndEditTaskvariable key={index}  \r\n                              item={item}\r\n                              deleteTaskVariable={deleteTaskVariable}\r\n                              editTaskVariable={editTaskVariable}\r\n                              />\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  ) : (\r\n                   <div className=\"border p-2 mb-2\">\r\n                      <FormLabel>No Task variable selected</FormLabel>\r\n                   </div>\r\n                  )}\r\n\r\n                  {showTaskVaribleCrete && (\r\n                    <TaskvariableCreate\r\n                      options={keyOfVariable}\r\n                      addTaskVariable={addTaskVariable}\r\n                    />\r\n                  )}\r\n                  {keyOfVariable.length !== 0 && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() =>\r\n                        setShowTaskVaribleCrete(!showTaskVaribleCrete)\r\n                      }\r\n                      color={showTaskVaribleCrete ? \"secondary\" : \"primary\"}\r\n                    >\r\n                      {showTaskVaribleCrete ? \"cancel\" : \"Add\"}\r\n                    </Button>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n);\r\nexport default WorkFlow;\r\n"]},"metadata":{},"sourceType":"module"}