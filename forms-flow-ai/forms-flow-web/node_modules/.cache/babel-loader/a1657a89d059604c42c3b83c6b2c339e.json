{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\list\\\\search\\\\TaskFilterComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport TaskFilterDropdown from \"./TaskFilterDropdown\";\nimport TaskFilterSearch from \"./TaskFilterSearch\";\nimport { QUERY_TYPES } from \"../../constants/taskConstants\";\nimport { setFilterListSearchParams, setSearchQueryType } from \"../../../../actions/bpmTaskActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskIgnoreCaseComponent from \"./TaskIgnoreCaseComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar TaskFilterComponent = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var totalTasks = _ref.totalTasks;\n  var createSearchNode = useRef();\n  var filterSearchSelections = useSelector(function (state) {\n    return state.bpmTasks.filterSearchSelections;\n  });\n  var queryType = useSelector(function (state) {\n    return state.bpmTasks.searchQueryType;\n  });\n\n  var _useState = useState(filterSearchSelections),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterSelections = _useState2[0],\n      setFilterSelections = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showFilterItems = _useState4[0],\n      setShowFilterItems = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick(e) {\n    var _createSearchNode$cur;\n\n    if (createSearchNode !== null && createSearchNode !== void 0 && (_createSearchNode$cur = createSearchNode.current) !== null && _createSearchNode$cur !== void 0 && _createSearchNode$cur.contains(e.target)) {\n      return;\n    } // outside click\n\n\n    setShowFilterItems(null);\n  };\n\n  useEffect(function () {\n    // add when mounted\n    document.addEventListener(\"mousedown\", handleClick); // return function to be called when unmounted\n\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n  useEffect(function () {\n    dispatch(setFilterListSearchParams(filterSelections));\n  }, [filterSelections, dispatch]);\n\n  var setFilter = function setFilter(filter) {\n    var updatedSelectionsArray = [].concat(_toConsumableArray(filterSelections), [_objectSpread({}, filter)]);\n    setFilterSelections(updatedSelectionsArray);\n    setShowFilterItems(false);\n  };\n\n  var deleteSearchFilter = function deleteSearchFilter(filter, index) {\n    var updatedSelectionsArray = _toConsumableArray(filterSelections);\n\n    updatedSelectionsArray.splice(index, 1);\n    setFilterSelections(updatedSelectionsArray);\n  };\n\n  var updateSearchFilterData = function updateSearchFilterData(index, key, value) {\n    var updatedSelectionsArray = _toConsumableArray(filterSelections);\n\n    var newValue;\n\n    if (isNaN(value)) {\n      newValue = value;\n    } else {\n      newValue = Number(value);\n    }\n\n    updatedSelectionsArray[index][key] = newValue;\n    setFilterSelections(updatedSelectionsArray);\n  };\n\n  var updateFilter = function updateFilter(filter, index) {\n    var updatedSelectionsArray = _toConsumableArray(filterSelections);\n\n    updatedSelectionsArray[index].label = filter.label;\n    updatedSelectionsArray[index].type = filter.type;\n    updatedSelectionsArray[index].operator = filter.operator;\n    updatedSelectionsArray[index].key = filter.key;\n    setFilterSelections(updatedSelectionsArray);\n  };\n\n  var setQueryType = function setQueryType(type) {\n    dispatch(setSearchQueryType(type));\n  };\n\n  var changeQueryType = function changeQueryType() {\n    queryType === QUERY_TYPES.ALL ? setQueryType(QUERY_TYPES.ANY) : setQueryType(QUERY_TYPES.ALL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [filterSelections.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button click-element\",\n            onClick: changeQueryType,\n            children: queryType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" of the criteria are met.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, _this) : null, /*#__PURE__*/_jsxDEV(TaskFilterSearch, {\n          updateSearchFilterData: updateSearchFilterData,\n          filterSelections: filterSelections,\n          deleteSearchFilter: deleteSearchFilter,\n          updateFilter: updateFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: createSearchNode,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter\",\n            placeholder: \"Filter Case\",\n            onClick: function onClick() {},\n            onFocus: function onFocus() {\n              return setShowFilterItems(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this), showFilterItems ? /*#__PURE__*/_jsxDEV(TaskFilterDropdown, {\n            onFilterSelect: setFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, _this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: function onClick() {\n              return setShowFilterItems(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-sliders\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 60\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TaskIgnoreCaseComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"KtLz2ZI4wuEKNRIyzQYm7nxAyQ8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n}));\n_c2 = TaskFilterComponent;\nexport default TaskFilterComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskFilterComponent$React.memo\");\n$RefreshReg$(_c2, \"TaskFilterComponent\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/list/search/TaskFilterComponent.js"],"names":["React","useEffect","useRef","useState","TaskFilterDropdown","TaskFilterSearch","QUERY_TYPES","setFilterListSearchParams","setSearchQueryType","useDispatch","useSelector","TaskIgnoreCaseComponent","TaskFilterComponent","memo","totalTasks","createSearchNode","filterSearchSelections","state","bpmTasks","queryType","searchQueryType","filterSelections","setFilterSelections","showFilterItems","setShowFilterItems","dispatch","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","setFilter","filter","updatedSelectionsArray","deleteSearchFilter","index","splice","updateSearchFilterData","key","value","newValue","isNaN","Number","updateFilter","label","type","operator","setQueryType","changeQueryType","ALL","ANY","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport TaskFilterDropdown from \"./TaskFilterDropdown\";\r\nimport TaskFilterSearch from \"./TaskFilterSearch\";\r\nimport {QUERY_TYPES} from \"../../constants/taskConstants\";\r\nimport {\r\n  setFilterListSearchParams,\r\n  setSearchQueryType\r\n} from \"../../../../actions/bpmTaskActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport TaskIgnoreCaseComponent from \"./TaskIgnoreCaseComponent\";\r\n\r\nconst TaskFilterComponent = React.memo(({totalTasks}) => {\r\n  const createSearchNode = useRef();\r\n  const filterSearchSelections = useSelector(state => state.bpmTasks.filterSearchSelections);\r\n  const queryType = useSelector(state => state.bpmTasks.searchQueryType);\r\n  const [filterSelections, setFilterSelections] = useState(filterSearchSelections);\r\n  const [showFilterItems, setShowFilterItems] = useState(false);\r\n  const dispatch= useDispatch();\r\n\r\n\r\n  const handleClick = e => {\r\n    if (createSearchNode?.current?.contains(e.target)) {\r\n      return;\r\n    }\r\n    // outside click\r\n    setShowFilterItems(null);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    // return function to be called when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    dispatch(setFilterListSearchParams(filterSelections));\r\n  },[filterSelections, dispatch]);\r\n\r\n\r\n  const setFilter = (filter) => {\r\n    const updatedSelectionsArray = [...filterSelections, {...filter}];\r\n    setFilterSelections(updatedSelectionsArray);\r\n    setShowFilterItems(false);\r\n  };\r\n\r\n  const deleteSearchFilter = (filter,index)=>{\r\n    let updatedSelectionsArray = [...filterSelections];\r\n    updatedSelectionsArray.splice(index,1);\r\n    setFilterSelections(updatedSelectionsArray)\r\n  }\r\n\r\n  const updateSearchFilterData = (index, key, value)=>{\r\n    let updatedSelectionsArray = [...filterSelections];\r\n    let newValue ;\r\n    if(isNaN(value)){\r\n      newValue=value\r\n    }else{\r\n      newValue= Number(value)\r\n    }\r\n\r\n    updatedSelectionsArray[index][key]=newValue;\r\n    setFilterSelections(updatedSelectionsArray);\r\n  }\r\n\r\n  const updateFilter = (filter,index)=>{\r\n    let updatedSelectionsArray = [...filterSelections];\r\n    updatedSelectionsArray[index].label=filter.label;\r\n    updatedSelectionsArray[index].type=filter.type;\r\n    updatedSelectionsArray[index].operator=filter.operator;\r\n    updatedSelectionsArray[index].key=filter.key;\r\n    setFilterSelections(updatedSelectionsArray);\r\n  }\r\n\r\n  const setQueryType=(type)=>{\r\n    dispatch(setSearchQueryType(type));\r\n  }\r\n\r\n  const changeQueryType= () => {\r\n    queryType===QUERY_TYPES.ALL? setQueryType(QUERY_TYPES.ANY):setQueryType(QUERY_TYPES.ALL);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter-container\">\r\n        <div>\r\n          {filterSelections.length ?\r\n            <div>\r\n              <span className=\"button click-element\" onClick={changeQueryType}>{queryType}</span>\r\n              <span> of the criteria are met.</span>\r\n            </div> : null}\r\n\r\n          <TaskFilterSearch updateSearchFilterData={updateSearchFilterData}\r\n                            filterSelections={filterSelections}\r\n                            deleteSearchFilter={deleteSearchFilter}\r\n                            updateFilter={updateFilter}/>\r\n          <div ref={createSearchNode}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"filter\"\r\n              placeholder=\"Filter Case\"\r\n              onClick={() => {\r\n              }}\r\n              onFocus={() => setShowFilterItems(true)}\r\n            />\r\n            {showFilterItems ? (\r\n              <TaskFilterDropdown onFilterSelect={setFilter}/>\r\n            ) : null}\r\n            <span onClick={() => setShowFilterItems(true)}><i className=\"fa fa-sliders\" aria-hidden=\"true\"/></span>\r\n          </div>\r\n        </div>\r\n        <TaskIgnoreCaseComponent/>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TaskFilterComponent;\r\n"]},"metadata":{},"sourceType":"module"}