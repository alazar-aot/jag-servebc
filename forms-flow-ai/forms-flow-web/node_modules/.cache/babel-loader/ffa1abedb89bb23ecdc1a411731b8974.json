{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport ACTION_CONSTANTS from \"../actions/actionConstants\";\nimport { formatForms, getPaginatedForms, getSearchResults } from \"../apiManager/services/bpmServices\";\nvar initialState = {\n  error: '',\n  formSearchList: [],\n  formsFullList: [],\n  forms: [],\n  isActive: false,\n  limit: 10,\n  pagination: {\n    numPages: 0,\n    page: 1,\n    total: 0\n  },\n  query: {},\n  select: '',\n  sort: 'title',\n  totalForms: \"\",\n  maintainPagination: false,\n  searchText: '',\n  bpmFormLoading: false\n};\n\nvar bpmForms = function bpmForms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACTION_CONSTANTS.BPM_FORM_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        forms: getPaginatedForms(formatForms(action.payload.forms), state.limit, state.maintainPagination ? state.pagination.page : 1, state.sort),\n        formsFullList: formatForms(action.payload.forms),\n        isActive: false,\n        totalForms: action.payload.length,\n        pagination: {\n          numPages: Math.ceil(action.payload.forms.length / state.limit),\n          page: state.maintainPagination ? state.pagination.page : 1,\n          total: action.payload.totalCount\n        }\n      });\n\n    case ACTION_CONSTANTS.IS_BPM_FORM_LIST_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isActive: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_FORM_LIST_PAGE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagination: _objectSpread(_objectSpread({}, state.pagination), {\n          page: action.payload\n        }),\n        forms: state.searchText ? getPaginatedForms(state.formSearchList, state.limit, action.payload, state.sort) : getPaginatedForms(state.formsFullList, state.limit, action.payload, state.sort)\n      });\n\n    case ACTION_CONSTANTS.BPM_FORM_LIST_LIMIT_CHANGE:\n      var totalFormsLength = state.searchText ? state.formSearchList.length : state.formsFullList.length;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        limit: action.payload,\n        pagination: {\n          numPages: Math.ceil(totalFormsLength / action.payload),\n          page: 1,\n          total: totalFormsLength\n        },\n        forms: state.searchText ? getPaginatedForms(state.formSearchList, action.payload, 1, state.sort) : getPaginatedForms(state.formsFullList, action.payload, 1, state.sort)\n      });\n\n    case ACTION_CONSTANTS.BPM_FORM_LIST_SORT_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sort: action.payload,\n        forms: state.searchText ? getPaginatedForms(state.formSearchList, state.limit, state.maintainPagination ? state.page : 1, action.payload) : getPaginatedForms(state.formsFullList, state.limit, state.maintainPagination ? state.pagination.page : 1, action.payload),\n        pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n          page: 1\n        })\n      });\n\n    case ACTION_CONSTANTS.BPM_MAINTAIN_PAGINATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        maintainPagination: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_FORM_SEARCH:\n      var searchResult = getSearchResults(state.formsFullList, action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchText: action.payload,\n        forms: getPaginatedForms(searchResult, state.limit, state.maintainPagination ? state.pagination.page : 1, state.sort, action.payload),\n        formSearchList: searchResult,\n        isActive: false,\n        totalForms: searchResult.length,\n        pagination: {\n          numPages: Math.ceil(searchResult.length / state.limit),\n          page: 1,\n          total: searchResult.length\n        },\n        formsFullList: state.formsFullList\n      });\n\n    case ACTION_CONSTANTS.BPM_FORM_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bpmFormLoading: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default bpmForms;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/modules/bpmFormReducer.js"],"names":["ACTION_CONSTANTS","formatForms","getPaginatedForms","getSearchResults","initialState","error","formSearchList","formsFullList","forms","isActive","limit","pagination","numPages","page","total","query","select","sort","totalForms","maintainPagination","searchText","bpmFormLoading","bpmForms","state","action","type","BPM_FORM_LIST","payload","length","Math","ceil","totalCount","IS_BPM_FORM_LIST_LOADING","BPM_FORM_LIST_PAGE_CHANGE","BPM_FORM_LIST_LIMIT_CHANGE","totalFormsLength","BPM_FORM_LIST_SORT_CHANGE","BPM_MAINTAIN_PAGINATION","BPM_FORM_SEARCH","searchResult","BPM_FORM_LOADING"],"mappings":"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","sourcesContent":["import ACTION_CONSTANTS from \"../actions/actionConstants\";\r\nimport {formatForms, getPaginatedForms,getSearchResults} from \"../apiManager/services/bpmServices\";\r\n\r\nconst initialState = {\r\n  error: '',\r\n  formSearchList:[],\r\n  formsFullList:[],\r\n  forms: [],\r\n  isActive: false,\r\n  limit:10,\r\n  pagination: {\r\n  numPages: 0,\r\n    page: 1,\r\n    total: 0,\r\n  },\r\n  query:{},\r\n  select:'',\r\n  sort:'title',\r\n  totalForms:\"\",\r\n  maintainPagination:false,\r\n  searchText:'',\r\n  bpmFormLoading:false\r\n};\r\n\r\nconst bpmForms = (state = initialState, action)=> {\r\n  switch (action.type) {\r\n    case ACTION_CONSTANTS.BPM_FORM_LIST:\r\n      return {...state, forms: getPaginatedForms(formatForms(action.payload.forms),state.limit, state.maintainPagination? state.pagination.page:1, state.sort), formsFullList:formatForms(action.payload.forms), isActive: false,  totalForms:action.payload.length,  pagination: {\r\n          numPages: Math.ceil(action.payload.forms.length/ state.limit),\r\n          page: state.maintainPagination? state.pagination.page:1,\r\n          total: action.payload.totalCount,\r\n        }};\r\n    case ACTION_CONSTANTS.IS_BPM_FORM_LIST_LOADING:\r\n      return {...state, isActive: action.payload};\r\n    case ACTION_CONSTANTS.BPM_FORM_LIST_PAGE_CHANGE:\r\n      return {...state, pagination: {...state.pagination,...{\r\n          page: action.payload}},forms:state.searchText?getPaginatedForms(state.formSearchList,state.limit,action.payload, state.sort): getPaginatedForms(state.formsFullList,state.limit,action.payload, state.sort)};\r\n    case ACTION_CONSTANTS.BPM_FORM_LIST_LIMIT_CHANGE:\r\n      const totalFormsLength = state.searchText? state.formSearchList.length : state.formsFullList.length\r\n      return {...state, limit:action.payload, pagination: {\r\n          numPages: Math.ceil(totalFormsLength/ action.payload),\r\n          page: 1,\r\n          total: totalFormsLength,\r\n        }, forms:state.searchText?getPaginatedForms(state.formSearchList,action.payload,1, state.sort):getPaginatedForms(state.formsFullList,action.payload,1, state.sort)}\r\n    case ACTION_CONSTANTS.BPM_FORM_LIST_SORT_CHANGE:\r\n      return {...state, sort:action.payload,forms:state.searchText?getPaginatedForms(state.formSearchList,state.limit,state.maintainPagination?state.page:1,action.payload):getPaginatedForms(state.formsFullList,state.limit,state.maintainPagination? state.pagination.page:1, action.payload),pagination:{...state.pagination,page:1}};\r\n    case ACTION_CONSTANTS.BPM_MAINTAIN_PAGINATION:\r\n      return {...state, maintainPagination: action.payload};\r\n    case ACTION_CONSTANTS.BPM_FORM_SEARCH:\r\n      const searchResult = getSearchResults(state.formsFullList,action.payload)\r\n      return {...state,searchText:action.payload,forms:getPaginatedForms(searchResult,state.limit, state.maintainPagination? state.pagination.page:1,state.sort, action.payload),formSearchList:searchResult,isActive:false,totalForms:searchResult.length, pagination: {\r\n          numPages: Math.ceil(searchResult.length/ state.limit),\r\n          page: 1,\r\n          total:searchResult.length,\r\n        },formsFullList:state.formsFullList};\r\n    case ACTION_CONSTANTS.BPM_FORM_LOADING:\r\n      return {...state, bpmFormLoading:action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default bpmForms;\r\n"]},"metadata":{},"sourceType":"module"}