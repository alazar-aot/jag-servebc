{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\details\\\\ServiceTaskDetails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Tab, Tabs } from \"react-bootstrap\";\nimport TaskHeader from \"./TaskHeader\";\nimport { reloadTaskFormSubmission, setBPMTaskDetailLoader, setSelectedTaskID } from \"../../../actions/bpmTaskActions\";\nimport { fetchServiceTaskList, getBPMGroups, getBPMTaskDetail, onBPMTaskFormSubmit } from \"../../../apiManager/services/bpmTaskServices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../../containers/Loading\"; // eslint-disable-next-line no-unused-vars\n\nimport ProcessDiagram from \"../../BPMN/ProcessDiagramHook\";\nimport { getFormIdSubmissionIdFromURL, getProcessDataFromList } from \"../../../apiManager/services/formatterService\";\nimport History from \"../../Application/ApplicationHistory\";\nimport FormEdit from \"../../Form/Item/Submission/Item/Edit\";\nimport FormView from \"../../Form/Item/Submission/Item/View\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { getForm, getSubmission, Formio } from \"react-formio\";\nimport { CUSTOM_EVENT_TYPE } from \"../constants/customEventTypes\";\nimport { getTaskSubmitFormReq } from \"../../../apiManager/services/bpmServices\";\nimport { useParams } from \"react-router-dom\";\nimport { push } from \"connected-react-router\";\nimport { setFormSubmissionLoading } from \"../../../actions/formActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ServiceFlowTaskDetails = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var _useParams = useParams(),\n      taskId = _useParams.taskId;\n\n  var bpmTaskId = useSelector(function (state) {\n    return state.bpmTasks.taskId;\n  });\n  var task = useSelector(function (state) {\n    return state.bpmTasks.taskDetail;\n  });\n  var processList = useSelector(function (state) {\n    return state.bpmTasks.processList;\n  });\n  var isTaskLoading = useSelector(function (state) {\n    return state.bpmTasks.isTaskDetailLoading;\n  });\n  var isTaskUpdating = useSelector(function (state) {\n    return state.bpmTasks.isTaskDetailUpdating;\n  });\n  var reqData = useSelector(function (state) {\n    return state.bpmTasks.listReqParams;\n  });\n  var taskFormSubmissionReload = useSelector(function (state) {\n    return state.bpmTasks.taskFormSubmissionReload;\n  });\n  var dispatch = useDispatch();\n  var currentUser = useSelector(function (state) {\n    var _state$user, _state$user$userDetai;\n\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : (_state$user$userDetai = _state$user.userDetail) === null || _state$user$userDetai === void 0 ? void 0 : _state$user$userDetai.preferred_username) || '';\n  });\n  var selectedFilter = useSelector(function (state) {\n    return state.bpmTasks.selectedFilter;\n  });\n  var firstResult = useSelector(function (state) {\n    return state.bpmTasks.firstResult;\n  }); // eslint-disable-next-line no-unused-vars\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      processKey = _useState2[0],\n      setProcessKey = _useState2[1]; // eslint-disable-next-line no-unused-vars\n\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      processInstanceId = _useState4[0],\n      setProcessInstanceId = _useState4[1];\n\n  useEffect(function () {\n    if (taskId) {\n      dispatch(setSelectedTaskID(taskId));\n    }\n  }, [taskId, dispatch]);\n  useEffect(function () {\n    if (bpmTaskId) {\n      dispatch(setBPMTaskDetailLoader(true));\n      dispatch(getBPMTaskDetail(bpmTaskId));\n      dispatch(getBPMGroups(bpmTaskId));\n    }\n\n    return function () {\n      Formio.clearCache();\n    };\n  }, [bpmTaskId, dispatch]);\n  useEffect(function () {\n    if (processList.length && task !== null && task !== void 0 && task.processDefinitionId) {\n      var pKey = getProcessDataFromList(processList, task === null || task === void 0 ? void 0 : task.processDefinitionId, 'key');\n      setProcessKey(pKey);\n    }\n  }, [processList, task === null || task === void 0 ? void 0 : task.processDefinitionId]);\n  useEffect(function () {\n    if (task !== null && task !== void 0 && task.processInstanceId) {\n      setProcessInstanceId(task === null || task === void 0 ? void 0 : task.processInstanceId);\n    }\n  }, [task === null || task === void 0 ? void 0 : task.processInstanceId]);\n  var getFormSubmissionData = useCallback(function (formUrl) {\n    var _getFormIdSubmissionI = getFormIdSubmissionIdFromURL(formUrl),\n        formId = _getFormIdSubmissionI.formId,\n        submissionId = _getFormIdSubmissionI.submissionId;\n\n    Formio.clearCache();\n    dispatch(getForm('form', formId));\n    dispatch(getSubmission('submission', submissionId, formId));\n    dispatch(setFormSubmissionLoading(false));\n  }, [dispatch]);\n  useEffect(function () {\n    if (task !== null && task !== void 0 && task.formUrl) {\n      dispatch(setFormSubmissionLoading(true));\n      getFormSubmissionData(task === null || task === void 0 ? void 0 : task.formUrl);\n    }\n  }, [task === null || task === void 0 ? void 0 : task.formUrl, dispatch, getFormSubmissionData]);\n  useEffect(function () {\n    if (task !== null && task !== void 0 && task.formUrl && taskFormSubmissionReload) {\n      dispatch(setFormSubmissionLoading(true));\n      getFormSubmissionData(task === null || task === void 0 ? void 0 : task.formUrl);\n      dispatch(reloadTaskFormSubmission(false));\n    }\n  }, [task === null || task === void 0 ? void 0 : task.formUrl, taskFormSubmissionReload, dispatch, getFormSubmissionData]);\n\n  var reloadTasks = function reloadTasks() {\n    dispatch(setBPMTaskDetailLoader(true));\n    dispatch(setSelectedTaskID(null)); // unSelect the Task Selected\n\n    dispatch(fetchServiceTaskList(selectedFilter.id, firstResult, reqData)); //Refreshes the Tasks\n\n    dispatch(push(\"/task/\"));\n  };\n\n  var reloadCurrentTask = function reloadCurrentTask() {\n    if (selectedFilter && task !== null && task !== void 0 && task.id) {\n      dispatch(setBPMTaskDetailLoader(true));\n      dispatch(getBPMTaskDetail(task.id, function (err, taskDetail) {\n        if (!err) {\n          dispatch(setFormSubmissionLoading(true));\n          getFormSubmissionData(taskDetail === null || taskDetail === void 0 ? void 0 : taskDetail.formUrl);\n        }\n      })); // Refresh the Task Selected\n\n      dispatch(getBPMGroups(task.id));\n      dispatch(fetchServiceTaskList(selectedFilter.id, firstResult, reqData)); //Refreshes the Tasks\n    }\n  };\n\n  var onCustomEventCallBack = function onCustomEventCallBack(customEvent) {\n    switch (customEvent.type) {\n      case CUSTOM_EVENT_TYPE.RELOAD_TASKS:\n        reloadTasks();\n        break;\n\n      case CUSTOM_EVENT_TYPE.RELOAD_CURRENT_TASK:\n        reloadCurrentTask();\n        break;\n\n      case CUSTOM_EVENT_TYPE.ACTION_COMPLETE:\n        onFormSubmitCallback(customEvent.actionType);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var onFormSubmitCallback = function onFormSubmitCallback() {\n    var actionType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n    if (bpmTaskId) {\n      dispatch(setBPMTaskDetailLoader(true));\n      dispatch(onBPMTaskFormSubmit(bpmTaskId, getTaskSubmitFormReq(task === null || task === void 0 ? void 0 : task.formUrl, task === null || task === void 0 ? void 0 : task.applicationId, actionType), function (err) {\n        if (!err) {\n          reloadTasks();\n        } else {\n          dispatch(setBPMTaskDetailLoader(false));\n        }\n      }));\n    } else {\n      reloadCurrentTask();\n    }\n  };\n\n  if (!bpmTaskId) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"not-selected mt-2 ml-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-info-circle mr-2 mt-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }, _this), \"Select a task in the list.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, _this);\n  } else if (isTaskLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-task-details\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }, _this);\n  } else {\n    /*TODO split render*/\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-task-details\",\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isTaskUpdating,\n        spinner: true,\n        text: \"Loading...\",\n        children: [/*#__PURE__*/_jsxDEV(TaskHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 8\n        }, _this), /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"form\",\n          id: \"service-task-details\",\n          mountOnEnter: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"form\",\n            title: \"Form\",\n            children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n              active: (task === null || task === void 0 ? void 0 : task.assignee) !== currentUser,\n              styles: {\n                overlay: function overlay(base) {\n                  return _objectSpread(_objectSpread({}, base), {}, {\n                    background: 'rgba(0, 0, 0, 0.2)',\n                    cursor: \"not-allowed !important\"\n                  });\n                }\n              },\n              children: (task === null || task === void 0 ? void 0 : task.assignee) === currentUser ? /*#__PURE__*/_jsxDEV(FormEdit, {\n                onFormSubmit: onFormSubmitCallback,\n                onCustomEvent: onCustomEventCallBack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 44\n              }, _this) : /*#__PURE__*/_jsxDEV(FormView, {\n                showPrintButton: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 130\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 12\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 10\n          }, _this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"history\",\n            title: \"History\",\n            children: /*#__PURE__*/_jsxDEV(History, {\n              applicationId: task === null || task === void 0 ? void 0 : task.applicationId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 12\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 10\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 8\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 14\n    }, _this);\n  }\n}, \"vG861hkKQCFpVhLe0UJDhl/HVsY=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector, useSelector];\n}));\n_c2 = ServiceFlowTaskDetails;\nexport default ServiceFlowTaskDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ServiceFlowTaskDetails$React.memo\");\n$RefreshReg$(_c2, \"ServiceFlowTaskDetails\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/details/ServiceTaskDetails.js"],"names":["React","useCallback","useEffect","useState","Row","Tab","Tabs","TaskHeader","reloadTaskFormSubmission","setBPMTaskDetailLoader","setSelectedTaskID","fetchServiceTaskList","getBPMGroups","getBPMTaskDetail","onBPMTaskFormSubmit","useDispatch","useSelector","Loading","ProcessDiagram","getFormIdSubmissionIdFromURL","getProcessDataFromList","History","FormEdit","FormView","LoadingOverlay","getForm","getSubmission","Formio","CUSTOM_EVENT_TYPE","getTaskSubmitFormReq","useParams","push","setFormSubmissionLoading","ServiceFlowTaskDetails","memo","taskId","bpmTaskId","state","bpmTasks","task","taskDetail","processList","isTaskLoading","isTaskDetailLoading","isTaskUpdating","isTaskDetailUpdating","reqData","listReqParams","taskFormSubmissionReload","dispatch","currentUser","user","userDetail","preferred_username","selectedFilter","firstResult","processKey","setProcessKey","processInstanceId","setProcessInstanceId","clearCache","length","processDefinitionId","pKey","getFormSubmissionData","formUrl","formId","submissionId","reloadTasks","id","reloadCurrentTask","err","onCustomEventCallBack","customEvent","type","RELOAD_TASKS","RELOAD_CURRENT_TASK","ACTION_COMPLETE","onFormSubmitCallback","actionType","applicationId","assignee","overlay","base","background","cursor"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport TaskHeader from \"./TaskHeader\";\r\nimport {reloadTaskFormSubmission, setBPMTaskDetailLoader, setSelectedTaskID} from \"../../../actions/bpmTaskActions\";\r\nimport {\r\n  fetchServiceTaskList,\r\n  getBPMGroups,\r\n  getBPMTaskDetail,\r\n  onBPMTaskFormSubmit\r\n} from \"../../../apiManager/services/bpmTaskServices\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loading from \"../../../containers/Loading\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport ProcessDiagram from \"../../BPMN/ProcessDiagramHook\";\r\nimport {getFormIdSubmissionIdFromURL, getProcessDataFromList} from \"../../../apiManager/services/formatterService\";\r\nimport History from \"../../Application/ApplicationHistory\";\r\nimport FormEdit from \"../../Form/Item/Submission/Item/Edit\";\r\nimport FormView from \"../../Form/Item/Submission/Item/View\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport {getForm, getSubmission, Formio} from \"react-formio\";\r\nimport {CUSTOM_EVENT_TYPE} from \"../constants/customEventTypes\";\r\nimport {getTaskSubmitFormReq} from \"../../../apiManager/services/bpmServices\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {push} from \"connected-react-router\";\r\nimport {setFormSubmissionLoading} from \"../../../actions/formActions\";\r\n\r\n\r\nconst ServiceFlowTaskDetails = React.memo(() => {\r\n  const {taskId} = useParams();\r\n  const bpmTaskId = useSelector(state => state.bpmTasks.taskId);\r\n  const task = useSelector(state => state.bpmTasks.taskDetail);\r\n  const processList = useSelector(state=>state.bpmTasks.processList);\r\n  const isTaskLoading = useSelector(state => state.bpmTasks.isTaskDetailLoading);\r\n  const isTaskUpdating = useSelector(state => state.bpmTasks.isTaskDetailUpdating);\r\n  const reqData = useSelector(state => state.bpmTasks.listReqParams);\r\n  const taskFormSubmissionReload = useSelector(state => state.bpmTasks.taskFormSubmissionReload);\r\n  const dispatch= useDispatch();\r\n  const currentUser = useSelector((state) => state.user?.userDetail?.preferred_username || '');\r\n  const selectedFilter=useSelector(state=>state.bpmTasks.selectedFilter);\r\n  const firstResult = useSelector(state=> state.bpmTasks.firstResult);\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [processKey, setProcessKey]= useState('');\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [processInstanceId, setProcessInstanceId]=useState('');\r\n\r\n\r\n useEffect(()=>{\r\n    if(taskId){\r\n    dispatch(setSelectedTaskID(taskId));\r\n    }\r\n  },[taskId, dispatch]);\r\n\r\n  useEffect(()=>{\r\n    if(bpmTaskId){\r\n      dispatch(setBPMTaskDetailLoader(true))\r\n      dispatch(getBPMTaskDetail(bpmTaskId));\r\n      dispatch(getBPMGroups(bpmTaskId))\r\n    }\r\n    return ()=>{\r\n      Formio.clearCache();\r\n    }\r\n  },[bpmTaskId, dispatch]);\r\n\r\n  useEffect(()=>{\r\n    if(processList.length && task?.processDefinitionId){\r\n      const pKey=getProcessDataFromList(processList, task?.processDefinitionId,'key');\r\n      setProcessKey(pKey);\r\n    }\r\n  },[processList,task?.processDefinitionId]);\r\n\r\n  useEffect(()=>{\r\n    if(task?.processInstanceId){\r\n     setProcessInstanceId(task?.processInstanceId)\r\n    }\r\n  },[task?.processInstanceId]);\r\n\r\n  const getFormSubmissionData = useCallback((formUrl)=>{\r\n      const {formId,submissionId} =getFormIdSubmissionIdFromURL(formUrl);\r\n      Formio.clearCache();\r\n      dispatch(getForm('form',formId));\r\n      dispatch(getSubmission('submission', submissionId, formId));\r\n      dispatch(setFormSubmissionLoading(false));\r\n  },[dispatch]);\r\n\r\n  useEffect(()=>{\r\n    if(task?.formUrl){\r\n      dispatch(setFormSubmissionLoading(true));\r\n      getFormSubmissionData(task?.formUrl)\r\n    }\r\n  },[task?.formUrl, dispatch, getFormSubmissionData]);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(task?.formUrl && taskFormSubmissionReload){\r\n      dispatch(setFormSubmissionLoading(true));\r\n      getFormSubmissionData(task?.formUrl);\r\n      dispatch(reloadTaskFormSubmission(false));\r\n    }\r\n  },[task?.formUrl, taskFormSubmissionReload, dispatch,getFormSubmissionData])\r\n\r\n  const reloadTasks = () => {\r\n    dispatch(setBPMTaskDetailLoader(true));\r\n    dispatch(setSelectedTaskID(null)); // unSelect the Task Selected\r\n    dispatch(fetchServiceTaskList(selectedFilter.id, firstResult, reqData)); //Refreshes the Tasks\r\n    dispatch(push(`/task/`));\r\n  }\r\n\r\n  const reloadCurrentTask = () => {\r\n    if(selectedFilter && task?.id) {\r\n      dispatch(setBPMTaskDetailLoader(true))\r\n      dispatch(getBPMTaskDetail(task.id,(err,taskDetail)=>{\r\n        if(!err){\r\n          dispatch(setFormSubmissionLoading(true));\r\n          getFormSubmissionData(taskDetail?.formUrl);\r\n        }\r\n      })); // Refresh the Task Selected\r\n      dispatch(getBPMGroups(task.id))\r\n      dispatch(fetchServiceTaskList(selectedFilter.id, firstResult, reqData)); //Refreshes the Tasks\r\n    }\r\n  }\r\n\r\n  const onCustomEventCallBack = (customEvent) => {\r\n     switch(customEvent.type){\r\n       case CUSTOM_EVENT_TYPE.RELOAD_TASKS:\r\n         reloadTasks();\r\n         break;\r\n       case CUSTOM_EVENT_TYPE.RELOAD_CURRENT_TASK:\r\n         reloadCurrentTask();\r\n         break;\r\n       case CUSTOM_EVENT_TYPE.ACTION_COMPLETE:\r\n         onFormSubmitCallback(customEvent.actionType);\r\n         break;\r\n       default: return;\r\n     }\r\n  };\r\n\r\n  const onFormSubmitCallback = (actionType=\"\") => {\r\n    if(bpmTaskId){\r\n      dispatch(setBPMTaskDetailLoader(true));\r\n      dispatch(onBPMTaskFormSubmit(bpmTaskId,getTaskSubmitFormReq(task?.formUrl,task?.applicationId,actionType),(err)=>{\r\n        if(!err){\r\n          reloadTasks();\r\n        }else{\r\n          dispatch(setBPMTaskDetailLoader(false));\r\n        }\r\n      }));\r\n    }else{\r\n      reloadCurrentTask();\r\n    }\r\n  }\r\n\r\n   if(!bpmTaskId){\r\n     return <Row className=\"not-selected mt-2 ml-1\">\r\n       <i className=\"fa fa-info-circle mr-2 mt-1\"/>\r\n       Select a task in the list.\r\n       </Row>\r\n   }else if(isTaskLoading) {\r\n   return <div className=\"service-task-details\">\r\n     <Loading/>\r\n   </div>\r\n   } else{\r\n     /*TODO split render*/\r\n     return (<div className=\"service-task-details\">\r\n       <LoadingOverlay\r\n         active={isTaskUpdating}\r\n         spinner\r\n         text=\"Loading...\"\r\n       >\r\n       <TaskHeader />\r\n       <Tabs defaultActiveKey=\"form\" id=\"service-task-details\" mountOnEnter>\r\n         <Tab eventKey=\"form\" title=\"Form\">\r\n           <LoadingOverlay active={task?.assignee!==currentUser}\r\n                           styles={{\r\n                             overlay: (base) => ({\r\n                               ...base,\r\n                               background: 'rgba(0, 0, 0, 0.2)',\r\n                               cursor:\"not-allowed !important\"\r\n                             })\r\n                           }}>\r\n             {task?.assignee===currentUser?<FormEdit onFormSubmit={onFormSubmitCallback} onCustomEvent={onCustomEventCallBack}/>:<FormView showPrintButton={false}/>}\r\n           </LoadingOverlay>\r\n         </Tab>\r\n         <Tab eventKey=\"history\" title=\"History\">\r\n           <History applicationId={task?.applicationId}/>\r\n         </Tab>\r\n         {/* <Tab eventKey=\"diagram\" title=\"Diagram\" >\r\n           <div>\r\n             <ProcessDiagram\r\n               process_key={processKey}\r\n               processInstanceId={processInstanceId}\r\n               // markers={processActivityList}\r\n             />\r\n           </div>\r\n         </Tab> */}\r\n       </Tabs>\r\n       </LoadingOverlay>\r\n     </div>)\r\n   }\r\n});\r\n\r\nexport default ServiceFlowTaskDetails;\r\n"]},"metadata":{},"sourceType":"module"}