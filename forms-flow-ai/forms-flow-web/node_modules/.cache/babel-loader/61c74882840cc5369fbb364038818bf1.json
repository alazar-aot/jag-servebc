{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\list\\\\search\\\\TaskFilterSearch.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FILTER_COMPARE_OPTIONS, Filter_Search_Types } from \"../../constants/taskConstants\";\nimport OperatorFilterDropDown from \"../../filter/OperatorFilterDropdown\";\nimport TaskFilterSearchType from \"./TaskFilterSearchType\";\nimport { getFormattedDateAndTime, getISODateTime } from \"../../../../apiManager/services/formatterService\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar TaskFilterSearch = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$filterSelections = _ref.filterSelections,\n      filterSelections = _ref$filterSelections === void 0 ? [] : _ref$filterSelections,\n      deleteSearchFilter = _ref.deleteSearchFilter,\n      updateSearchFilterData = _ref.updateSearchFilterData,\n      updateFilter = _ref.updateFilter;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      valueBoxIndex = _useState2[0],\n      setShowValueBoxIndex = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameBoxIndex = _useState4[0],\n      setShowNameBoxIndex = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFilterInputValue = _useState6[0],\n      setSelectedFilterInputValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedFilterInputName = _useState8[0],\n      setSelectedFilterInputName = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputDate = _useState10[0],\n      setUpInputDate = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filterTaskVariableArray = _useState12[0],\n      setFilterTaskVariableArray = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskVariable = _useState14[0],\n      setTaskVariable = _useState14[1];\n\n  var selectedFilter = useSelector(function (state) {\n    return state.bpmTasks.selectedFilter;\n  });\n  useEffect(function () {\n    if (selectedFilter) {\n      var _selectedFilter$prope;\n\n      var _taskVariable = (selectedFilter === null || selectedFilter === void 0 ? void 0 : (_selectedFilter$prope = selectedFilter.properties) === null || _selectedFilter$prope === void 0 ? void 0 : _selectedFilter$prope.variables) || [];\n\n      setTaskVariable(_taskVariable);\n      setFilterTaskVariableArray(_taskVariable);\n    }\n  }, [selectedFilter]);\n\n  var filterTaskVariable = function filterTaskVariable(e) {\n    setFilterTaskVariableArray(taskVariable.filter(function (task, index) {\n      return task === null || task === void 0 ? void 0 : task.name.includes(e.target.value);\n    }));\n  };\n\n  var handleFilterValueChange = function handleFilterValueChange(e, index) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      updateFilterValue(index);\n    }\n  };\n\n  var updateFilterValue = function updateFilterValue(index) {\n    updateSearchFilterData(index, 'value', selectedFilterInputValue);\n    setShowValueBoxIndex(null);\n    setSelectedFilterInputValue('');\n  };\n\n  var updateOperator = function updateOperator(index, value) {\n    updateSearchFilterData(index, 'operator', value);\n  };\n\n  var updateFilterName = function updateFilterName(index, value) {\n    updateSearchFilterData(index, 'name', value || selectedFilterInputName);\n    setShowNameBoxIndex(null);\n    setSelectedFilterInputName('');\n  };\n\n  var handleFilterNameChange = function handleFilterNameChange(e, index) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      updateFilterName(index);\n    }\n  };\n\n  var handleValueInput = function handleValueInput(index) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 ? arguments[2] : undefined;\n    setShowValueBoxIndex(index);\n    type !== Filter_Search_Types.DATE ? setSelectedFilterInputValue(value.toString()) : setUpInputDate(value ? new Date(value) : null);\n  };\n\n  var handleNameInput = function handleNameInput(index) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    setShowNameBoxIndex(index);\n    setSelectedFilterInputName(value);\n  };\n\n  var handleFilterUpdate = function handleFilterUpdate(filter, index) {\n    updateFilter(filter, index);\n  };\n\n  var onUpDateInputdate = function onUpDateInputdate(updatedDate, index) {\n    setUpInputDate(updatedDate);\n    updateSearchFilterData(index, 'value', updatedDate ? getISODateTime(updatedDate) : null);\n    setShowValueBoxIndex(null);\n    setSelectedFilterInputValue('');\n    /*followUpDate?getISODateTime(followUpDate):null*/\n  };\n\n  var UpDateInputComponent = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var value = _ref2.value,\n        onClick = _ref2.onClick;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClick,\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, _this), \" \", inputDate ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-4\",\n        children: getFormattedDateAndTime(inputDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this) : \"??\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filterSelections.map(function (filter, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"close-container  click-element\",\n            onClick: function onClick() {\n              return deleteSearchFilter(filter, index);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close-btn\",\n              title: \"Remove search\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-container\",\n            children: [/*#__PURE__*/_jsxDEV(TaskFilterSearchType, {\n              filter: filter,\n              index: index,\n              handleFilterUpdate: handleFilterUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-container\",\n                children: filter.type === Filter_Search_Types.VARIABLES && nameBoxIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn click-element\",\n                    onClick: function onClick() {\n                      return updateFilterName(index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-check\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 20\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 18\n                  }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn click-element\",\n                    onClick: function onClick() {\n                      return setShowNameBoxIndex(null);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-times\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 20\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 18\n                  }, _this)]\n                }, void 0, true) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 16\n              }, _this), filter.type === Filter_Search_Types.VARIABLES ? nameBoxIndex === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"filters position-box\",\n                  placeholder: \"\",\n                  value: selectedFilterInputName,\n                  onChange: function onChange(e) {\n                    filterTaskVariable(e);\n                    setSelectedFilterInputName(e.target.value);\n                  },\n                  onKeyDown: function onKeyDown(e) {\n                    return handleFilterNameChange(e, index);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-items variable-filter-item\",\n                  children: filterTaskVariableArray.map(function (variable) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"clickable p-0 mb-2 text-truncate\",\n                      onClick: function onClick() {\n                        setSelectedFilterInputName(variable.name);\n                        updateFilterName(index, variable.name);\n                      },\n                      \"data-bs-toggle\": \"tooltip\",\n                      \"data-bs-placement\": \"top\",\n                      title: \"\".concat(variable.name, \"  (\").concat(variable.label, \")\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [variable.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-muted\",\n                          children: [\" (\", variable.label, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 139,\n                          columnNumber: 40\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 18\n                      }, _this)\n                    }, variable.label, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 19\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 43\n              }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-truncate\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"data-bs-toggle\": \"tooltip\",\n                  \"data-bs-placement\": \"top\",\n                  title: \"\".concat(filter.name ? filter.name : 'property'),\n                  className: \"click-element\",\n                  onClick: function onClick() {\n                    return handleNameInput(index, filter.name);\n                  },\n                  children: filter.name ? filter.name : '??'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, _this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"condition-container\",\n                children: [valueBoxIndex === index && filter.type !== Filter_Search_Types.DATE ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-container second-box\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"second-inner-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn click-element\",\n                      onClick: function onClick() {\n                        return updateFilterValue(index);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-check\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 19\n                    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn click-element\",\n                      onClick: function onClick() {\n                        return setShowValueBoxIndex(null);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-times\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 13\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 17\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"operator-box-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    title: \"Operator\",\n                    className: \"operator-container\",\n                    children: /*#__PURE__*/_jsxDEV(OperatorFilterDropDown, {\n                      compareOptions: FILTER_COMPARE_OPTIONS[filter.type],\n                      operator: filter.operator,\n                      changeOperator: function changeOperator(value) {\n                        return updateOperator(index, value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 15\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"task-search-input\",\n                    className: filter.type === Filter_Search_Types.DATE && inputDate ? 'date-with-value' : '',\n                    children: valueBoxIndex === index ? filter.type === Filter_Search_Types.DATE ? /*#__PURE__*/_jsxDEV(DatePicker, {\n                      selected: inputDate,\n                      onChange: function onChange(date) {\n                        return onUpDateInputdate(date, index);\n                      },\n                      showTimeSelect: true,\n                      isClearable: true,\n                      popperPlacement: \"bottom-start\",\n                      popperModifiers: {\n                        offset: {\n                          enabled: true,\n                          offset: \"5px, 10px\"\n                        },\n                        preventOverflow: {\n                          enabled: true,\n                          escapeWithReference: false,\n                          boundariesElement: \"viewport\"\n                        }\n                      },\n                      customInput: /*#__PURE__*/_jsxDEV(UpDateInputComponent, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 34\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 19\n                    }, _this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"filters\",\n                      placeholder: \"\",\n                      value: selectedFilterInputValue,\n                      onChange: function onChange(e) {\n                        return setSelectedFilterInputValue(e.target.value);\n                      },\n                      onKeyDown: function onKeyDown(e) {\n                        return handleFilterValueChange(e, index);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 21\n                    }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      title: \"Value\",\n                      className: \"click-element\",\n                      onClick: function onClick() {\n                        return handleValueInput(index, filter.value, filter.type);\n                      },\n                      children: filter.value !== (undefined || null || '') ? filter.type !== Filter_Search_Types.DATE ? filter.value.toString() : getFormattedDateAndTime(filter.value) : '??'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 19\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 13\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 13\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n}, \"tPm7G1OUOwgSE3TFsaxzM1/PWzA=\", false, function () {\n  return [useSelector];\n}));\n_c2 = TaskFilterSearch;\nexport default TaskFilterSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskFilterSearch$React.memo\");\n$RefreshReg$(_c2, \"TaskFilterSearch\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/list/search/TaskFilterSearch.js"],"names":["React","useEffect","useState","useSelector","FILTER_COMPARE_OPTIONS","Filter_Search_Types","OperatorFilterDropDown","TaskFilterSearchType","getFormattedDateAndTime","getISODateTime","DatePicker","TaskFilterSearch","memo","filterSelections","deleteSearchFilter","updateSearchFilterData","updateFilter","valueBoxIndex","setShowValueBoxIndex","nameBoxIndex","setShowNameBoxIndex","selectedFilterInputValue","setSelectedFilterInputValue","selectedFilterInputName","setSelectedFilterInputName","inputDate","setUpInputDate","filterTaskVariableArray","setFilterTaskVariableArray","taskVariable","setTaskVariable","selectedFilter","state","bpmTasks","properties","variables","filterTaskVariable","e","filter","task","index","name","includes","target","value","handleFilterValueChange","key","preventDefault","updateFilterValue","updateOperator","updateFilterName","handleFilterNameChange","handleValueInput","type","DATE","toString","Date","handleNameInput","handleFilterUpdate","onUpDateInputdate","updatedDate","UpDateInputComponent","forwardRef","ref","onClick","map","VARIABLES","variable","label","operator","date","offset","enabled","preventOverflow","escapeWithReference","boundariesElement","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,mBAAhC,QAA0D,+BAA1D;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAQC,uBAAR,EAAiCC,cAAjC,QAAsD,kDAAtD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,IAAMC,gBAAgB,gBAAGX,KAAK,CAACY,IAAN,SAAW,gBAAuF;AAAA;;AAAA,mCAArFC,gBAAqF;AAAA,MAArFA,gBAAqF,sCAAlE,EAAkE;AAAA,MAA9DC,kBAA8D,QAA9DA,kBAA8D;AAAA,MAA1CC,sBAA0C,QAA1CA,sBAA0C;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAEzH,kBAA8Cd,QAAQ,CAAC,IAAD,CAAtD;AAAA;AAAA,MAAOe,aAAP;AAAA,MAAsBC,oBAAtB;;AACA,mBAA4ChB,QAAQ,CAAC,IAAD,CAApD;AAAA;AAAA,MAAOiB,YAAP;AAAA,MAAqBC,mBAArB;;AACA,mBAAgElB,QAAQ,CAAC,EAAD,CAAxE;AAAA;AAAA,MAAOmB,wBAAP;AAAA,MAAiCC,2BAAjC;;AACA,mBAA8DpB,QAAQ,CAAC,EAAD,CAAtE;AAAA;AAAA,MAAOqB,uBAAP;AAAA,MAAgCC,0BAAhC;;AACA,mBAAoCtB,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOuB,SAAP;AAAA,MAAkBC,cAAlB;;AACA,oBAA2DxB,QAAQ,CAAC,EAAD,CAAnE;AAAA;AAAA,MAAOyB,uBAAP;AAAA,MAA+BC,0BAA/B;;AACA,oBAAqC1B,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAO2B,YAAP;AAAA,MAAoBC,eAApB;;AACA,MAAMC,cAAc,GAAG5B,WAAW,CAAC,UAAC6B,KAAD;AAAA,WAASA,KAAK,CAACC,QAAN,CAAeF,cAAxB;AAAA,GAAD,CAAlC;AAED9B,EAAAA,SAAS,CAAC,YAAI;AACb,QAAG8B,cAAH,EAAkB;AAAA;;AAChB,UAAMF,aAAY,GAAG,CAAAE,cAAc,SAAd,IAAAA,cAAc,WAAd,qCAAAA,cAAc,CAAEG,UAAhB,gFAA4BC,SAA5B,KAAyC,EAA9D;;AACEL,MAAAA,eAAe,CAACD,aAAD,CAAf;AACAD,MAAAA,0BAA0B,CAACC,aAAD,CAA1B;AACH;AAED,GAPQ,EAOP,CAACE,cAAD,CAPO,CAAT;;AASC,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAK;AAC9BT,IAAAA,0BAA0B,CAACC,YAAY,CAACS,MAAb,CAAoB,UAACC,IAAD,EAAMC,KAAN;AAAA,aAAcD,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAEE,IAAN,CAAWC,QAAX,CAAoBL,CAAC,CAACM,MAAF,CAASC,KAA7B,CAAd;AAAA,KAApB,CAAD,CAA1B;AACD,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACR,CAAD,EAAIG,KAAJ,EAAc;AAC5C,QAAIH,CAAC,CAACS,GAAF,KAAU,OAAd,EAAuB;AACrBT,MAAAA,CAAC,CAACU,cAAF;AACAC,MAAAA,iBAAiB,CAACR,KAAD,CAAjB;AACD;AACF,GALD;;AAOA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,KAAD,EAAW;AACnCzB,IAAAA,sBAAsB,CAACyB,KAAD,EAAQ,OAAR,EAAiBnB,wBAAjB,CAAtB;AACAH,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAI,IAAAA,2BAA2B,CAAC,EAAD,CAA3B;AACD,GAJD;;AAMA,MAAM2B,cAAc,GAAG,SAAjBA,cAAiB,CAACT,KAAD,EAAQI,KAAR,EAAkB;AACvC7B,IAAAA,sBAAsB,CAACyB,KAAD,EAAQ,UAAR,EAAoBI,KAApB,CAAtB;AACD,GAFD;;AAIA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACV,KAAD,EAAOI,KAAP,EAAiB;AACxC7B,IAAAA,sBAAsB,CAACyB,KAAD,EAAQ,MAAR,EAAgBI,KAAK,IAAErB,uBAAvB,CAAtB;AACAH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAI,IAAAA,0BAA0B,CAAC,EAAD,CAA1B;AACD,GAJD;;AAOA,MAAM2B,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACd,CAAD,EAAIG,KAAJ,EAAc;AAC3C,QAAIH,CAAC,CAACS,GAAF,KAAU,OAAd,EAAuB;AACrBT,MAAAA,CAAC,CAACU,cAAF;AACAG,MAAAA,gBAAgB,CAACV,KAAD,CAAhB;AACD;AACF,GALD;;AAOA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACZ,KAAD,EAA4B;AAAA,QAApBI,KAAoB,uEAAZ,EAAY;AAAA,QAATS,IAAS;AACnDnC,IAAAA,oBAAoB,CAACsB,KAAD,CAApB;AACAa,IAAAA,IAAI,KAAKhD,mBAAmB,CAACiD,IAA7B,GAAoChC,2BAA2B,CAACsB,KAAK,CAACW,QAAN,EAAD,CAA/D,GAAkF7B,cAAc,CAACkB,KAAK,GAAC,IAAIY,IAAJ,CAASZ,KAAT,CAAD,GAAiB,IAAvB,CAAhG;AACD,GAHD;;AAKA,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD,EAAuB;AAAA,QAAfI,KAAe,uEAAP,EAAO;AAC7CxB,IAAAA,mBAAmB,CAACoB,KAAD,CAAnB;AACAhB,IAAAA,0BAA0B,CAACoB,KAAD,CAA1B;AACD,GAHD;;AAKA,MAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACpB,MAAD,EAASE,KAAT,EAAmB;AAC5CxB,IAAAA,YAAY,CAACsB,MAAD,EAASE,KAAT,CAAZ;AACD,GAFD;;AAIA,MAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAcpB,KAAd,EAAwB;AAChDd,IAAAA,cAAc,CAACkC,WAAD,CAAd;AACA7C,IAAAA,sBAAsB,CAACyB,KAAD,EAAQ,OAAR,EAAiBoB,WAAW,GAAGnD,cAAc,CAACmD,WAAD,CAAjB,GAAiC,IAA7D,CAAtB;AACA1C,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAI,IAAAA,2BAA2B,CAAC,EAAD,CAA3B;AACA;AACD,GAND;;AAQA,MAAMuC,oBAAoB,gBAAG7D,KAAK,CAAC8D,UAAN,CAAiB,iBAAmBC,GAAnB,EAA2B;AAAA,QAAzBnB,KAAyB,SAAzBA,KAAyB;AAAA,QAAlBoB,OAAkB,SAAlBA,OAAkB;AACvE,wBAAO;AAAK,MAAA,OAAO,EAAEA,OAAd;AAAuB,MAAA,GAAG,EAAED,GAA5B;AAAA,8BACL;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,eADK,EAC2B,GAD3B,EAEJtC,SAAS,gBACN;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBjB,uBAAuB,CAACiB,SAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,eADM,GAEN,IAJC;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAMD,GAP4B,CAA7B;AASA,sBACE;AAAA,cACGZ,gBAAgB,CAACoD,GAAjB,CAAqB,UAAC3B,MAAD,EAASE,KAAT;AAAA,0BACpB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCAEE;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAgD,YAAA,OAAO,EAAE;AAAA,qBAAM1B,kBAAkB,CAACwB,MAAD,EAASE,KAAT,CAAxB;AAAA,aAAzD;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAE,eAAnC;AAAA,qCACA;AAAG,gBAAA,SAAS,EAAC,aAAb;AAA2B,+BAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAFF,eAQE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE,QAAC,oBAAD;AAAsB,cAAA,MAAM,EAAEF,MAA9B;AAAsC,cAAA,KAAK,EAAEE,KAA7C;AAAoD,cAAA,kBAAkB,EAAEkB;AAAxE;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA,sCACC;AAAM,gBAAA,SAAS,EAAC,eAAhB;AAAA,0BACCpB,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAAC6D,SAApC,IAAiD/C,YAAY,KAAKqB,KAAlE,gBAA0E;AAAA,0CACzE;AAAQ,oBAAA,SAAS,EAAC,mBAAlB;AAAsC,oBAAA,OAAO,EAAE;AAAA,6BAAMU,gBAAgB,CAACV,KAAD,CAAtB;AAAA,qBAA/C;AAAA,2CACE;AAAG,sBAAA,SAAS,EAAC,aAAb;AAA2B,qCAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BADyE,eAIzE;AAAQ,oBAAA,SAAS,EAAC,mBAAlB;AAAsC,oBAAA,OAAO,EAAE;AAAA,6BAAMpB,mBAAmB,CAAC,IAAD,CAAzB;AAAA,qBAA/C;AAAA,2CACE;AAAG,sBAAA,SAAS,EAAC,aAAb;AAA2B,qCAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAJyE;AAAA,gCAA1E,GAOK;AARN;AAAA;AAAA;AAAA;AAAA,uBADD,EAYGkB,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAAC6D,SAApC,GACC/C,YAAY,KAAKqB,KAAjB,gBAAwB;AAAA,wCACrB;AACC,kBAAA,IAAI,EAAC,MADN;AAEC,kBAAA,SAAS,EAAC,sBAFX;AAGC,kBAAA,WAAW,EAAC,EAHb;AAIC,kBAAA,KAAK,EAAEjB,uBAJR;AAKC,kBAAA,QAAQ,EAAE,kBAACc,CAAD,EAAM;AAACD,oBAAAA,kBAAkB,CAACC,CAAD,CAAlB;AAAuBb,oBAAAA,0BAA0B,CAACa,CAAC,CAACM,MAAF,CAASC,KAAV,CAA1B;AAA2C,mBALpF;AAMC,kBAAA,SAAS,EAAE,mBAACP,CAAD;AAAA,2BAAOc,sBAAsB,CAACd,CAAD,EAAIG,KAAJ,CAA7B;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,yBADqB,eASxB;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA,4BACCb,uBAAuB,CAACsC,GAAxB,CAA4B,UAACE,QAAD;AAAA,wCAC7B;AAEC,sBAAA,SAAS,EAAC,kCAFX;AAGC,sBAAA,OAAO,EAAE,mBAAI;AAAC3C,wBAAAA,0BAA0B,CAAC2C,QAAQ,CAAC1B,IAAV,CAA1B;AAA0CS,wBAAAA,gBAAgB,CAACV,KAAD,EAAO2B,QAAQ,CAAC1B,IAAhB,CAAhB;AAAsC,uBAH/F;AAIC,wCAAe,SAJhB;AAI0B,2CAAkB,KAJ5C;AAIkD,sBAAA,KAAK,YAAK0B,QAAQ,CAAC1B,IAAd,gBAAwB0B,QAAQ,CAACC,KAAjC,MAJvD;AAAA,6CAMD;AAAA,mCAAOD,QAAQ,CAAC1B,IAAhB,oBAAsB;AAAM,0BAAA,SAAS,EAAC,YAAhB;AAAA,2CAAgC0B,QAAQ,CAACC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AANC,uBACMD,QAAQ,CAACC,KADf;AAAA;AAAA;AAAA;AAAA,6BAD6B;AAAA,mBAA5B;AADD;AAAA;AAAA;AAAA;AAAA,yBATwB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAxB,gBAuBE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE;AAAQ,oCAAe,SAAvB;AAAiC,uCAAkB,KAAnD;AAAyD,kBAAA,KAAK,YAAK9B,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAArB,GAA4B,UAAjC,CAA9D;AAA6G,kBAAA,SAAS,EAAC,eAAvH;AACC,kBAAA,OAAO,EAAE;AAAA,2BAAMgB,eAAe,CAACjB,KAAD,EAAQF,MAAM,CAACG,IAAf,CAArB;AAAA,mBADV;AAAA,4BAEIH,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAArB,GAA4B;AAFhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAxBH,GA+BK,IA3CR,eA6CE;AAAM,gBAAA,SAAS,EAAC,qBAAhB;AAAA,2BACDxB,aAAa,KAAKuB,KAAlB,IAA2BF,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAACiD,IAA/D,gBACC;AAAM,kBAAA,SAAS,EAAC,0BAAhB;AAAA,yCACA;AAAM,oBAAA,SAAS,EAAC,kBAAhB;AAAA,4CAIE;AAAQ,sBAAA,SAAS,EAAC,mBAAlB;AAAsC,sBAAA,OAAO,EAAE;AAAA,+BAAMN,iBAAiB,CAACR,KAAD,CAAvB;AAAA,uBAA/C;AAAA,6CACJ;AAAG,wBAAA,SAAS,EAAC,aAAb;AAA2B,uCAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,6BAJF,eAOJ;AAAQ,sBAAA,SAAS,EAAC,mBAAlB;AAAsC,sBAAA,OAAO,EAAE;AAAA,+BAAMtB,oBAAoB,CAAC,IAAD,CAA1B;AAAA,uBAA/C;AAAA,6CACE;AAAG,wBAAA,SAAS,EAAC,aAAb;AAA2B,uCAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,yBADD,GAYS,IAbR,eAcJ;AAAK,kBAAA,SAAS,EAAC,wBAAf;AAAA,0CACA;AAAM,oBAAA,KAAK,EAAC,UAAZ;AAAuB,oBAAA,SAAS,EAAC,oBAAjC;AAAA,2CACE,QAAC,sBAAD;AAAwB,sBAAA,cAAc,EAAEd,sBAAsB,CAACkC,MAAM,CAACe,IAAR,CAA9D;AAA6E,sBAAA,QAAQ,EAAEf,MAAM,CAAC+B,QAA9F;AACE,sBAAA,cAAc,EAAE,wBAACzB,KAAD;AAAA,+BAAWK,cAAc,CAACT,KAAD,EAAQI,KAAR,CAAzB;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BADA,eAMA;AAAM,oBAAA,EAAE,EAAC,mBAAT;AAA6B,oBAAA,SAAS,EAAEN,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAACiD,IAApC,IAA4C7B,SAA5C,GAAsD,iBAAtD,GAAwE,EAAhH;AAAA,8BACGR,aAAa,KAAKuB,KAAlB,GACGF,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAACiD,IAApC,gBACA,QAAC,UAAD;AACE,sBAAA,QAAQ,EAAE7B,SADZ;AAEE,sBAAA,QAAQ,EAAE,kBAAC6C,IAAD;AAAA,+BAAUX,iBAAiB,CAACW,IAAD,EAAO9B,KAAP,CAA3B;AAAA,uBAFZ;AAGE,sBAAA,cAAc,MAHhB;AAIE,sBAAA,WAAW,MAJb;AAKE,sBAAA,eAAe,EAAC,cALlB;AAME,sBAAA,eAAe,EAAE;AACf+B,wBAAAA,MAAM,EAAE;AACNC,0BAAAA,OAAO,EAAE,IADH;AAEND,0BAAAA,MAAM,EAAE;AAFF,yBADO;AAKfE,wBAAAA,eAAe,EAAE;AACfD,0BAAAA,OAAO,EAAE,IADM;AAEfE,0BAAAA,mBAAmB,EAAE,KAFN;AAGfC,0BAAAA,iBAAiB,EAAE;AAHJ;AALF,uBANnB;AAiBE,sBAAA,WAAW,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAjBf;AAAA;AAAA;AAAA;AAAA,6BADA,gBAoBE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,SAAS,EAAC,SAFZ;AAGE,sBAAA,WAAW,EAAC,EAHd;AAIE,sBAAA,KAAK,EAAEtD,wBAJT;AAKE,sBAAA,QAAQ,EAAE,kBAACgB,CAAD;AAAA,+BAAOf,2BAA2B,CAACe,CAAC,CAACM,MAAF,CAASC,KAAV,CAAlC;AAAA,uBALZ;AAME,sBAAA,SAAS,EAAE,mBAAAP,CAAC;AAAA,+BAAIQ,uBAAuB,CAACR,CAAD,EAAIG,KAAJ,CAA3B;AAAA;AANd;AAAA;AAAA;AAAA;AAAA,6BArBL,gBA6BG;AAAM,sBAAA,KAAK,EAAC,OAAZ;AAAoB,sBAAA,SAAS,EAAC,eAA9B;AACM,sBAAA,OAAO,EAAE;AAAA,+BAAMY,gBAAgB,CAACZ,KAAD,EAAQF,MAAM,CAACM,KAAf,EAAsBN,MAAM,CAACe,IAA7B,CAAtB;AAAA,uBADf;AAAA,gCAECf,MAAM,CAACM,KAAP,MAAgBgC,SAAS,IAAE,IAAX,IAAiB,EAAjC,IAAwCtC,MAAM,CAACe,IAAP,KAAgBhD,mBAAmB,CAACiD,IAApC,GAA2ChB,MAAM,CAACM,KAAP,CAAaW,QAAb,EAA3C,GAAqE/C,uBAAuB,CAAC8B,MAAM,CAACM,KAAR,CAApI,GAAsJ;AAFvJ;AAAA;AAAA;AAAA;AAAA;AA9BN;AAAA;AAAA;AAAA;AAAA,2BANA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdI;AAAA;AAAA;AAAA;AAAA;AAAA,uBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAqCJ,KAArC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,eADoB;AAAA,KAArB;AADH,mBADF;AA0HD,CAhNwB;AAAA,UASArC,WATA;AAAA,GAAzB;MAAMQ,gB;AAkNN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {FILTER_COMPARE_OPTIONS, Filter_Search_Types} from \"../../constants/taskConstants\";\r\nimport OperatorFilterDropDown from \"../../filter/OperatorFilterDropdown\";\r\nimport TaskFilterSearchType from \"./TaskFilterSearchType\";\r\nimport {getFormattedDateAndTime, getISODateTime} from \"../../../../apiManager/services/formatterService\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst TaskFilterSearch = React.memo(({filterSelections = [], deleteSearchFilter, updateSearchFilterData, updateFilter}) => {\r\n\r\n  const [valueBoxIndex, setShowValueBoxIndex] = useState(null);\r\n  const [nameBoxIndex, setShowNameBoxIndex] = useState(null);\r\n  const [selectedFilterInputValue, setSelectedFilterInputValue] = useState('');\r\n  const [selectedFilterInputName, setSelectedFilterInputName] = useState('');\r\n  const [inputDate, setUpInputDate] = useState(null);\r\n  const [filterTaskVariableArray,setFilterTaskVariableArray]=useState([])\r\n  const [taskVariable,setTaskVariable]=useState([])\r\n  const selectedFilter = useSelector((state)=>state.bpmTasks.selectedFilter)\r\n\r\n useEffect(()=>{\r\n  if(selectedFilter){\r\n    const taskVariable = selectedFilter?.properties?.variables || [];\r\n      setTaskVariable(taskVariable)\r\n      setFilterTaskVariableArray(taskVariable)\r\n  }\r\n \r\n },[selectedFilter]);\r\n\r\n  const filterTaskVariable = (e)=>{\r\n    setFilterTaskVariableArray(taskVariable.filter((task,index)=>task?.name.includes(e.target.value)))\r\n  }\r\n\r\n  const handleFilterValueChange = (e, index) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      updateFilterValue(index);\r\n    }\r\n  };\r\n\r\n  const updateFilterValue = (index) => {\r\n    updateSearchFilterData(index, 'value', selectedFilterInputValue);\r\n    setShowValueBoxIndex(null);\r\n    setSelectedFilterInputValue('');\r\n  };\r\n\r\n  const updateOperator = (index, value) => {\r\n    updateSearchFilterData(index, 'operator', value);\r\n  };\r\n\r\n  const updateFilterName = (index,value) => {\r\n    updateSearchFilterData(index, 'name', value||selectedFilterInputName);\r\n    setShowNameBoxIndex(null);\r\n    setSelectedFilterInputName('');\r\n  };\r\n\r\n\r\n  const handleFilterNameChange = (e, index) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      updateFilterName(index);\r\n    }\r\n  };\r\n\r\n  const handleValueInput = (index, value = '',type) => {\r\n    setShowValueBoxIndex(index);\r\n    type !== Filter_Search_Types.DATE ? setSelectedFilterInputValue(value.toString()):setUpInputDate(value?new Date(value):null);\r\n  }\r\n\r\n  const handleNameInput = (index, value = '') => {\r\n    setShowNameBoxIndex(index);\r\n    setSelectedFilterInputName(value);\r\n  };\r\n\r\n  const handleFilterUpdate = (filter, index) => {\r\n    updateFilter(filter, index);\r\n  }\r\n\r\n  const onUpDateInputdate = (updatedDate, index) => {\r\n    setUpInputDate(updatedDate);\r\n    updateSearchFilterData(index, 'value', updatedDate ? getISODateTime(updatedDate) : null);\r\n    setShowValueBoxIndex(null);\r\n    setSelectedFilterInputValue('');\r\n    /*followUpDate?getISODateTime(followUpDate):null*/\r\n  };\r\n\r\n  const UpDateInputComponent = React.forwardRef(({value, onClick}, ref) => {\r\n    return <div onClick={onClick} ref={ref}>\r\n      <i className=\"fa fa-calendar\"/>{\" \"}\r\n      {inputDate\r\n        ? <span className=\"mr-4\">{getFormattedDateAndTime(inputDate)}</span>\r\n        : \"??\"}\r\n    </div>\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {filterSelections.map((filter, index) => (\r\n        <div key={index}>\r\n          <div className=\"filter-details\" key={index}>\r\n\r\n            <div className=\"close-container  click-element\" onClick={() => deleteSearchFilter(filter, index)}>\r\n              <span className=\"close-btn\" title={\"Remove search\"}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n             </span>\r\n            </div>\r\n\r\n            <div className=\"box-container\">\r\n              <TaskFilterSearchType filter={filter} index={index} handleFilterUpdate={handleFilterUpdate}/>\r\n              <span>\r\n               <span className=\"btn-container\">\r\n               {filter.type === Filter_Search_Types.VARIABLES && nameBoxIndex === index ? <>\r\n                 <button className=\"btn click-element\" onClick={() => updateFilterName(index)}>\r\n                   <i className=\"fa fa-check\" aria-hidden=\"true\"/>\r\n                 </button>\r\n                 <button className=\"btn click-element\" onClick={() => setShowNameBoxIndex(null)}>\r\n                   <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n                 </button>\r\n               </> : null\r\n               }\r\n               </span>\r\n                {filter.type === Filter_Search_Types.VARIABLES ?\r\n                  nameBoxIndex === index ?<div>\r\n                     <input\r\n                      type=\"text\"\r\n                      className=\"filters position-box\"\r\n                      placeholder=\"\"\r\n                      value={selectedFilterInputName}\r\n                      onChange={(e) =>{filterTaskVariable(e); setSelectedFilterInputName(e.target.value)}}\r\n                      onKeyDown={(e) => handleFilterNameChange(e, index)}\r\n                    />\r\n                  <div className=\"filter-items variable-filter-item\"  >\r\n                  {filterTaskVariableArray.map((variable) => (\r\n                  <div\r\n                   key={variable.label}\r\n                   className=\"clickable p-0 mb-2 text-truncate\"\r\n                   onClick={()=>{setSelectedFilterInputName(variable.name);updateFilterName(index,variable.name)}}\r\n                   data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title={`${variable.name}  (${variable.label})`}\r\n                  >\r\n                 <span>{variable.name} <span className=\"text-muted\"> ({variable.label})</span></span> \r\n                 </div>\r\n                  ))}\r\n                  </div>\r\n                 </div>\r\n                    :\r\n                    <div className=\"text-truncate\" >\r\n                      <span   data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title={`${filter.name ? filter.name : 'property'}`} className=\"click-element\"\r\n                       onClick={() => handleNameInput(index, filter.name)}>\r\n                         {filter.name ? filter.name : '??'}\r\n                      </span>\r\n                             \r\n                    </div>\r\n                    : null}\r\n\r\n                <span className=\"condition-container\">\r\n              {valueBoxIndex === index && filter.type !== Filter_Search_Types.DATE ?\r\n                <span className=\"btn-container second-box\">\r\n                <span className=\"second-inner-box\">\r\n              {/*{filter.type === Filter_Search_Types.VARIABLES ? <button className=\"btn\">\r\n                <i className=\"fa fa-calendar\" aria-hidden=\"true\"/>\r\n              </button> : null}*/}\r\n                  <button className=\"btn click-element\" onClick={() => updateFilterValue(index)}>\r\n              <i className=\"fa fa-check\" aria-hidden=\"true\"/>\r\n            </button>\r\n            <button className=\"btn click-element\" onClick={() => setShowValueBoxIndex(null)}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n            </button></span>\r\n              </span> : null}\r\n            <div className=\"operator-box-container\">\r\n            <span title=\"Operator\" className=\"operator-container\">\r\n              <OperatorFilterDropDown compareOptions={FILTER_COMPARE_OPTIONS[filter.type]} operator={filter.operator}\r\n                changeOperator={(value) => updateOperator(index, value)}/>\r\n            </span>\r\n\r\n            <span id=\"task-search-input\" className={filter.type === Filter_Search_Types.DATE && inputDate?'date-with-value':''}>\r\n              {valueBoxIndex === index ? (\r\n                  filter.type === Filter_Search_Types.DATE ?\r\n                  <DatePicker\r\n                    selected={inputDate}\r\n                    onChange={(date) => onUpDateInputdate(date, index)}\r\n                    showTimeSelect\r\n                    isClearable\r\n                    popperPlacement=\"bottom-start\"\r\n                    popperModifiers={{\r\n                      offset: {\r\n                        enabled: true,\r\n                        offset: \"5px, 10px\"\r\n                      },\r\n                      preventOverflow: {\r\n                        enabled: true,\r\n                        escapeWithReference: false,\r\n                        boundariesElement: \"viewport\"\r\n                      }\r\n                    }}\r\n                    customInput={<UpDateInputComponent/>}\r\n                  /> :\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"filters\"\r\n                      placeholder=\"\"\r\n                      value={selectedFilterInputValue}\r\n                      onChange={(e) => setSelectedFilterInputValue(e.target.value)}\r\n                      onKeyDown={e => handleFilterValueChange(e, index)}\r\n                    />)\r\n                : <span title=\"Value\" className=\"click-element\"\r\n                        onClick={() => handleValueInput(index, filter.value, filter.type)}>\r\n                  {filter.value!==(undefined||null||'') ? (filter.type !== Filter_Search_Types.DATE ? filter.value.toString() : getFormattedDateAndTime(filter.value)) : '??'}</span>}\r\n             </span>\r\n             </div>\r\n             </span>\r\n             </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>)\r\n\r\n});\r\n\r\nexport default TaskFilterSearch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}