{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Steps\\\\PreviewStepper.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useSelector } from \"react-redux\";\nimport SaveNext from \"./SaveNext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Preview = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var handleNext = _ref.handleNext,\n      handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      steps = _ref.steps,\n      processData = _ref.processData,\n      setProcessData = _ref.setProcessData,\n      workflow = _ref.workflow,\n      formData = _ref.formData,\n      submitData = _ref.submitData;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var processListData = useSelector(function (state) {\n    return state.process.formProcessList;\n  }); //  taking the url and make the copy button\n\n  var copyPublicUrl = function copyPublicUrl() {\n    var _navigator$clipboard;\n\n    var hostName = window.location.host;\n    var url = \"\".concat(hostName, \"/public/form/\").concat(formData.form.path);\n    (_navigator$clipboard = navigator.clipboard) === null || _navigator$clipboard === void 0 ? void 0 : _navigator$clipboard.writeText(url).then(function () {\n      setCopied(function () {\n        setTimeout(function () {\n          setCopied(false);\n        }, 3000);\n        return true;\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"baseline\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1,\n        spacing: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        spacing: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        className: \"next-btn\",\n        children: /*#__PURE__*/_jsxDEV(SaveNext, {\n          handleBack: handleBack,\n          handleNext: handleNext,\n          activeStep: activeStep,\n          steps: steps,\n          submitData: submitData,\n          isLastStep: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        spacing: 3,\n        disabled: false,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-weight-bolder\",\n                  children: \"Form Name : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formData && formData.form && formData.form.title ? formData.form.title : \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-weight-bolder\",\n                  children: \"Workflow Name : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: workflow && workflow.label ? workflow.label : \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, _this), processListData.anonymous && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Copy anonymous form URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  \"data-toggle\": \"tooltip\",\n                  \"data-placement\": \"top\",\n                  title: copied ? \"URL copied\" : \"Click Here to Copy\",\n                  className: \"coursor-pointer btn \".concat(copied ? 'text-success' : 'text-primary'),\n                  onClick: function onClick() {\n                    copyPublicUrl();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"\".concat(copied ? 'fa fa-check' : 'fa fa-copy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: processData.status === \"active\",\n                      onChange: function onChange(e) {\n                        return setProcessData({\n                          status: e.target.checked ? \"active\" : \"inactive\"\n                        });\n                      },\n                      name: \"Check box to associate form with a workflow\",\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 27\n                    }, _this),\n                    label: \"Publish this form for Client Users.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-label\",\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"comments\" // label=\"Multiline\"\n                ,\n                multiline: true,\n                rows: 4,\n                variant: \"outlined\",\n                className: \"text-field\",\n                value: processData.comments || \"\",\n                onChange: function onChange(e) {\n                  return setProcessData({\n                    comments: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, _this);\n}, \"T3c2fdyzlyhtW297fihfu6ZSTtk=\", false, function () {\n  return [useSelector];\n}));\n_c2 = Preview;\nexport default Preview;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Preview$React.memo\");\n$RefreshReg$(_c2, \"Preview\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/Form/Steps/PreviewStepper.js"],"names":["React","useState","Checkbox","FormControlLabel","Grid","Card","CardContent","TextField","useSelector","SaveNext","Preview","memo","handleNext","handleBack","activeStep","steps","processData","setProcessData","workflow","formData","submitData","copied","setCopied","processListData","state","process","formProcessList","copyPublicUrl","hostName","window","location","host","url","form","path","navigator","clipboard","writeText","then","setTimeout","catch","err","console","log","title","label","anonymous","status","e","target","checked","comments","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport SaveNext from \"./SaveNext\";\r\n\r\nconst Preview = React.memo(\r\n  ({\r\n    handleNext,\r\n    handleBack,\r\n    activeStep,\r\n    steps,\r\n    processData,\r\n    setProcessData,\r\n    workflow,\r\n    formData,\r\n    submitData\r\n  }) => {\r\n    const [copied, setCopied] = useState(false);\r\n    const processListData = useSelector((state)=>state.process.formProcessList)\r\n    //  taking the url and make the copy button\r\n    const copyPublicUrl = () => {\r\n      const hostName = window.location.host;\r\n      const url = `${hostName}/public/form/${formData.form.path}`;\r\n      navigator.clipboard?.writeText(url).then(()=>{\r\n        setCopied(()=>{\r\n          setTimeout(()=>{\r\n            setCopied(false)\r\n          },3000)\r\n          return true\r\n        });\r\n      }).catch((err)=>{\r\n        console.log(err)\r\n      })\r\n\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"baseline\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12} sm={1} spacing={3}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8} spacing={3} />\r\n          <Grid item xs={12} sm={3} className=\"next-btn\">\r\n            <SaveNext\r\n              handleBack={handleBack}\r\n              handleNext={handleNext}\r\n              activeStep={activeStep}\r\n              steps={steps}\r\n              submitData={submitData}\r\n              isLastStep={true}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8} spacing={3} disabled={false}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <form noValidate autoComplete=\"off\">\r\n                  <div>\r\n                    <span className=\"font-weight-bolder\">Form Name : </span>\r\n                    <span>\r\n                      {formData && formData.form && formData.form.title\r\n                        ? formData.form.title\r\n                        : \"-\"}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"font-weight-bolder\">Workflow Name : </span>\r\n                    <span>\r\n                      {workflow && workflow.label ? workflow.label : \"-\"}\r\n                    </span>\r\n                  </div>\r\n                  {processListData.anonymous && (\r\n                    <div>\r\n                      <span>Copy anonymous form URL</span>\r\n                      <div\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title={copied ? \"URL copied\" : \"Click Here to Copy\"}\r\n                        className={`coursor-pointer btn ${copied?'text-success':'text-primary'}`}\r\n                        onClick={() => {\r\n                          copyPublicUrl();\r\n                        }}\r\n                      >\r\n                        <i className={`${copied?'fa fa-check':'fa fa-copy'}`}/>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                    <label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={processData.status === \"active\"}\r\n                            onChange={(e) =>\r\n                              setProcessData({\r\n                                status: e.target.checked\r\n                                  ? \"active\"\r\n                                  : \"inactive\",\r\n                              })\r\n                            }\r\n                            name=\"Check box to associate form with a workflow\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"Publish this form for Client Users.\"\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <label className=\"text-label\">Comments</label>\r\n                  <TextField\r\n                    id=\"comments\"\r\n                    // label=\"Multiline\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"text-field\"\r\n                    value={processData.comments || \"\"}\r\n                    onChange={(e) =>\r\n                      setProcessData({\r\n                        comments: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nexport default Preview;\r\n"]},"metadata":{},"sourceType":"module"}