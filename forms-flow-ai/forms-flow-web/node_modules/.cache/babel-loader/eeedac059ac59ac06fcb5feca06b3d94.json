{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Item\\\\View.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors, getForm, Formio } from \"react-formio\";\nimport { push } from \"connected-react-router\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"../../../containers/Loading\";\nimport { getProcessReq } from \"../../../apiManager/services/bpmServices\";\nimport { setFormFailureErrorData, setFormRequestData, setFormSubmissionError, setFormSubmissionLoading, setFormSuccessData, setMaintainBPMFormPagination } from \"../../../actions/formActions\";\nimport SubmissionError from \"../../../containers/SubmissionError\";\nimport { applicationCreate, publicApplicationCreate, publicApplicationStatus } from \"../../../apiManager/services/applicationServices\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { CUSTOM_EVENT_TYPE } from \"../../ServiceFlow/constants/customEventTypes\";\nimport { toast } from \"react-toastify\";\nimport { setFormSubmitted } from \"../../../actions/formActions\";\nimport { fetchFormByAlias } from \"../../../apiManager/services/bpmFormServices\";\nimport { checkIsObjectId } from \"../../../apiManager/services/formatterService\";\nimport { setPublicStatusLoading } from \"../../../actions/applicationActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar View = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  var isFormSubmissionLoading = useSelector(function (state) {\n    return state.formDelete.isFormSubmissionLoading;\n  });\n  var isPublicStatusLoading = useSelector(function (state) {\n    return state.applications.isPublicStatusLoading;\n  });\n  var isFormSubmitted = useSelector(function (state) {\n    return state.formDelete.formSubmitted;\n  });\n  var publicFormStatus = useSelector(function (state) {\n    return state.formDelete.publicFormStatus;\n  });\n  var isPublic = window.location.href.includes(\"public\"); //need to remove\n\n  var _useParams = useParams(),\n      formId = _useParams.formId;\n\n  var _useState = useState('checking'),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPublicForm = _useState2[0],\n      setShowPublicForm = _useState2[1];\n\n  var isAuthenticated = props.isAuthenticated,\n      submission = props.submission,\n      hideComponents = props.hideComponents,\n      _onSubmit = props.onSubmit,\n      onCustomEvent = props.onCustomEvent,\n      errors = props.errors,\n      options = props.options,\n      _props$form = props.form,\n      form = _props$form.form,\n      isActive = _props$form.isActive,\n      url = _props$form.url;\n  var dispatch = useDispatch();\n  var getPublicForm = useCallback(function (form_id, isObjectId, formObj) {\n    dispatch(setPublicStatusLoading(true));\n    dispatch(publicApplicationStatus(form_id, function (err, res) {\n      dispatch(setPublicStatusLoading(false));\n\n      if (!err) {\n        if (isPublic) {\n          if (isObjectId) {\n            dispatch(getForm(\"form\", form_id));\n          } else {\n            dispatch(setFormRequestData('form', form_id, \"\".concat(Formio.getProjectUrl(), \"/form/\").concat(form_id)));\n            dispatch(setFormSuccessData('form', formObj));\n          }\n        }\n      }\n    }));\n  }, [dispatch, isPublic]);\n  var getFormData = useCallback(function () {\n    var isObjectId = checkIsObjectId(formId);\n\n    if (isObjectId) {\n      getPublicForm(formId, isObjectId);\n    } else {\n      dispatch(fetchFormByAlias(formId, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(err, formObj) {\n          var form_id;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!err) {\n                    form_id = formObj._id;\n                    getPublicForm(form_id, isObjectId, formObj);\n                  } else {\n                    dispatch(setFormFailureErrorData('form', err));\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    }\n  }, [formId, dispatch, getPublicForm]);\n  useEffect(function () {\n    if (isPublic) {\n      getFormData();\n    } else {\n      dispatch(setMaintainBPMFormPagination(true));\n    }\n  }, [isPublic, dispatch, getFormData]);\n  useEffect(function () {\n    if (publicFormStatus) {\n      if (publicFormStatus.anonymous === true && publicFormStatus.status === \"active\") {\n        setShowPublicForm(true);\n      } else {\n        setShowPublicForm(false);\n      }\n    }\n  }, [publicFormStatus]);\n\n  if (isActive || isPublicStatusLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loading-view-component\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (isFormSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for your response.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"saved successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (isPublic && !showPublicForm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-4\",\n      role: \"alert\",\n      children: \"Form not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(SubmissionError, {\n        modalOpen: props.submissionError.modalOpen,\n        message: props.submissionError.message,\n        onConfirm: props.onConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, _this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/form\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-chevron-left fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, _this) : null, form.title ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-head-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-wpforms\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, _this), \" \\xA0 Forms /\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, _this), \" \", form.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, _this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Errors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isFormSubmissionLoading,\n      spinner: true,\n      text: \"Loading...\",\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-4 mr-4\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          submission: submission,\n          url: url,\n          options: _objectSpread({}, options),\n          hideComponents: hideComponents,\n          onSubmit: function onSubmit(data) {\n            _onSubmit(data, form._id);\n          },\n          onCustomEvent: onCustomEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, _this);\n}, \"BbmadVS5wLzjYOqgHrcR0/eijFY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useParams, useDispatch];\n}));\n_c2 = View;\n\nvar doProcessActions = function doProcessActions(submission, ownProps) {\n  return function (dispatch, getState) {\n    var user = getState().user.userDetail;\n    var form = getState().form.form;\n    var IsAuth = getState().user.isAuthenticated;\n    dispatch(resetSubmissions(\"submission\"));\n    var data = getProcessReq(form, submission._id, \"new\", user);\n    var isPublic = window.location.href.includes(\"public\");\n\n    if (isPublic) {\n      // this is for anonymous\n      dispatch(publicApplicationCreate(data, function (err, res) {\n        if (!err) {\n          dispatch(setFormSubmissionLoading(false));\n          toast.success(\"Submission Saved.\");\n          dispatch(setFormSubmitted(true));\n        } else {\n          //TO DO Update to show error message\n          dispatch(setFormSubmissionLoading(false));\n          toast.error(\"Submission failed\"); // dispatch(setFormSubmitted())\n          // dispatch(push(`/public/submitted`));\n        }\n      }));\n    } else {\n      dispatch(applicationCreate(data, function (err, res) {\n        if (!err) {\n          if (IsAuth) {\n            dispatch(setFormSubmissionLoading(false));\n            dispatch(setMaintainBPMFormPagination(true));\n            /*dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`))*/\n\n            toast.success(\"Submission Saved.\");\n            dispatch(push(\"/form\"));\n          } else {\n            dispatch(setFormSubmissionLoading(false));\n          }\n        } else {\n          //TO DO Update to show error message\n          if (IsAuth) {\n            dispatch(setFormSubmissionLoading(false));\n            dispatch(setMaintainBPMFormPagination(true)); //dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`))\n\n            toast.success(\"Submission Saved.\");\n            dispatch(push(\"/form\"));\n          } else {\n            dispatch(setFormSubmissionLoading(false));\n          }\n        }\n      }));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.userDetail,\n    form: selectRoot(\"form\", state),\n    isAuthenticated: state.user.isAuthenticated,\n    errors: [selectError(\"form\", state), selectError(\"submission\", state)],\n    options: {\n      noAlerts: false,\n      i18n: {\n        en: {\n          error: \"Please fix the errors before submitting again.\"\n        }\n      }\n    },\n    submissionError: selectRoot(\"formDelete\", state).formSubmissionError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onSubmit: function onSubmit(submission, formId) {\n      dispatch(setFormSubmissionLoading(true));\n      dispatch(saveSubmission(\"submission\", submission, formId, function (err, submission) {\n        if (!err) {\n          dispatch(doProcessActions(submission, ownProps));\n        } else {\n          var ErrorDetails = {\n            modalOpen: true,\n            message: \"Submission cannot be done\"\n          };\n          toast.error(\"Error while Submission.\");\n          dispatch(setFormSubmissionLoading(false));\n          dispatch(setFormSubmissionError(ErrorDetails));\n        }\n      }));\n    },\n    onCustomEvent: function onCustomEvent(customEvent) {\n      switch (customEvent.type) {\n        case CUSTOM_EVENT_TYPE.CUSTOM_SUBMIT_DONE:\n          toast.success(\"Submission Saved.\");\n          dispatch(push(\"/form\"));\n          break;\n\n        case CUSTOM_EVENT_TYPE.CANCEL_SUBMISSION:\n          dispatch(push(\"/form\"));\n          break;\n\n        default:\n          return;\n      }\n    },\n    onConfirm: function onConfirm() {\n      var ErrorDetails = {\n        modalOpen: false,\n        message: \"\"\n      };\n      dispatch(setFormSubmissionError(ErrorDetails));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"View$React.memo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/components/Form/Item/View.js"],"names":["React","useCallback","useEffect","useState","connect","useDispatch","useSelector","selectRoot","resetSubmissions","saveSubmission","Form","selectError","Errors","getForm","Formio","push","Link","useParams","Loading","getProcessReq","setFormFailureErrorData","setFormRequestData","setFormSubmissionError","setFormSubmissionLoading","setFormSuccessData","setMaintainBPMFormPagination","SubmissionError","applicationCreate","publicApplicationCreate","publicApplicationStatus","LoadingOverlay","CUSTOM_EVENT_TYPE","toast","setFormSubmitted","fetchFormByAlias","checkIsObjectId","setPublicStatusLoading","View","memo","props","isFormSubmissionLoading","state","formDelete","isPublicStatusLoading","applications","isFormSubmitted","formSubmitted","publicFormStatus","isPublic","window","location","href","includes","formId","showPublicForm","setShowPublicForm","isAuthenticated","submission","hideComponents","onSubmit","onCustomEvent","errors","options","form","isActive","url","dispatch","getPublicForm","form_id","isObjectId","formObj","err","res","getProjectUrl","getFormData","_id","anonymous","status","submissionError","modalOpen","message","onConfirm","title","data","doProcessActions","ownProps","getState","user","userDetail","IsAuth","success","error","mapStateToProps","noAlerts","i18n","en","formSubmissionError","mapDispatchToProps","ErrorDetails","customEvent","type","CUSTOM_SUBMIT_DONE","CANCEL_SUBMISSION"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectRoot,\r\n  resetSubmissions,\r\n  saveSubmission,\r\n  Form,\r\n  selectError,\r\n  Errors,\r\n  getForm, Formio,\r\n} from \"react-formio\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../../containers/Loading\";\r\nimport { getProcessReq } from \"../../../apiManager/services/bpmServices\";\r\nimport {\r\n  setFormFailureErrorData,\r\n  setFormRequestData,\r\n  setFormSubmissionError,\r\n  setFormSubmissionLoading, setFormSuccessData,\r\n  setMaintainBPMFormPagination,\r\n} from \"../../../actions/formActions\";\r\nimport SubmissionError from \"../../../containers/SubmissionError\";\r\nimport {\r\n  applicationCreate,\r\n  publicApplicationCreate,\r\n  publicApplicationStatus,\r\n} from \"../../../apiManager/services/applicationServices\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { CUSTOM_EVENT_TYPE } from \"../../ServiceFlow/constants/customEventTypes\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  setFormSubmitted\r\n} from \"../../../actions/formActions\";\r\nimport { fetchFormByAlias } from \"../../../apiManager/services/bpmFormServices\";\r\nimport {checkIsObjectId} from \"../../../apiManager/services/formatterService\";\r\nimport { setPublicStatusLoading } from \"../../../actions/applicationActions\";\r\n\r\n\r\nconst View = React.memo((props) => {\r\n  const isFormSubmissionLoading = useSelector(\r\n    (state) => state.formDelete.isFormSubmissionLoading\r\n  );\r\n  const isPublicStatusLoading = useSelector(\r\n    (state) => state.applications.isPublicStatusLoading\r\n  );\r\n\r\n  const isFormSubmitted = useSelector(\r\n    (state) => state.formDelete.formSubmitted\r\n  );\r\n  const publicFormStatus = useSelector(\r\n    (state) => state.formDelete.publicFormStatus\r\n  );\r\n  const isPublic = window.location.href.includes(\"public\"); //need to remove\r\n  const { formId } = useParams();\r\n  const [showPublicForm, setShowPublicForm] = useState('checking');\r\n\r\n  const {\r\n    isAuthenticated,\r\n    submission,\r\n    hideComponents,\r\n    onSubmit,\r\n    onCustomEvent,\r\n    errors,\r\n    options,\r\n    form: { form, isActive, url },\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const getPublicForm = useCallback((form_id, isObjectId, formObj) => {\r\n    dispatch(setPublicStatusLoading(true));\r\n    dispatch(\r\n      publicApplicationStatus(form_id, (err, res) => {\r\n        dispatch(setPublicStatusLoading(false));\r\n        if(!err)\r\n        {\r\n        if (isPublic) {\r\n          if(isObjectId){\r\n            dispatch(getForm(\"form\", form_id));\r\n          }\r\n          else{\r\n            dispatch(setFormRequestData('form',form_id,`${Formio.getProjectUrl()}/form/${form_id}`));\r\n            dispatch(setFormSuccessData('form',formObj));\r\n          }\r\n        }\r\n\r\n        }\r\n      })\r\n    );\r\n  },[dispatch,isPublic]);\r\n\r\n  const getFormData = useCallback( () => {\r\n    const isObjectId = checkIsObjectId(formId);\r\n    if (isObjectId) {\r\n      getPublicForm(formId,isObjectId);\r\n    } else {\r\n      dispatch(\r\n        fetchFormByAlias(formId, async (err, formObj) => {\r\n          if (!err) {\r\n            const form_id = formObj._id;\r\n            getPublicForm(form_id,isObjectId,formObj);\r\n          }else{\r\n            dispatch(setFormFailureErrorData('form',err));\r\n          }\r\n        })\r\n      );\r\n    }\r\n  },[formId,dispatch,getPublicForm])\r\n\r\n\r\n  useEffect(() => {\r\n    if (isPublic) {\r\n      getFormData();\r\n    } else {\r\n      dispatch(setMaintainBPMFormPagination(true));\r\n    }\r\n  }, [isPublic, dispatch,getFormData]);\r\n\r\n  useEffect(()=>{\r\n    if(publicFormStatus){\r\n      if(publicFormStatus.anonymous===true && publicFormStatus.status===\"active\" ){\r\n        setShowPublicForm(true);\r\n      }else{\r\n        setShowPublicForm(false);\r\n      }\r\n    }\r\n  },[publicFormStatus])\r\n\r\n  if (isActive || isPublicStatusLoading) {\r\n    return (\r\n      <div data-testid=\"loading-view-component\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isFormSubmitted) {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <h1>Thank you for your response.</h1>\r\n        <p>saved successfully</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isPublic && !showPublicForm) {\r\n    return (\r\n      <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n        Form not available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container overflow-y-auto\">\r\n      <div className=\"main-header\">\r\n        <SubmissionError\r\n          modalOpen={props.submissionError.modalOpen}\r\n          message={props.submissionError.message}\r\n          onConfirm={props.onConfirm}\r\n        ></SubmissionError>\r\n        {isAuthenticated ? (\r\n          <Link to=\"/form\">\r\n            <i className=\"fa fa-chevron-left fa-lg\" />\r\n          </Link>\r\n        ) : null}\r\n        {/*   <span className=\"ml-3\">\r\n            <img src=\"/form.svg\" width=\"30\" height=\"30\" alt=\"form\" />\r\n          </span>*/}\r\n        {form.title ? (\r\n          <h3 className=\"ml-3\">\r\n            <span className=\"task-head-details\">\r\n              <i className=\"fa fa-wpforms\" aria-hidden=\"true\" /> &nbsp; Forms /\r\n            </span>{\" \"}\r\n            {form.title}\r\n          </h3>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Errors errors={errors} />\r\n      <LoadingOverlay\r\n        active={isFormSubmissionLoading }\r\n        spinner\r\n        text=\"Loading...\"\r\n        className=\"col-12\"\r\n      >\r\n        <div className=\"ml-4 mr-4\">\r\n          <Form\r\n            form={form}\r\n            submission={submission}\r\n            url={url}\r\n            options={{ ...options }}\r\n            hideComponents={hideComponents}\r\n            onSubmit={(data) => {\r\n              onSubmit(data, form._id);\r\n            }}\r\n            onCustomEvent={onCustomEvent}\r\n          />\r\n        </div>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst doProcessActions = (submission, ownProps) => {\r\n  return (dispatch, getState) => {\r\n    let user = getState().user.userDetail;\r\n    let form = getState().form.form;\r\n    let IsAuth = getState().user.isAuthenticated;\r\n    dispatch(resetSubmissions(\"submission\"));\r\n    const data = getProcessReq(form, submission._id, \"new\", user);\r\n\r\n    const isPublic = window.location.href.includes(\"public\");\r\n\r\n    if (isPublic) {\r\n      // this is for anonymous\r\n      dispatch(\r\n        publicApplicationCreate(data, (err, res) => {\r\n          if (!err) {\r\n            dispatch(setFormSubmissionLoading(false));\r\n            toast.success(\"Submission Saved.\");\r\n            dispatch(setFormSubmitted(true));\r\n          } else {\r\n            //TO DO Update to show error message\r\n            dispatch(setFormSubmissionLoading(false));\r\n            toast.error(\"Submission failed\");\r\n            // dispatch(setFormSubmitted())\r\n            // dispatch(push(`/public/submitted`));\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        applicationCreate(data, (err, res) => {\r\n          if (!err) {\r\n            if (IsAuth) {\r\n              dispatch(setFormSubmissionLoading(false));\r\n              dispatch(setMaintainBPMFormPagination(true));\r\n              /*dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`))*/\r\n              toast.success(\"Submission Saved.\");\r\n              dispatch(push(`/form`));\r\n            } else {\r\n              dispatch(setFormSubmissionLoading(false));\r\n            }\r\n          } else {\r\n            //TO DO Update to show error message\r\n            if (IsAuth) {\r\n              dispatch(setFormSubmissionLoading(false));\r\n              dispatch(setMaintainBPMFormPagination(true));\r\n              //dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`))\r\n              toast.success(\"Submission Saved.\");\r\n              dispatch(push(`/form`));\r\n            } else {\r\n              dispatch(setFormSubmissionLoading(false));\r\n            }\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.userDetail,\r\n    form: selectRoot(\"form\", state),\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    errors: [selectError(\"form\", state), selectError(\"submission\", state)],\r\n    options: {\r\n      noAlerts: false,\r\n      i18n: {\r\n        en: {\r\n          error: \"Please fix the errors before submitting again.\",\r\n        },\r\n      },\r\n    },\r\n    submissionError: selectRoot(\"formDelete\", state).formSubmissionError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission, formId) => {\r\n      dispatch(setFormSubmissionLoading(true));\r\n      dispatch(\r\n        saveSubmission(\"submission\", submission, formId, (err, submission) => {\r\n          if (!err) {\r\n            dispatch(doProcessActions(submission, ownProps));\r\n          } else {\r\n            const ErrorDetails = {\r\n              modalOpen: true,\r\n              message: \"Submission cannot be done\",\r\n            };\r\n            toast.error(\"Error while Submission.\");\r\n            dispatch(setFormSubmissionLoading(false));\r\n            dispatch(setFormSubmissionError(ErrorDetails));\r\n          }\r\n        })\r\n      );\r\n    },\r\n    onCustomEvent: (customEvent) => {\r\n      switch (customEvent.type) {\r\n        case CUSTOM_EVENT_TYPE.CUSTOM_SUBMIT_DONE:\r\n          toast.success(\"Submission Saved.\");\r\n          dispatch(push(`/form`));\r\n          break;\r\n        case CUSTOM_EVENT_TYPE.CANCEL_SUBMISSION:\r\n          dispatch(push(`/form`));\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    onConfirm: () => {\r\n      const ErrorDetails = { modalOpen: false, message: \"\" };\r\n      dispatch(setFormSubmissionError(ErrorDetails));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\r\n"]},"metadata":{},"sourceType":"module"}