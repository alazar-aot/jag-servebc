{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Admin\\\\Insightdashboard.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { useDispatch } from \"react-redux\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Errors } from \"react-formio/lib/components\";\nimport Loading from \"../../containers/Loading\";\nimport { connect } from \"react-redux\";\nimport { updateGroup } from \"../../apiManager/services/dashboardsService\";\nimport Popover from '@material-ui/core/Popover';\nimport { initiateUpdate, updateDashboardFromGroups } from \"../../actions/dashboardActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var InsightDashboard = function InsightDashboard(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var dashboardReducer = props.dashboardReducer;\n  var dispatch = useDispatch();\n  var dashboards = dashboardReducer.dashboards;\n  var groups = dashboardReducer.groups;\n  var isGroupUpdated = dashboardReducer.isGroupUpdated;\n  var isDashUpdated = dashboardReducer.isDashUpdated;\n  var isloading = dashboardReducer.isloading;\n  var isError = dashboardReducer.iserror;\n  var error = dashboardReducer.error;\n  var updateError = dashboardReducer.updateError;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      remainingGroups = _useState4[0],\n      setRemainingGroups = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeRow = _useState6[0],\n      setActiveRow = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var _useState9 = useState(1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activePage = _useState10[0],\n      setActivePage = _useState10[1];\n\n  var _useState11 = useState(5),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sizePerPage = _useState12[0],\n      setSizePerPage = _useState12[1];\n\n  var useNoRenderRef = function useNoRenderRef(currentValue) {\n    _s();\n\n    var ref = useRef(currentValue);\n    ref.current = currentValue;\n    return ref;\n  };\n\n  _s(useNoRenderRef, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n  var getDashboardsRef = useNoRenderRef(dashboards);\n  useEffect(function () {\n    if (isDashUpdated && isGroupUpdated) {\n      dispatch(updateDashboardFromGroups({\n        dashboards: getDashboardsRef.current,\n        groups: groups\n      }));\n    }\n  }, [isGroupUpdated, isDashUpdated, getDashboardsRef, dispatch, groups]); // handles the add button click event\n\n  var handleClick = function handleClick(event, rowData) {\n    var approvedGroupIds = rowData.approvedGroups.map(function (x) {\n      return x.id;\n    });\n    var listGroup = groups.filter(function (item) {\n      return approvedGroupIds.includes(item.id) === false;\n    });\n    setActiveRow(rowData);\n    setRemainingGroups(listGroup);\n    setShow(!show);\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setShow(false);\n    setAnchorEl(null);\n  };\n\n  var id = show ? 'simple-popover' : undefined;\n\n  var removeDashboardFromGroup = function removeDashboardFromGroup(rowData, groupInfo) {\n    var groupToUpdate = groups.find(function (group) {\n      return group.id === groupInfo.id;\n    });\n    var updatedDashboardsForSelectedGroup = groupToUpdate.dashboards.filter(function (item) {\n      return Number(Object.keys(item)[0]) !== rowData.id;\n    });\n    var update = {\n      dashboards: updatedDashboardsForSelectedGroup,\n      group: groupInfo.id\n    };\n    dispatch(initiateUpdate());\n    setShow(false);\n    dispatch(updateGroup(update));\n  };\n\n  var AddDashboardToGroup = function AddDashboardToGroup(groupInfo) {\n    var newGroups = _toConsumableArray(groups);\n\n    var newDashObj = {};\n    var update = {};\n    newDashObj[activeRow.id] = activeRow.name;\n\n    var _iterator = _createForOfIteratorHelper(newGroups),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var group = _step.value;\n\n        if (group.id === groupInfo.id) {\n          group.dashboards.push(newDashObj);\n          update = {\n            dashboards: group.dashboards,\n            group: group.id\n          };\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    dispatch(initiateUpdate());\n    setShow(!show);\n    dispatch(updateGroup(update));\n  };\n\n  var columns = [{\n    dataField: 'name',\n    text: 'Dashboard'\n  }, {\n    dataField: 'approvedGroups',\n    text: 'Access Groups',\n    formatter: function formatter(cell, rowData) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: cell === null || cell === void 0 ? void 0 : cell.map(function (label) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pull-left group-item-container\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-secondary btn-sm form-btn pull-left btn-left group-item\",\n              disabled: true,\n              children: [label.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              \"data-testid\": rowData.name + label.name,\n              variant: \"outline-secondary\",\n              className: \"btn-sm close-button\",\n              onClick: function onClick(e) {\n                return removeDashboardFromGroup(rowData, label);\n              },\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, _this)]\n          }, label.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, _this);\n        })\n      }, void 0, false);\n    }\n  }, {\n    dataField: 'id',\n    text: 'Action',\n    formatExtraData: {\n      show: show,\n      remainingGroups: remainingGroups\n    },\n    formatter: function formatter(cell, rowData, rowIdx, formatExtraData) {\n      var show = formatExtraData.show,\n          remainingGroups = formatExtraData.remainingGroups;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          \"data-testid\": rowIdx,\n          onClick: function onClick(e) {\n            return handleClick(e, rowData);\n          },\n          className: \"btn btn-primary btn-md form-btn pull-left btn-left\",\n          children: [\" Add \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 87\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n          \"data-testid\": \"popup-component\",\n          id: id,\n          open: show,\n          anchorEl: anchorEl,\n          onClose: handleClose,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: remainingGroups.length > 0 ? remainingGroups.map(function (item, key) {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"button\",\n                onClick: function onClick() {\n                  return AddDashboardToGroup(item);\n                },\n                children: item.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 55\n              }, _this);\n            }) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"All groups have access to the dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }, _this);\n    }\n  }];\n\n  var getpageList = function getpageList() {\n    var list = [{\n      text: '5',\n      value: 5\n    }, {\n      text: '25',\n      value: 25\n    }, {\n      text: '50',\n      value: 50\n    }, {\n      text: '100',\n      value: 100\n    }, {\n      text: 'All',\n      value: dashboards.length\n    }];\n    return list;\n  };\n\n  var handleSizeChange = function handleSizeChange(sizePerPage, page) {\n    setActivePage(page);\n    setSizePerPage(sizePerPage);\n  };\n\n  var pagination = paginationFactory({\n    showTotal: true,\n    sizePerPageList: getpageList(),\n    page: activePage,\n    sizePerPage: sizePerPage,\n    onPageChange: function onPageChange(page) {\n      return setActivePage(page);\n    },\n    onSizePerPageChange: function onSizePerPageChange(size, page) {\n      return handleSizeChange(size, page);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-item-left\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"task-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-wpforms\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forms-text\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 14\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, _this), updateError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container error-custom\",\n        children: /*#__PURE__*/_jsxDEV(Errors, {\n          errors: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 73\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"custom-grid grid-forms\",\n      children: isloading ? isError ? /*#__PURE__*/_jsxDEV(Errors, {\n        errors: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }, _this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 59\n      }, _this) : /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        keyField: \"id\",\n        data: dashboards,\n        columns: columns,\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 72\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(InsightDashboard, \"kTEHoCMC2WMWuzGtM/xhgmUp1VY=\", true, function () {\n  return [useDispatch];\n});\n\n_c = InsightDashboard;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dashboardReducer: state.dashboardReducer\n  };\n};\n\nexport default connect(mapStateToProps)(InsightDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"InsightDashboard\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/Admin/Insightdashboard.js"],"names":["React","useEffect","useState","useRef","Button","BootstrapTable","useDispatch","ListGroup","paginationFactory","Errors","Loading","connect","updateGroup","Popover","initiateUpdate","updateDashboardFromGroups","InsightDashboard","props","dashboardReducer","dispatch","dashboards","groups","isGroupUpdated","isDashUpdated","isloading","isError","iserror","error","updateError","anchorEl","setAnchorEl","remainingGroups","setRemainingGroups","activeRow","setActiveRow","show","setShow","activePage","setActivePage","sizePerPage","setSizePerPage","useNoRenderRef","currentValue","ref","current","getDashboardsRef","handleClick","event","rowData","approvedGroupIds","approvedGroups","map","x","id","listGroup","filter","item","includes","currentTarget","handleClose","undefined","removeDashboardFromGroup","groupInfo","groupToUpdate","find","group","updatedDashboardsForSelectedGroup","Number","Object","keys","update","AddDashboardToGroup","newGroups","newDashObj","name","push","columns","dataField","text","formatter","cell","label","e","formatExtraData","rowIdx","vertical","horizontal","length","key","getpageList","list","value","handleSizeChange","page","pagination","showTotal","sizePerPageList","onPageChange","onSizePerPageChange","size","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useRef} from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {useDispatch} from \"react-redux\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { Errors } from \"react-formio/lib/components\";\r\nimport Loading from \"../../containers/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateGroup } from \"../../apiManager/services/dashboardsService\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { initiateUpdate, updateDashboardFromGroups } from \"../../actions/dashboardActions\";\r\n\r\nexport const InsightDashboard = (props)=> {\r\n\r\n  const {dashboardReducer} = props;\r\n  const dispatch= useDispatch();\r\n  const dashboards = dashboardReducer.dashboards;\r\n  const groups = dashboardReducer.groups;\r\n  const isGroupUpdated = dashboardReducer.isGroupUpdated;\r\n  const isDashUpdated = dashboardReducer.isDashUpdated;\r\n  const isloading = dashboardReducer.isloading;\r\n  const isError =  dashboardReducer.iserror;\r\n  const error = dashboardReducer.error;\r\n  const updateError = dashboardReducer.updateError;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [remainingGroups,setRemainingGroups] = useState([]); \r\n  const [activeRow,setActiveRow] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [activePage,setActivePage] = useState(1);\r\n  const [sizePerPage,setSizePerPage] = useState(5)\r\n  const useNoRenderRef = (currentValue)=>{\r\n    const ref = useRef(currentValue);\r\n    ref.current = currentValue;\r\n    return ref;\r\n  }\r\n\r\n  const getDashboardsRef = useNoRenderRef(dashboards);\r\n\r\n  useEffect(()=>{\r\n    if(isDashUpdated && isGroupUpdated){\r\n     dispatch(updateDashboardFromGroups({dashboards:getDashboardsRef.current,groups}));\r\n    }\r\n  },[isGroupUpdated,isDashUpdated,getDashboardsRef,dispatch,groups])\r\n\r\n\r\n   // handles the add button click event\r\n   const handleClick = (event,rowData) => {\r\n    let approvedGroupIds =rowData.approvedGroups.map(x => x.id);\r\n    let listGroup = groups.filter(item=>approvedGroupIds.includes(item.id)===false)\r\n    setActiveRow(rowData);\r\n    setRemainingGroups(listGroup)\r\n    setShow(!show);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const id = show ? 'simple-popover' : undefined;\r\n  const removeDashboardFromGroup = (rowData,groupInfo)=>{\r\n      let groupToUpdate = groups.find(group=>group.id === groupInfo.id);\r\n      let updatedDashboardsForSelectedGroup = groupToUpdate.dashboards.filter(item => Number(Object.keys(item)[0]) !== rowData.id);\r\n      let update = {\r\n        dashboards:updatedDashboardsForSelectedGroup,\r\n        group:groupInfo.id\r\n      }\r\n      dispatch(initiateUpdate());\r\n      setShow(false)  \r\n      dispatch(updateGroup(update));\r\n    \r\n  }\r\n\r\n  const AddDashboardToGroup = (groupInfo)=>{\r\n    let newGroups = [...groups];\r\n    let newDashObj = {};\r\n    let update = {};\r\n    newDashObj[activeRow.id] = activeRow.name;\r\n    for( let group of newGroups){\r\n        if(group.id === groupInfo.id){\r\n            group.dashboards.push(newDashObj);\r\n            update = {\r\n              dashboards:group.dashboards,\r\n              group:group.id\r\n            }\r\n        }\r\n    }\r\n      dispatch(initiateUpdate())\r\n      setShow(!show)\r\n      dispatch(updateGroup(update));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n    dataField: 'name',\r\n    text: 'Dashboard',\r\n    },\r\n   {\r\n    dataField: 'approvedGroups',\r\n    text: 'Access Groups',\r\n    formatter: (cell,rowData) => {\r\n      return  <> \r\n        {cell?.map(label => \r\n        <div key={label.id} className=\"pull-left group-item-container\">\r\n            <Button className=\"btn btn-secondary btn-sm form-btn pull-left btn-left group-item\" disabled>{label.name} </Button>\r\n            <Button data-testid={rowData.name+label.name} variant=\"outline-secondary\" className=\"btn-sm close-button\" onClick={(e)=>removeDashboardFromGroup(rowData,label)}>x</Button>\r\n        </div>\r\n          )}\r\n            </>\r\n    }\r\n   },\r\n   {\r\n    dataField: 'id',\r\n    text: 'Action',\r\n    formatExtraData :{show,remainingGroups},\r\n    formatter: (cell,rowData,rowIdx,formatExtraData) => {\r\n\r\n      let {show,remainingGroups} = formatExtraData;\r\n      return <div>\r\n                <Button data-testid={rowIdx}  \r\n                  onClick={(e)=>handleClick(e,rowData)} \r\n                  className=\"btn btn-primary btn-md form-btn pull-left btn-left\"> Add <b>+</b>\r\n                </Button> \r\n                <Popover\r\n                    data-testid=\"popup-component\"\r\n                    id={id}\r\n                    open={show}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                      vertical: 'bottom',\r\n                      horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'center',\r\n                    }}\r\n                  >\r\n                  <ListGroup>\r\n                    {remainingGroups.length > 0 \r\n                    ? \r\n                      remainingGroups.map((item,key)=><ListGroup.Item key={key} as=\"button\" \r\n                      onClick={()=>AddDashboardToGroup(item)}>{item.name}</ListGroup.Item>)\r\n                    :\r\n                      <ListGroup.Item>{`All groups have access to the dashboard`}</ListGroup.Item>\r\n                    }\r\n                  </ListGroup>\r\n              </Popover>\r\n            </div>\r\n    }\r\n  }\r\n];\r\n\r\nconst getpageList = ()=>{\r\n  const list = [ \r\n        {\r\n        text: '5', value: 5\r\n      },\r\n        {\r\n        text: '25', value: 25\r\n      },\r\n        {\r\n        text: '50', value: 50\r\n      },\r\n        {\r\n        text: '100', value: 100\r\n      },\r\n        {\r\n        text: 'All', value: dashboards.length\r\n      } ]\r\n  return list\r\n}\r\n\r\nconst handleSizeChange = (sizePerPage,page)=>{\r\n    setActivePage(page)\r\n    setSizePerPage(sizePerPage)\r\n}\r\n\r\n  const pagination = paginationFactory({\r\n    showTotal :true,\r\n    sizePerPageList:getpageList(),\r\n    page:activePage,\r\n    sizePerPage:sizePerPage,\r\n    onPageChange :(page)=>setActivePage(page),\r\n    onSizePerPageChange:(size,page)=>handleSizeChange(size,page)\r\n  })\r\n\r\n  return (\r\n     <>\r\n        <div className=\"flex-container\">\r\n          <div className=\"flex-item-left\">\r\n          <h3 className=\"task-head\">\r\n          <span><i className=\"fa fa-wpforms\" aria-hidden=\"true\"/></span>\r\n             <span className=\"forms-text\">Dashboard</span></h3>\r\n          </div>\r\n          {updateError && <div className=\"error-container error-custom\"><Errors errors={error} /></div>}\r\n        </div>\r\n        <section  className=\"custom-grid grid-forms\">\r\n          {isloading ?isError ? <Errors errors={error} />:<Loading /> :<BootstrapTable keyField='id' data={ dashboards } columns={ columns } pagination={pagination} />}\r\n        </section>\r\n     </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    dashboardReducer:state.dashboardReducer \r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(InsightDashboard);\r\n"]},"metadata":{},"sourceType":"module"}