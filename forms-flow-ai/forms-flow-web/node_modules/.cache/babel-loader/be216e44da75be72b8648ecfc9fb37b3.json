{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport ACTION_CONSTANTS from \"../actions/actionConstants\";\nvar initialState = {\n  isProcessLoading: true,\n  processStatusList: [],\n  processLoadError: false,\n  processList: [],\n  formProcessError: false,\n  formProcessList: [],\n  formPreviousData: [],\n  processActivityList: null,\n  processDiagramXML: \"\",\n  processActivityLoadError: false,\n  isProcessDiagramLoading: true,\n  applicationCount: 0,\n  isApplicationCountLoading: false,\n  applicationCountResponse: false,\n  unPublishApiError: false\n};\n\nvar process = function process() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACTION_CONSTANTS.IS_PROCESS_STATUS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isProcessLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.PROCESS_STATUS_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processStatusList: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_PROCESS_STATUS_LOAD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processLoadError: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_PROCESS_ACTIVITY_LOAD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processActivityLoadError: action.payload\n      });\n\n    case ACTION_CONSTANTS.PROCESS_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processList: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_FORM_PROCESS_STATUS_LOAD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formProcessError: action.payload\n      });\n\n    case ACTION_CONSTANTS.FORM_PROCESS_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formProcessList: action.payload\n      });\n\n    case ACTION_CONSTANTS.PROCESS_ACTIVITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processActivityList: action.payload\n      });\n\n    case ACTION_CONSTANTS.PROCESS_DIAGRAM_XML:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processDiagramXML: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_PROCESS_DIAGRAM_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isProcessDiagramLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.FORM_PREVIOUS_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formPreviousData: action.payload\n      });\n\n    case ACTION_CONSTANTS.APPLICATION_COUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        applicationCount: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_APPLICATION_COUNT_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isApplicationCountLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.APPLICATION_COUNT_RESPONSE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        applicationCountResponse: action.payload\n      });\n\n    case ACTION_CONSTANTS.UNPUBLISH_API_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unPublishApiError: action.payload\n      });\n\n    case ACTION_CONSTANTS.RESET_PROCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formPreviousData: [],\n        formProcessList: [],\n        processDiagramXML: \"\",\n        isProcessDiagramLoading: true,\n        applicationCount: 0,\n        applicationCountResponse: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default process;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/modules/processReducer.js"],"names":["ACTION_CONSTANTS","initialState","isProcessLoading","processStatusList","processLoadError","processList","formProcessError","formProcessList","formPreviousData","processActivityList","processDiagramXML","processActivityLoadError","isProcessDiagramLoading","applicationCount","isApplicationCountLoading","applicationCountResponse","unPublishApiError","process","state","action","type","IS_PROCESS_STATUS_LOADING","payload","PROCESS_STATUS_LIST","IS_PROCESS_STATUS_LOAD_ERROR","IS_PROCESS_ACTIVITY_LOAD_ERROR","PROCESS_LIST","IS_FORM_PROCESS_STATUS_LOAD_ERROR","FORM_PROCESS_LIST","PROCESS_ACTIVITIES","PROCESS_DIAGRAM_XML","IS_PROCESS_DIAGRAM_LOADING","FORM_PREVIOUS_DATA","APPLICATION_COUNT","IS_APPLICATION_COUNT_LOADING","APPLICATION_COUNT_RESPONSE","UNPUBLISH_API_ERROR","RESET_PROCESS"],"mappings":"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","sourcesContent":["import ACTION_CONSTANTS from \"../actions/actionConstants\";\r\n\r\nconst initialState = {\r\n  isProcessLoading: true,\r\n  processStatusList: [],\r\n  processLoadError: false,\r\n  processList: [],\r\n  formProcessError: false,\r\n  formProcessList: [],\r\n  formPreviousData:[],\r\n  processActivityList: null,\r\n  processDiagramXML: \"\",\r\n  processActivityLoadError: false,\r\n  isProcessDiagramLoading: true,\r\n  applicationCount:0,\r\n  isApplicationCountLoading:false,\r\n  applicationCountResponse:false,\r\n  unPublishApiError:false\r\n};\r\n\r\n\r\nconst process = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_CONSTANTS.IS_PROCESS_STATUS_LOADING:\r\n      return { ...state, isProcessLoading: action.payload };\r\n    case ACTION_CONSTANTS.PROCESS_STATUS_LIST:\r\n      return { ...state, processStatusList: action.payload };\r\n    case ACTION_CONSTANTS.IS_PROCESS_STATUS_LOAD_ERROR:\r\n      return { ...state, processLoadError: action.payload };\r\n    case ACTION_CONSTANTS.IS_PROCESS_ACTIVITY_LOAD_ERROR:\r\n      return { ...state, processActivityLoadError: action.payload };\r\n    case ACTION_CONSTANTS.PROCESS_LIST:\r\n      return { ...state, processList: action.payload };\r\n    case ACTION_CONSTANTS.IS_FORM_PROCESS_STATUS_LOAD_ERROR:\r\n      return { ...state, formProcessError: action.payload };\r\n    case ACTION_CONSTANTS.FORM_PROCESS_LIST:\r\n      return { ...state, formProcessList: action.payload };\r\n    case ACTION_CONSTANTS.PROCESS_ACTIVITIES:\r\n      return { ...state, processActivityList: action.payload };\r\n    case ACTION_CONSTANTS.PROCESS_DIAGRAM_XML:\r\n      return { ...state, processDiagramXML: action.payload };\r\n    case ACTION_CONSTANTS.IS_PROCESS_DIAGRAM_LOADING:\r\n      return { ...state, isProcessDiagramLoading: action.payload };\r\n    case ACTION_CONSTANTS.FORM_PREVIOUS_DATA:\r\n      return {...state,formPreviousData:action.payload};\r\n    case  ACTION_CONSTANTS.APPLICATION_COUNT:\r\n      return {...state, applicationCount:action.payload}  \r\n    case  ACTION_CONSTANTS.IS_APPLICATION_COUNT_LOADING:\r\n      return {...state, isApplicationCountLoading:action.payload} \r\n    case  ACTION_CONSTANTS.APPLICATION_COUNT_RESPONSE:\r\n      return {...state, applicationCountResponse:action.payload}   \r\n    case  ACTION_CONSTANTS.UNPUBLISH_API_ERROR:\r\n        return {...state, unPublishApiError:action.payload}\r\n    case  ACTION_CONSTANTS.RESET_PROCESS:\r\n        return {...state,formPreviousData:[],formProcessList:[],processDiagramXML:\"\",isProcessDiagramLoading:true,applicationCount:0,applicationCountResponse:false,}    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default process;\r\n"]},"metadata":{},"sourceType":"module"}