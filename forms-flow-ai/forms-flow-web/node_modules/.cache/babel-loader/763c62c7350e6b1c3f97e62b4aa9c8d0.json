{"ast":null,"code":"import axios from \"axios\";\nimport UserService from \"../../services/UserService\"; // const qs = require(\"querystring\");\n\nexport var httpGETRequest = function httpGETRequest(url, data, token) {\n  var isBearer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  return axios.get(url, {\n    params: data,\n    headers: !headers ? {\n      Authorization: isBearer ? \"Bearer \".concat(token || UserService.getToken()) : token\n    } : headers\n  });\n};\nexport var httpPOSTRequest = function httpPOSTRequest(url, data, token) {\n  var isBearer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return axios.post(url, data, {\n    headers: {\n      Authorization: isBearer ? \"Bearer \".concat(token || UserService.getToken()) : token\n    }\n  });\n};\nexport var httpPOSTRequestWithoutToken = function httpPOSTRequestWithoutToken(url, data, token) {\n  var isBearer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return axios.post(url, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport var httpPOSTRequestWithHAL = function httpPOSTRequestWithHAL(url, data, token) {\n  var isBearer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return axios.post(url, data, {\n    headers: {\n      Authorization: isBearer ? \"Bearer \".concat(token || UserService.getToken()) : token,\n      Accept: 'application/hal+json'\n    }\n  });\n};\nexport var httpPUTRequest = function httpPUTRequest(url, data, token) {\n  var isBearer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return axios.put(url, data, {\n    headers: {\n      Authorization: isBearer ? \"Bearer \".concat(token || UserService.getToken()) : token\n    }\n  });\n};\nexport var httpDELETERequest = function httpDELETERequest(url, token) {\n  var isBearer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return axios.delete(url, {\n    headers: {\n      Authorization: isBearer ? \"Bearer \".concat(token || UserService.getToken()) : token\n    }\n  });\n};\n/*export const httpPUTRequest = (url, data, token, isBearer=true) => {\r\n  return axios.put(url, data, { headers: { Authorization: isBearer ?`Bearer ${ token || UserService.getToken()}`: token } });\r\n};*/\n\n/*export const httpPOSTRequestWithoutToken = (url, data) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  };\r\n  return axios.post(url, qs.stringify(data), config);\r\n};\r\n\r\nexport const httpGETRequestWithoutToken = (url, token) => {\r\n  return axios.get(url);\r\n};*/","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/apiManager/httpRequestHandler/index.js"],"names":["axios","UserService","httpGETRequest","url","data","token","isBearer","headers","get","params","Authorization","getToken","httpPOSTRequest","post","httpPOSTRequestWithoutToken","httpPOSTRequestWithHAL","Accept","httpPUTRequest","put","httpDELETERequest","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAqD;AAAA,MAAlCC,QAAkC,uEAAvB,IAAuB;AAAA,MAAjBC,OAAiB,uEAAT,IAAS;AACjF,SAAOP,KAAK,CAACQ,GAAN,CAAUL,GAAV,EAAe;AACpBM,IAAAA,MAAM,EAAEL,IADY;AAEpBG,IAAAA,OAAO,EAAE,CAACA,OAAD,GAAS;AAChBG,MAAAA,aAAa,EAAEJ,QAAQ,oBACTD,KAAK,IAAIJ,WAAW,CAACU,QAAZ,EADA,IAEnBN;AAHY,KAAT,GAIPE;AANkB,GAAf,CAAP;AAQD,CATM;AAWP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACT,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAuC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACpE,SAAON,KAAK,CAACa,IAAN,CAAWV,GAAX,EAAgBC,IAAhB,EAAsB;AAC3BG,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAEJ,QAAQ,oBACTD,KAAK,IAAIJ,WAAW,CAACU,QAAZ,EADA,IAEnBN;AAHG;AADkB,GAAtB,CAAP;AAOD,CARM;AAUP,OAAO,IAAMS,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACX,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAuC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AAChF,SAAON,KAAK,CAACa,IAAN,CAAWV,GAAX,EAAgBC,IAAhB,EAAsB;AAC3BG,IAAAA,OAAO,EAAE;AACP,sBAAe;AADR;AADkB,GAAtB,CAAP;AAKD,CANM;AASP,OAAO,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACZ,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAuC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AAC3E,SAAON,KAAK,CAACa,IAAN,CAAWV,GAAX,EAAgBC,IAAhB,EAAsB;AAC3BG,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAEJ,QAAQ,oBACTD,KAAK,IAAIJ,WAAW,CAACU,QAAZ,EADA,IAEnBN,KAHG;AAIPW,MAAAA,MAAM,EAAE;AAJD;AADkB,GAAtB,CAAP;AAQD,CATM;AAWP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACd,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAuC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACnE,SAAON,KAAK,CAACkB,GAAN,CAAUf,GAAV,EAAeC,IAAf,EAAqB;AAC1BG,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAEJ,QAAQ,oBACTD,KAAK,IAAIJ,WAAW,CAACU,QAAZ,EADA,IAEnBN;AAHG;AADiB,GAArB,CAAP;AAOD,CARM;AAUP,OAAO,IAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,CAAChB,GAAD,EAAKE,KAAL,EAAgC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AAC/D,SAAON,KAAK,CAACoB,MAAN,CAAajB,GAAb,EAAkB;AACvBI,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAEJ,QAAQ,oBACTD,KAAK,IAAIJ,WAAW,CAACU,QAAZ,EADA,IAEnBN;AAHG;AADc,GAAlB,CAAP;AAOD,CARM;AAUP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nimport UserService from \"../../services/UserService\";\r\n\r\n// const qs = require(\"querystring\");\r\n\r\nexport const httpGETRequest = (url, data, token, isBearer = true, headers=null) => {\r\n  return axios.get(url, {\r\n    params: data,\r\n    headers: !headers?{\r\n      Authorization: isBearer\r\n        ? `Bearer ${token || UserService.getToken()}`\r\n        : token,\r\n    }:headers,\r\n  });\r\n};\r\n\r\nexport const httpPOSTRequest = (url, data, token, isBearer = true) => {\r\n  return axios.post(url, data, {\r\n    headers: {\r\n      Authorization: isBearer\r\n        ? `Bearer ${token || UserService.getToken()}`\r\n        : token,\r\n    },\r\n  });\r\n};\r\n\r\nexport const httpPOSTRequestWithoutToken = (url, data, token, isBearer = true) => {\r\n  return axios.post(url, data, {\r\n    headers: {\r\n      'Content-Type':'application/json'\r\n    }\r\n  });\r\n};\r\n\r\n\r\nexport const httpPOSTRequestWithHAL = (url, data, token, isBearer = true) => {\r\n  return axios.post(url, data, {\r\n    headers: {\r\n      Authorization: isBearer\r\n        ? `Bearer ${token || UserService.getToken()}`\r\n        : token,\r\n      Accept: 'application/hal+json'\r\n    },\r\n  });\r\n};\r\n\r\nexport const httpPUTRequest = (url, data, token, isBearer = true) => {\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      Authorization: isBearer\r\n        ? `Bearer ${token || UserService.getToken()}`\r\n        : token,\r\n    },\r\n  });\r\n};\r\n\r\nexport const httpDELETERequest = (url,token, isBearer = true) => {\r\n  return axios.delete(url, {\r\n    headers: {\r\n      Authorization: isBearer\r\n        ? `Bearer ${token || UserService.getToken()}`\r\n        : token,\r\n    },\r\n  });\r\n};\r\n\r\n/*export const httpPUTRequest = (url, data, token, isBearer=true) => {\r\n  return axios.put(url, data, { headers: { Authorization: isBearer ?`Bearer ${ token || UserService.getToken()}`: token } });\r\n};*/\r\n\r\n/*export const httpPOSTRequestWithoutToken = (url, data) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  };\r\n  return axios.post(url, qs.stringify(data), config);\r\n};\r\n\r\nexport const httpGETRequestWithoutToken = (url, token) => {\r\n  return axios.get(url);\r\n};*/\r\n"]},"metadata":{},"sourceType":"module"}