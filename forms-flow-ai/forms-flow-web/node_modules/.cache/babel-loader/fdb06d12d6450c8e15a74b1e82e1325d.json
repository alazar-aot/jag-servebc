{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\list\\\\sort\\\\TaskSortSelectedList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { sortingList } from \"../../constants/taskConstants\";\nimport TaskSort from \"./TaskSort\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilterListSortParams } from \"../../../../actions/bpmTaskActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getOptions = function getOptions(options) {\n  var optionsArray = [];\n  sortingList.forEach(function (sortOption) {\n    if (!options.some(function (option) {\n      return option.sortBy === sortOption.sortBy;\n    })) {\n      optionsArray.push(_objectSpread({}, sortOption));\n    }\n  });\n  return optionsArray;\n};\n\nvar TaskSortSelectedList = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var createNode = useRef();\n  var sortingData = useSelector(function (state) {\n    return state.bpmTasks.filterListSortParams.sorting;\n  });\n\n  var _useState = useState(sortingData),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortList = _useState2[0],\n      updateSortList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSortListDropdown = _useState4[0],\n      setShowSortListDropdown = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSortListDropdownIndex = _useState6[0],\n      setShowSortListDropdownIndex = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sortOptions = _useState8[0],\n      setSortOptions = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick(e) {\n    var _createNode$current;\n\n    if (createNode !== null && createNode !== void 0 && (_createNode$current = createNode.current) !== null && _createNode$current !== void 0 && _createNode$current.contains(e.target)) {\n      return;\n    } // outside click\n\n\n    setShowSortListDropdown(null);\n    setShowSortListDropdownIndex(null);\n  };\n\n  var addSort = function addSort(sort) {\n    var updatedSortList = _toConsumableArray(sortList);\n\n    updatedSortList.push(_objectSpread({}, sort));\n    updateSortList(updatedSortList);\n    setShowSortListDropdown(null);\n  };\n\n  useEffect(function () {\n    // add when mounted\n    document.addEventListener(\"mousedown\", handleClick); // return function to be called when unmounted\n\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n  useEffect(function () {\n    setSortOptions(getOptions(sortList));\n    dispatch(setFilterListSortParams(sortList));\n  }, [sortList, dispatch]);\n\n  var updateSortOrder = function updateSortOrder(index, sortOrder) {\n    var updatedSortList = _toConsumableArray(sortList);\n\n    updatedSortList[index].sortOrder = sortOrder;\n    updateSortList(updatedSortList);\n  };\n\n  var showSortList = function showSortList(index) {\n    if (index !== showSortListDropdownIndex) {\n      setShowSortListDropdownIndex(index);\n    } else {\n      setShowSortListDropdownIndex(null);\n    }\n  };\n\n  var updateSort = function updateSort(sort, index) {\n    var updatedSortList = _toConsumableArray(sortList);\n\n    updatedSortList[index].label = sort.label;\n    updatedSortList[index].sortBy = sort.sortBy;\n    updateSortList(updatedSortList);\n    setShowSortListDropdown(null);\n    setShowSortListDropdownIndex(null);\n  };\n\n  var deleteSort = function deleteSort(sort, index) {\n    var updatedSortList = _toConsumableArray(sortList);\n\n    updatedSortList.splice(index, 1);\n    updateSortList(updatedSortList);\n  };\n\n  var selectedSortList = function selectedSortList() {\n    return sortList.map(function (sort, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-3\",\n        children: [sortList.length > 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-1 font-weight-bold click-element\",\n          title: \"Remove sorting\",\n          onClick: function onClick() {\n            return deleteSort(sort, index);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 28\n        }, _this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-1 click-element\",\n          onClick: function onClick() {\n            return showSortList(index);\n          },\n          children: [sort.label, showSortListDropdownIndex === index ? /*#__PURE__*/_jsxDEV(TaskSort, {\n            handleClick: function handleClick(sortToUpdate) {\n              return updateSort(sortToUpdate, index);\n            },\n            options: sortOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 57\n          }, _this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 8\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"click-element\",\n          children: sort.sortOrder === \"asc\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-angle-up fa-lg font-weight-bold\",\n            title: \"Ascending\",\n            onClick: function onClick() {\n              return updateSortOrder(index, \"desc\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 34\n          }, _this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-angle-down fa-lg font-weight-bold\",\n            \"dat-title\": \"Descending\",\n            onClick: function onClick() {\n              return updateSortOrder(index, \"asc\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 12\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 8\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    ref: createNode,\n    children: [selectedSortList(), sortOptions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-plus font-weight-bold\",\n        \"dat-title\": \"Add sorting\",\n        onClick: function onClick() {\n          return setShowSortListDropdown(!showSortListDropdown);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, _this), showSortListDropdown ? /*#__PURE__*/_jsxDEV(TaskSort, {\n        handleClick: addSort,\n        options: sortOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 28\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 12\n  }, _this);\n}, \"eM/7deWyzPGJhy2xUagFhCSsF+4=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n_c2 = TaskSortSelectedList;\nexport default TaskSortSelectedList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskSortSelectedList$React.memo\");\n$RefreshReg$(_c2, \"TaskSortSelectedList\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/list/sort/TaskSortSelectedList.js"],"names":["React","useEffect","useRef","useState","sortingList","TaskSort","useDispatch","useSelector","setFilterListSortParams","getOptions","options","optionsArray","forEach","sortOption","some","option","sortBy","push","TaskSortSelectedList","memo","createNode","sortingData","state","bpmTasks","filterListSortParams","sorting","sortList","updateSortList","showSortListDropdown","setShowSortListDropdown","showSortListDropdownIndex","setShowSortListDropdownIndex","sortOptions","setSortOptions","dispatch","handleClick","e","current","contains","target","addSort","sort","updatedSortList","document","addEventListener","removeEventListener","updateSortOrder","index","sortOrder","showSortList","updateSort","label","deleteSort","splice","selectedSortList","map","length","sortToUpdate"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {sortingList} from \"../../constants/taskConstants\";\r\nimport TaskSort from \"./TaskSort\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setFilterListSortParams} from \"../../../../actions/bpmTaskActions\";\r\n\r\nconst getOptions = (options) => {\r\n  const optionsArray = [];\r\n  sortingList.forEach(sortOption=>{\r\n    if(!options.some(option=>option.sortBy===sortOption.sortBy)){\r\n      optionsArray.push({...sortOption})\r\n    }\r\n  });\r\n  return optionsArray;\r\n};\r\n\r\n\r\nconst TaskSortSelectedList = React.memo(() => {\r\n  const createNode = useRef();\r\n  const sortingData = useSelector(state => state.bpmTasks.filterListSortParams.sorting);\r\n  const [sortList,updateSortList] = useState(sortingData);\r\n  const [showSortListDropdown,setShowSortListDropdown] = useState(false);\r\n  const [showSortListDropdownIndex, setShowSortListDropdownIndex] = useState(null);\r\n  const [sortOptions,setSortOptions]=useState([]);\r\n  const dispatch= useDispatch();\r\n\r\n  const handleClick = e => {\r\n    if (createNode?.current?.contains(e.target)) {\r\n      return;\r\n    }\r\n    // outside click\r\n    setShowSortListDropdown(null);\r\n    setShowSortListDropdownIndex(null);\r\n  };\r\n\r\n  const addSort = (sort)=>{\r\n    let updatedSortList = [...sortList];\r\n    updatedSortList.push({...sort});\r\n    updateSortList(updatedSortList);\r\n    setShowSortListDropdown(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    // return function to be called when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSortOptions(getOptions(sortList));\r\n    dispatch(setFilterListSortParams(sortList));\r\n  }, [sortList, dispatch]);\r\n\r\n  const updateSortOrder = (index,sortOrder)=>{\r\n   let updatedSortList = [...sortList];\r\n   updatedSortList[index].sortOrder=sortOrder;\r\n   updateSortList(updatedSortList);\r\n  };\r\n\r\n  const showSortList = (index)=>{\r\n    if(index!==showSortListDropdownIndex){\r\n      setShowSortListDropdownIndex(index)\r\n    }else{\r\n      setShowSortListDropdownIndex(null)\r\n    }\r\n  }\r\n\r\n  const updateSort = (sort,index)=>{\r\n    let updatedSortList = [...sortList];\r\n    updatedSortList[index].label=sort.label;\r\n    updatedSortList[index].sortBy=sort.sortBy;\r\n    updateSortList(updatedSortList)\r\n    setShowSortListDropdown(null);\r\n    setShowSortListDropdownIndex(null);\r\n  }\r\n\r\n  const deleteSort = (sort,index)=>{\r\n    let updatedSortList = [...sortList];\r\n    updatedSortList.splice(index,1);\r\n    updateSortList(updatedSortList)\r\n  }\r\n\r\n  const selectedSortList = () => {\r\n   return sortList.map((sort, index)=>(\r\n     <div className=\"mr-3\" key={index}>\r\n       {sortList.length>1 ?<span className=\"mr-1 font-weight-bold click-element\" title=\"Remove sorting\" onClick={()=>deleteSort(sort,index)}>x</span>:null}\r\n       <span className=\"mr-1 click-element\" onClick={()=>showSortList(index)}>\r\n         {sort.label}{showSortListDropdownIndex===index?<TaskSort handleClick={(sortToUpdate)=>updateSort(sortToUpdate,index)} options={sortOptions}/>:null}\r\n       </span>\r\n       <span className=\"click-element\">\r\n         {sort.sortOrder===\"asc\"?<i className=\"fa fa-angle-up fa-lg font-weight-bold\" title=\"Ascending\" onClick={()=>updateSortOrder(index,\"desc\")}/>:\r\n           <i className=\"fa fa-angle-down fa-lg font-weight-bold\" dat-title=\"Descending\" onClick={()=>updateSortOrder(index,\"asc\")} />}\r\n       </span>\r\n     </div>\r\n   ))\r\n  };\r\n\r\n  return  (<div className=\"d-flex flex-wrap\" ref={createNode}>\r\n    {selectedSortList()}\r\n    {sortOptions.length?<div className=\"ml-1\">\r\n    <i className=\"fa fa-plus font-weight-bold\"  dat-title=\"Add sorting\" onClick={()=>setShowSortListDropdown(!showSortListDropdown)} />\r\n\r\n     {showSortListDropdown?<TaskSort handleClick={addSort} options={sortOptions}/>:null}\r\n    </div>:null}\r\n  </div>)\r\n});\r\n\r\nexport default TaskSortSelectedList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}