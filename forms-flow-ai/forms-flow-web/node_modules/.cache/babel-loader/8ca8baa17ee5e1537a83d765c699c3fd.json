{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\details\\\\AddGroupModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBPMGroup, getBPMGroups, removeBPMGroup } from \"../../../apiManager/services/bpmTaskServices\";\nimport { setBPMTaskGroupsLoading } from \"../../../actions/bpmTaskActions\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar AddGroupModal = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  var _props$modalOpen = props.modalOpen,\n      modalOpen = _props$modalOpen === void 0 ? false : _props$modalOpen,\n      onClose = props.onClose,\n      groups = props.groups;\n  var taskId = useSelector(function (state) {\n    return state.bpmTasks.taskId;\n  });\n  var isGroupLoading = useSelector(function (state) {\n    return state.bpmTasks.isGroupLoading;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupToAdd = _useState2[0],\n      updateGroupToAdd = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var onDeleteGroup = function onDeleteGroup(group) {\n    dispatch(setBPMTaskGroupsLoading(true));\n    dispatch(removeBPMGroup(taskId, group, function (err, res) {\n      if (!err) {\n        dispatch(getBPMGroups(taskId));\n      } else {\n        dispatch(setBPMTaskGroupsLoading(false));\n      }\n    }));\n  };\n\n  var onAddGroup = function onAddGroup() {\n    dispatch(setBPMTaskGroupsLoading(true));\n    var group = {\n      groupId: groupToAdd,\n      type: \"candidate\"\n    };\n    dispatch(addBPMGroup(taskId, group, function (err, res) {\n      if (!err) {\n        dispatch(getBPMGroups(taskId));\n        updateGroupToAdd(\"\");\n      } else {\n        dispatch(setBPMTaskGroupsLoading(false));\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalOpen,\n      onHide: onClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Manage Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isGroupLoading,\n        spinner: true,\n        text: \"Loading...\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-info-circle mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, _this), \"You can add a group by typing a group ID into the input field and afterwards clicking the button with the plus sign.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 4,\n              xs: 12,\n              sm: 4,\n              md: 4,\n              xl: 4,\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add btn btn-link\",\n                onClick: onAddGroup,\n                disabled: !groupToAdd,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add a group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus fa-lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 46\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 8,\n              xs: 12,\n              sm: 8,\n              md: 8,\n              xl: 8,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Group ID\",\n                \"data-testid\": \"Group ID\",\n                className: \"add text-color\",\n                value: groupToAdd,\n                onChange: function onChange(e) {\n                  return updateGroupToAdd(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-2 modal-scroll\",\n            children: groups !== null && groups !== void 0 && groups.length ? /*#__PURE__*/_jsxDEV(Col, {\n              lg: {\n                span: 8,\n                offset: 4\n              },\n              xs: 12,\n              sm: {\n                span: 8,\n                offset: 4\n              },\n              md: {\n                span: 8,\n                offset: 4\n              },\n              xl: {\n                span: 8,\n                offset: 4\n              },\n              children: groups.map(function (group, index) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-times mr-2 click-element text-blue\",\n                    \"data-testid\": \"remove-btn\",\n                    onClick: function onClick() {\n                      return onDeleteGroup(group);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"word-break\",\n                    children: group.groupId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, _this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, _this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: \"btn btn-default\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n}, \"//VFI3hDI1/bRxMq+2xktD5U1sM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n}));\n_c2 = AddGroupModal;\nexport default AddGroupModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddGroupModal$React.memo\");\n$RefreshReg$(_c2, \"AddGroupModal\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/details/AddGroupModal.js"],"names":["React","useState","Modal","Button","Col","Row","useDispatch","useSelector","addBPMGroup","getBPMGroups","removeBPMGroup","setBPMTaskGroupsLoading","LoadingOverlay","AddGroupModal","memo","props","modalOpen","onClose","groups","taskId","state","bpmTasks","isGroupLoading","groupToAdd","updateGroupToAdd","dispatch","onDeleteGroup","group","err","res","onAddGroup","groupId","type","e","target","value","length","span","offset","map","index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addBPMGroup, getBPMGroups, removeBPMGroup} from \"../../../apiManager/services/bpmTaskServices\";\r\nimport {setBPMTaskGroupsLoading} from \"../../../actions/bpmTaskActions\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst AddGroupModal= React.memo((props)=> {\r\n    const { modalOpen=false, onClose , groups} = props;\r\n    const taskId = useSelector((state) => state.bpmTasks.taskId);\r\n    const isGroupLoading = useSelector((state) => state.bpmTasks.isGroupLoading);\r\n    const [groupToAdd,updateGroupToAdd] = useState(\"\");\r\n    const dispatch= useDispatch();\r\n\r\n    const onDeleteGroup = (group) => {\r\n      dispatch(setBPMTaskGroupsLoading(true));\r\n      dispatch(removeBPMGroup(taskId,group,(err,res)=>{\r\n        if(!err){\r\n          dispatch(getBPMGroups(taskId));\r\n        }else{\r\n          dispatch(setBPMTaskGroupsLoading(false));\r\n        }\r\n      }));\r\n    };\r\n\r\n    const onAddGroup = () => {\r\n      dispatch(setBPMTaskGroupsLoading(true));\r\n      const group = {groupId: groupToAdd, type: \"candidate\"};\r\n      dispatch(addBPMGroup(taskId,group,(err,res)=>{\r\n        if(!err){\r\n          dispatch(getBPMGroups(taskId));\r\n          updateGroupToAdd(\"\");\r\n        }else{\r\n          dispatch(setBPMTaskGroupsLoading(false));\r\n        }\r\n      }));\r\n    };\r\n\r\n    return (\r\n      <>\r\n          <Modal show={modalOpen} onHide={onClose}>\r\n              <Modal.Header>\r\n                 <Modal.Title>Manage Groups</Modal.Title>\r\n              </Modal.Header>\r\n            <LoadingOverlay\r\n              active={isGroupLoading}\r\n              spinner\r\n              text=\"Loading...\"\r\n            >\r\n              <Modal.Body>\r\n\r\n                <div className=\"modal-text\">\r\n                <i className=\"fa fa-info-circle mr-2\"/>\r\n                  You can add a group by typing a group ID into the input field and afterwards clicking the button with the plus sign.\r\n                </div>\r\n                <Row className=\"mt-2 mb-1\">\r\n                  <Col lg={4} xs={12} sm={4} md={4} xl={4} className=\"text-right\">\r\n                    <button className=\"add btn btn-link\" onClick={onAddGroup} disabled={!groupToAdd}>\r\n                      <span>Add a group</span>\r\n                      <span className=\"ml-2\"><i className=\"fa fa-plus fa-lg\"/></span>\r\n                    </button>\r\n                  </Col>\r\n                  <Col lg={8} xs={12} sm={8} md={8} xl={8}>\r\n                    <input type=\"text\" placeholder=\"Group ID\" data-testid=\"Group ID\" className=\"add text-color\" value={groupToAdd} onChange={(e)=>updateGroupToAdd(e.target.value)}/>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mb-2 modal-scroll\">\r\n                  {groups?.length?\r\n                    <Col lg={{ span: 8, offset: 4 }} xs={12} sm={{ span: 8, offset: 4 }} md={{ span: 8, offset: 4 }} xl={{ span: 8, offset: 4 }} >\r\n                      {groups.map((group,index)=>\r\n                        <div className=\"mt-1\" key={index}>\r\n                          <i className=\"fa fa-times mr-2 click-element text-blue\" data-testid=\"remove-btn\" onClick={()=>onDeleteGroup(group)}/>\r\n                          <span className=\"word-break\">{group.groupId}</span>\r\n                        </div>\r\n                      )}\r\n                  </Col>:null}\r\n                </Row>\r\n              </Modal.Body>\r\n            </LoadingOverlay>\r\n              <Modal.Footer>\r\n              <Button type=\"button\" className=\"btn btn-default\" onClick={onClose}>Close</Button>\r\n              </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default AddGroupModal;\r\n"]},"metadata":{},"sourceType":"module"}