{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Item\\\\Submission\\\\Item\\\\View.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors } from 'react-formio';\nimport { push } from 'connected-react-router';\nimport { Button } from \"react-bootstrap\";\nimport Loading from '../../../../../containers/Loading';\nimport PdfDownloadService from \"../../../../../services/PdfDownloadService\";\nimport { setFormSubmissionLoading } from \"../../../../../actions/formActions\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar View = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  var hideComponents = props.hideComponents,\n      onSubmit = props.onSubmit,\n      options = props.options,\n      errors = props.errors,\n      _props$form = props.form,\n      form = _props$form.form,\n      isFormActive = _props$form.isActive,\n      _props$submission = props.submission,\n      submission = _props$submission.submission,\n      isSubActive = _props$submission.isActive,\n      url = _props$submission.url,\n      showPrintButton = props.showPrintButton;\n  var isFormSubmissionLoading = useSelector(function (state) {\n    return state.formDelete.isFormSubmissionLoading;\n  });\n\n  if (isFormActive || isSubActive && !isFormSubmissionLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"task-head\",\n        children: [\" \", form.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this), showPrintButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary btn-sm form-btn pull-right btn-right\",\n          onClick: function onClick() {\n            return PdfDownloadService.getPdf(form, submission);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-print\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, _this), \" Print As PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Errors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isFormSubmissionLoading,\n      spinner: true,\n      text: \"Loading...\",\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          submission: submission,\n          url: url,\n          hideComponents: hideComponents,\n          onSubmit: onSubmit,\n          options: _objectSpread({}, options)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n}, \"wJV+WCzA4w6JUzraLVrP9KHphpg=\", false, function () {\n  return [useSelector];\n}));\n_c2 = View;\nView.defaultProps = {\n  showPrintButton: true\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    form: selectRoot('form', state),\n    submission: selectRoot('submission', state),\n    options: {\n      readOnly: true\n    },\n    errors: [selectError('submission', state), selectError('form', state)]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onSubmit: function onSubmit(submission) {\n      dispatch(setFormSubmissionLoading(true));\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, function (err, submission) {\n        if (!err) {\n          dispatch(resetSubmissions('submission'));\n          dispatch(setFormSubmissionLoading(false));\n          dispatch(push(\"/form/\".concat(ownProps.match.params.formId, \"/submission/\").concat(submission._id)));\n        } else {\n          dispatch(setFormSubmissionLoading(false));\n        }\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"View$React.memo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/Form/Item/Submission/Item/View.js"],"names":["React","connect","useSelector","selectRoot","resetSubmissions","saveSubmission","Form","selectError","Errors","push","Button","Loading","PdfDownloadService","setFormSubmissionLoading","LoadingOverlay","View","memo","props","hideComponents","onSubmit","options","errors","form","isFormActive","isActive","submission","isSubActive","url","showPrintButton","isFormSubmissionLoading","state","formDelete","title","getPdf","defaultProps","mapStateToProps","readOnly","mapDispatchToProps","dispatch","ownProps","match","params","formId","err","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect, useSelector} from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport Loading from '../../../../../containers/Loading'\r\nimport PdfDownloadService from \"../../../../../services/PdfDownloadService\"\r\nimport {setFormSubmissionLoading} from \"../../../../../actions/formActions\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst View = React.memo((props) => {\r\n  const {\r\n    hideComponents,\r\n    onSubmit, options,\r\n    errors,\r\n    form: {form, isActive: isFormActive},\r\n    submission: {submission, isActive: isSubActive, url},\r\n    showPrintButton\r\n  } = props;\r\n  const isFormSubmissionLoading = useSelector(state => state.formDelete.isFormSubmissionLoading);\r\n  if (isFormActive || (isSubActive && !isFormSubmissionLoading)) {\r\n    return <Loading/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container row task-container\">\r\n      <div className=\"main-header\">\r\n        <h3 className=\"task-head\"> {form.title}</h3>\r\n        {showPrintButton?<div className=\"btn-right\">\r\n          <Button className=\"btn btn-primary btn-sm form-btn pull-right btn-right\" onClick={() => PdfDownloadService.getPdf(form, submission)}>\r\n          <i className=\"fa fa-print\" aria-hidden=\"true\"/> Print As PDF</Button></div>:null}\r\n      </div>\r\n\r\n      <Errors errors={errors}/>\r\n      <LoadingOverlay active={isFormSubmissionLoading} spinner text='Loading...' className=\"col-12\">\r\n        <div className=\"sub-container\">\r\n          <Form\r\n            form={form}\r\n            submission={submission}\r\n            url={url}\r\n            hideComponents={hideComponents}\r\n            onSubmit={onSubmit}\r\n            options={{...options}}\r\n          />\r\n        </div>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n})\r\n\r\nView.defaultProps = {\r\n  showPrintButton: true\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', state),\r\n    submission: selectRoot('submission', state),\r\n    options: {\r\n      readOnly: true,\r\n    },\r\n    errors: [\r\n      selectError('submission', state),\r\n      selectError('form', state)\r\n    ],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(setFormSubmissionLoading(true));\r\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('submission'));\r\n          dispatch(setFormSubmissionLoading(false));\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\r\n        } else {\r\n          dispatch(setFormSubmissionLoading(false));\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View)\r\n"]},"metadata":{},"sourceType":"module"}