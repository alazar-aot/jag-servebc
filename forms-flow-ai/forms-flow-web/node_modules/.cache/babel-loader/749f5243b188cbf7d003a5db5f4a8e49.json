{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\FileUpload\\\\fileUploadModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { useSelector } from \"react-redux\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar FileModal = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$modalOpen = _ref.modalOpen,\n      modalOpen = _ref$modalOpen === void 0 ? false : _ref$modalOpen,\n      onClose = _ref.onClose,\n      forms = _ref.forms;\n  var formUploadList = useSelector(function (state) {\n    return state.formCheckList.formUploadFormList;\n  });\n  var formUploadCounter = useSelector(function (state) {\n    return state.formCheckList.formUploadCounter;\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      formsUploaded = _useState2[0],\n      setFormsUploaded = _useState2[1];\n\n  useEffect(function () {\n    if (formUploadList.length) {\n      setFormsUploaded(formUploadCounter / formUploadList.length * 100);\n    }\n  }, [formUploadCounter, formUploadList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalOpen,\n      onHide: onClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Forms Upload Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 18\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\".concat(formUploadCounter, \"/\").concat(formUploadList.length, \" Forms  completed\"), \" \", formUploadList.length !== formUploadCounter ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 134\n          }, _this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, _this), formUploadList.length ? /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: formsUploaded,\n          label: \"\".concat(formsUploaded, \"%\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 40\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No forms found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: \"btn btn-default\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n}, \"PjULBUT+fRl9nlqfvG/yEbaqkhk=\", false, function () {\n  return [useSelector, useSelector];\n}));\n_c2 = FileModal;\nexport default FileModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FileModal$React.memo\");\n$RefreshReg$(_c2, \"FileModal\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/components/Form/FileUpload/fileUploadModal.js"],"names":["React","useEffect","useState","Modal","Button","ProgressBar","useSelector","Spinner","FileModal","memo","modalOpen","onClose","forms","formUploadList","state","formCheckList","formUploadFormList","formUploadCounter","formsUploaded","setFormsUploaded","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,IAAMC,SAAS,gBAAER,KAAK,CAACS,IAAN,SAAW,gBAAqC;AAAA;;AAAA,4BAAnCC,SAAmC;AAAA,MAAnCA,SAAmC,+BAAzB,KAAyB;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAAVC,KAAU,QAAVA,KAAU;AAC7D,MAAMC,cAAc,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,aAAN,CAAoBC,kBAAxB;AAAA,GAAN,CAAlC;AACA,MAAMC,iBAAiB,GAAGX,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,aAAN,CAAoBE,iBAAxB;AAAA,GAAN,CAArC;;AACA,kBAA0Cf,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOgB,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAlB,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGY,cAAc,CAACO,MAAlB,EAAyB;AACvBD,MAAAA,gBAAgB,CAAEF,iBAAiB,GAACJ,cAAc,CAACO,MAAlC,GAA0C,GAA3C,CAAhB;AACD;AACF,GAJQ,EAIP,CAACH,iBAAD,EAAmBJ,cAAnB,CAJO,CAAT;AAKA,sBACE;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEH,SAAb;AAAwB,MAAA,MAAM,EAAEC,OAAhC;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACG,QAAC,KAAD,CAAO,KAAP;AAAA,iCAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,gCACE;AAAA,+BAASM,iBAAT,cAA8BJ,cAAc,CAACO,MAA7C,6BAA0EP,cAAc,CAACO,MAAf,KAAwBH,iBAAzB,gBAA4C,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,mBAA5C,GAA6F,EAAtK;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,cAAc,CAACO,MAAf,gBAAsB,QAAC,WAAD;AAAa,UAAA,GAAG,EAAEF,aAAlB;AAAiC,UAAA,KAAK,YAAKA,aAAL;AAAtC;AAAA;AAAA;AAAA;AAAA,iBAAtB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eASI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAEP,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAiBH,CA3BgB;AAAA,UACUL,WADV,EAEaA,WAFb;AAAA,GAAjB;MAAME,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport {useSelector} from \"react-redux\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst FileModal= React.memo(({modalOpen=false, onClose,forms})=> {\r\n    const formUploadList = useSelector(state => state.formCheckList.formUploadFormList);\r\n    const formUploadCounter = useSelector(state => state.formCheckList.formUploadCounter);\r\n    const [formsUploaded, setFormsUploaded] = useState(0);\r\n\r\n    useEffect(()=>{\r\n      if(formUploadList.length){\r\n        setFormsUploaded((formUploadCounter/formUploadList.length)*100);\r\n      }\r\n    },[formUploadCounter,formUploadList]);\r\n    return (\r\n      <>\r\n          <Modal show={modalOpen} onHide={onClose}>\r\n              <Modal.Header>\r\n                 <Modal.Title><b>Forms Upload Confirmation</b></Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>{`${formUploadCounter}/${formUploadList.length} Forms  completed`} {(formUploadList.length!==formUploadCounter)?<Spinner animation=\"border\" variant=\"primary\" />:\"\"}</div>\r\n                {formUploadList.length?<ProgressBar now={formsUploaded} label={`${formsUploaded}%`} />\r\n                  : <div>No forms found</div>}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n              <Button type=\"button\" className=\"btn btn-default\" onClick={onClose}>Close</Button>\r\n              </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default FileModal;\r\n"]},"metadata":{},"sourceType":"module"}