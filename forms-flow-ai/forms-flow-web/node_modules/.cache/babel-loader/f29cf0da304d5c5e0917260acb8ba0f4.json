{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\forms-flow-master\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\n/* istanbul ignore file */\nvar downloadFile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data,\n        callback,\n        myData,\n        fileName,\n        json,\n        blob,\n        href,\n        link,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            callback = _args.length > 1 ? _args[1] : undefined;\n            myData = data;\n\n            if (myData.forms.length === 1) {\n              fileName = \"\".concat(myData.forms[0].title, \"-\").concat(new Date().toJSON());\n            } else {\n              fileName = \"forms(\".concat(myData.forms.length, \")-\").concat(new Date().toJSON());\n            }\n\n            json = JSON.stringify(myData);\n            blob = new Blob([json], {\n              type: 'application/json'\n            });\n            _context.next = 8;\n            return URL.createObjectURL(blob);\n\n          case 8:\n            href = _context.sent;\n            link = document.createElement('a');\n            link.href = href;\n            link.download = fileName + \".json\";\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            callback();\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function downloadFile() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar uploadFile = function uploadFile(evt, callback) {\n  var fileObj = evt.target.files[0];\n  var reader = new FileReader();\n  reader.readAsText(fileObj);\n\n  reader.onload = function (e) {\n    var fileContents = JSON.parse(e.target.result);\n    callback(fileContents);\n  };\n};\n\nvar FileService = {\n  uploadFile: uploadFile,\n  downloadFile: downloadFile\n};\nexport default FileService;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/src/services/FileService.js"],"names":["downloadFile","data","callback","myData","forms","length","fileName","title","Date","toJSON","json","JSON","stringify","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","uploadFile","evt","fileObj","target","files","reader","FileReader","readAsText","onload","e","fileContents","parse","result","FileService"],"mappings":";;;AAAC;AACD,IAAMA,YAAY;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,IAAP,2DAAY,EAAZ;AAAeC,YAAAA,QAAf;AACbC,YAAAA,MADa,GACJF,IADI;;AAGlB,gBAAGE,MAAM,CAACC,KAAP,CAAaC,MAAb,KAAwB,CAA3B,EACA;AACGC,cAAAA,QAAQ,aAAMH,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgBG,KAAtB,cAA+B,IAAIC,IAAJ,GAAWC,MAAX,EAA/B,CAAR;AACF,aAHD,MAII;AACFH,cAAAA,QAAQ,mBAAYH,MAAM,CAACC,KAAP,CAAaC,MAAzB,eAAoC,IAAIG,IAAJ,GAAWC,MAAX,EAApC,CAAR;AACD;;AACIC,YAAAA,IAVa,GAUNC,IAAI,CAACC,SAAL,CAAeT,MAAf,CAVM;AAWbU,YAAAA,IAXa,GAWN,IAAIC,IAAJ,CAAS,CAACJ,IAAD,CAAT,EAAgB;AAACK,cAAAA,IAAI,EAAC;AAAN,aAAhB,CAXM;AAAA;AAAA,mBAYAC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAZA;;AAAA;AAYbK,YAAAA,IAZa;AAabC,YAAAA,IAba,GAaNC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAbM;AAcnBF,YAAAA,IAAI,CAACD,IAAL,GAAYA,IAAZ;AACAC,YAAAA,IAAI,CAACG,QAAL,GAAgBhB,QAAQ,GAAG,OAA3B;AACAc,YAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;AACAA,YAAAA,IAAI,CAACM,KAAL;AACAL,YAAAA,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BP,IAA1B;AACAjB,YAAAA,QAAQ;;AAnBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZF,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAuBA,IAAM2B,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAK1B,QAAL,EAAkB;AACnC,MAAM2B,OAAO,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAhB;AACA,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBL,OAAlB;;AACAG,EAAAA,MAAM,CAACG,MAAP,GAAgB,UAACC,CAAD,EAAK;AACnB,QAAMC,YAAY,GAAG1B,IAAI,CAAC2B,KAAL,CAAWF,CAAC,CAACN,MAAF,CAASS,MAApB,CAArB;AACArC,IAAAA,QAAQ,CAACmC,YAAD,CAAR;AACD,GAHD;AAID,CARD;;AAUA,IAAMG,WAAW,GAAE;AAClBb,EAAAA,UAAU,EAAVA,UADkB;AAElB3B,EAAAA,YAAY,EAAZA;AAFkB,CAAnB;AAKA,eAAewC,WAAf","sourcesContent":[" /* istanbul ignore file */\r\nconst downloadFile = async (data={},callback) => {\r\n  const myData = data;\r\n  let fileName ;\r\n   if(myData.forms.length === 1)\r\n   {  \r\n      fileName = `${myData.forms[0].title}-${new Date().toJSON()}`;\r\n   }\r\n   else{\r\n     fileName = `forms(${myData.forms.length})-${new Date().toJSON()}`;\r\n   }\r\n  const json = JSON.stringify(myData);\r\n  const blob = new Blob([json],{type:'application/json'});\r\n  const href = await URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = href;\r\n  link.download = fileName + \".json\";\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  callback();\r\n}\r\n\r\n\r\nconst uploadFile = (evt,callback) => {\r\n  const fileObj = evt.target.files[0];\r\n  const reader = new FileReader();\r\n  reader.readAsText(fileObj);\r\n  reader.onload = (e)=>{\r\n    const fileContents = JSON.parse(e.target.result);\r\n    callback(fileContents);\r\n  };\r\n}\r\n\r\nconst FileService ={\r\n uploadFile,\r\n downloadFile\r\n};\r\n\r\nexport default FileService;\r\n"]},"metadata":{},"sourceType":"module"}