{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\ServiceFlow\\\\list\\\\ServiceTaskList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchServiceTaskList } from \"../../../apiManager/services/bpmTaskServices\";\nimport { setBPMTaskListActivePage, setBPMTaskLoader } from \"../../../actions/bpmTaskActions\";\nimport Loading from \"../../../containers/Loading\";\nimport moment from \"moment\"; // eslint-disable-next-line no-unused-vars\n\nimport { getProcessDataFromList, getFormattedDateAndTime } from \"../../../apiManager/services/formatterService\";\nimport TaskFilterComponent from \"./search/TaskFilterComponent\";\nimport Pagination from \"react-js-pagination\";\nimport { push } from \"connected-react-router\";\nimport { MAX_RESULTS } from \"../constants/taskConstants\";\nimport { getFirstResultIndex } from \"../../../apiManager/services/taskSearchParamsFormatterService\";\nimport TaskVariable from \"./TaskVariable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ServiceFlowTaskList = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var taskList = useSelector(function (state) {\n    return state.bpmTasks.tasksList;\n  }); //const taskVariable = useSelector((state)=>state.bpmTasks.selectedFilter?.properties?.variables ||[])\n\n  var tasksCount = useSelector(function (state) {\n    return state.bpmTasks.tasksCount;\n  });\n  var bpmTaskId = useSelector(function (state) {\n    return state.bpmTasks.taskId;\n  });\n  var isTaskListLoading = useSelector(function (state) {\n    return state.bpmTasks.isTaskListLoading;\n  });\n  var reqData = useSelector(function (state) {\n    return state.bpmTasks.listReqParams;\n  });\n  var dispatch = useDispatch(); // eslint-disable-next-line no-unused-vars\n\n  var processList = useSelector(function (state) {\n    return state.bpmTasks.processList;\n  });\n  var selectedFilter = useSelector(function (state) {\n    return state.bpmTasks.selectedFilter;\n  });\n  var activePage = useSelector(function (state) {\n    return state.bpmTasks.activePage;\n  });\n  var tasksPerPage = MAX_RESULTS;\n  var taskVariableObject = useSelector(function (state) {\n    return state.bpmTasks.selectedFilterAction;\n  });\n  useEffect(function () {\n    if (selectedFilter) {\n      dispatch(setBPMTaskLoader(true));\n      dispatch(setBPMTaskListActivePage(1));\n      dispatch(fetchServiceTaskList(selectedFilter.id, 0, reqData));\n    }\n  }, [dispatch, selectedFilter, reqData]);\n\n  var getTaskDetails = function getTaskDetails(taskId) {\n    if (taskId !== bpmTaskId) {\n      dispatch(push(\"/task/\".concat(taskId)));\n    }\n  };\n\n  var handlePageChange = function handlePageChange(pageNumber) {\n    dispatch(setBPMTaskListActivePage(pageNumber));\n    dispatch(setBPMTaskLoader(true));\n    var firstResultIndex = getFirstResultIndex(pageNumber);\n    dispatch(fetchServiceTaskList(selectedFilter.id, firstResultIndex, reqData));\n  };\n\n  var renderTaskList = function renderTaskList() {\n    if ((tasksCount || taskList.length) && selectedFilter) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [taskList.map(function (task, index) {\n          var _task$_embedded, _task$_embedded2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clickable \".concat((task === null || task === void 0 ? void 0 : task.id) === bpmTaskId && \"selected\"),\n            onClick: function onClick() {\n              return getTaskDetails(task.id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"font-weight-bold\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"task-row-3\",\n              style: {\n                marginBottom: \"-8px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                xs: 6,\n                sm: 6,\n                md: 6,\n                xl: 6,\n                className: \"pr-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltiptext\",\n                  \"data-title\": task.due ? getFormattedDateAndTime(task.due) : '',\n                  children: [\" \", task.due ? \"Due \".concat(moment(task.due).fromNow(), \", \") : \"\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 18\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltiptext\",\n                  \"data-title\": task.followUp ? getFormattedDateAndTime(task.followUp) : '',\n                  children: [\" \", task.followUp ? \"Follow-up \".concat(moment(task.followUp).fromNow(), \", \") : \"\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 18\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltiptext\",\n                  \"data-title\": task.created ? getFormattedDateAndTime(task.created) : '',\n                  children: [\"  Modified \", moment(task.created).fromNow()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 18\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-title\": \"Task assignee\",\n                id: \"assigned-to\",\n                className: \"col-6  mb-2 pr-3 text-left\",\n                children: task.assignee ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"Edited by \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 49\n                  }, _this), task.assignee]\n                }, void 0, true) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, _this), ((_task$_embedded = task._embedded) === null || _task$_embedded === void 0 ? void 0 : _task$_embedded.variable) && /*#__PURE__*/_jsxDEV(TaskVariable, {\n              variables: ((_task$_embedded2 = task._embedded) === null || _task$_embedded2 === void 0 ? void 0 : _task$_embedded2.variable) || []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 46\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            activePage: activePage,\n            itemsCountPerPage: tasksPerPage,\n            totalItemsCount: tasksCount,\n            pageRangeDisplayed: 3,\n            onChange: handlePageChange,\n            prevPageText: \"<\",\n            nextPageText: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"not-selected mt-2 ml-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-info-circle mr-2 mt-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this), \"No task matching filters found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      as: \"ul\",\n      className: \"service-task-list\",\n      children: [/*#__PURE__*/_jsxDEV(TaskFilterComponent, {\n        totalTasks: isTaskListLoading ? 0 : tasksCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"results-count\",\n        children: [tasksCount, \" \", tasksCount > 0 ? 'results' : 'result']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, _this), isTaskListLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 30\n      }, _this) : renderTaskList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"DkO9mmsZnyolHa6dNN3H70JrFEw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector, useSelector, useSelector];\n}));\n_c2 = ServiceFlowTaskList;\nexport default ServiceFlowTaskList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ServiceFlowTaskList$React.memo\");\n$RefreshReg$(_c2, \"ServiceFlowTaskList\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/ServiceFlow/list/ServiceTaskList.js"],"names":["React","useEffect","ListGroup","Row","Col","useDispatch","useSelector","fetchServiceTaskList","setBPMTaskListActivePage","setBPMTaskLoader","Loading","moment","getProcessDataFromList","getFormattedDateAndTime","TaskFilterComponent","Pagination","push","MAX_RESULTS","getFirstResultIndex","TaskVariable","ServiceFlowTaskList","memo","taskList","state","bpmTasks","tasksList","tasksCount","bpmTaskId","taskId","isTaskListLoading","reqData","listReqParams","dispatch","processList","selectedFilter","activePage","tasksPerPage","taskVariableObject","selectedFilterAction","id","getTaskDetails","handlePageChange","pageNumber","firstResultIndex","renderTaskList","length","map","task","index","name","marginBottom","due","fromNow","followUp","created","assignee","_embedded","variable"],"mappings":"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","sourcesContent":["import React, {useEffect } from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchServiceTaskList } from \"../../../apiManager/services/bpmTaskServices\";\r\nimport {\r\n  setBPMTaskListActivePage,\r\n  setBPMTaskLoader\r\n} from \"../../../actions/bpmTaskActions\";\r\nimport Loading from \"../../../containers/Loading\";\r\nimport moment from \"moment\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { getProcessDataFromList,getFormattedDateAndTime } from \"../../../apiManager/services/formatterService\";\r\nimport TaskFilterComponent from \"./search/TaskFilterComponent\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {push} from \"connected-react-router\";\r\nimport {MAX_RESULTS} from \"../constants/taskConstants\";\r\nimport {getFirstResultIndex} from \"../../../apiManager/services/taskSearchParamsFormatterService\";\r\nimport TaskVariable from \"./TaskVariable\";\r\nconst ServiceFlowTaskList = React.memo(() => {\r\n  const taskList = useSelector((state) => state.bpmTasks.tasksList);\r\n  //const taskVariable = useSelector((state)=>state.bpmTasks.selectedFilter?.properties?.variables ||[])\r\n  const tasksCount = useSelector(state=> state.bpmTasks.tasksCount);\r\n  const bpmTaskId = useSelector(state => state.bpmTasks.taskId);\r\n  const isTaskListLoading = useSelector(\r\n    (state) => state.bpmTasks.isTaskListLoading\r\n  );\r\n  const reqData = useSelector((state) => state.bpmTasks.listReqParams);\r\n  const dispatch = useDispatch();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const processList = useSelector((state) => state.bpmTasks.processList);\r\n  const selectedFilter = useSelector((state) => state.bpmTasks.selectedFilter);\r\n  const activePage = useSelector(state=>state.bpmTasks.activePage);\r\n  const tasksPerPage = MAX_RESULTS;\r\n  const taskVariableObject = useSelector((state)=>state.bpmTasks.selectedFilterAction)\r\n\r\n  useEffect(() => {\r\n    if (selectedFilter) {\r\n      dispatch(setBPMTaskLoader(true));\r\n      dispatch(setBPMTaskListActivePage(1));\r\n      dispatch(fetchServiceTaskList(selectedFilter.id, 0, reqData));\r\n    }\r\n  }, [dispatch, selectedFilter, reqData]);\r\n\r\n  const getTaskDetails = (taskId) => {\r\n    if(taskId!==bpmTaskId){\r\n      dispatch(push(`/task/${taskId}`));\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    dispatch(setBPMTaskListActivePage(pageNumber));\r\n    dispatch(setBPMTaskLoader(true));\r\n    let firstResultIndex = getFirstResultIndex(pageNumber) ;\r\n    dispatch(fetchServiceTaskList(selectedFilter.id, firstResultIndex, reqData));\r\n  };\r\n\r\n  const renderTaskList = () => {\r\n    if ((tasksCount||taskList.length) && selectedFilter) {\r\n      return (\r\n        <>\r\n          {taskList.map((task, index) => (\r\n            <div\r\n              className={`clickable ${\r\n                task?.id === bpmTaskId && \"selected\"\r\n              }`}\r\n              key={index}\r\n              onClick={() => getTaskDetails(task.id)}\r\n            >\r\n              <Row>\r\n                <div className=\"col-12\">\r\n                  <h5 className=\"font-weight-bold\">{task.name}</h5>\r\n                </div>\r\n                {/* <Col\r\n                  lg={4}\r\n                  xs={4}\r\n                  sm={4}\r\n                  md={4}\r\n                  xl={4}\r\n                  className=\"col-6 text-left tooltips mb-2\"\r\n                  dat-title=\"priority\"\r\n                  id=\"priority-level\"\r\n                >\r\n                  Priority level {task.priority}\r\n                </Col> */}\r\n              </Row>\r\n\r\n                {/* <div className=\"col-6 pr-0\">\r\n                  {getProcessDataFromList(\r\n                    processList,\r\n                    task.processDefinitionId,\r\n                    \"name\"\r\n                  )}\r\n                </div> */}\r\n\r\n              <Row className=\"task-row-3\" style={{marginBottom:\"-8px\"}}>\r\n                <Col\r\n                  lg={6}\r\n                  xs={6}\r\n                  sm={6}\r\n                  md={6}\r\n                  xl={6}\r\n                  className=\"pr-0\"\r\n                >\r\n                 <span className=\"tooltiptext\" data-title={task.due?getFormattedDateAndTime(task.due):''}> {task.due ? `Due ${moment(task.due).fromNow()}, ` : \"\"}{\" \"}</span>\r\n                 <span className=\"tooltiptext\" data-title={task.followUp?getFormattedDateAndTime(task.followUp):''}> {task.followUp\r\n                    ? `Follow-up ${moment(task.followUp).fromNow()}, `\r\n                    : \"\"} </span>\r\n                 <span className=\"tooltiptext\" data-title={task.created?getFormattedDateAndTime(task.created):''}>  Modified {moment(task.created).fromNow()}</span>\r\n                </Col>\r\n                <div data-title=\"Task assignee\" id=\"assigned-to\" className=\"col-6  mb-2 pr-3 text-left\">\r\n                  {task.assignee ? (<>Edited by <br/>{task.assignee}</>) : ''}\r\n                </div>\r\n              </Row>\r\n              {\r\n                task._embedded?.variable &&  <TaskVariable variables={task._embedded?.variable||[]}/>\r\n              }\r\n                       \r\n            </div>\r\n          ))}\r\n          <div className=\"pagination-wrapper\">\r\n            <Pagination\r\n              activePage={activePage}\r\n              itemsCountPerPage={tasksPerPage}\r\n              totalItemsCount={tasksCount}\r\n              pageRangeDisplayed={3}\r\n              onChange={handlePageChange}\r\n              prevPageText=\"<\"\r\n              nextPageText=\">\"\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Row className=\"not-selected mt-2 ml-1\">\r\n          <i className=\"fa fa-info-circle mr-2 mt-1\" />\r\n          No task matching filters found.\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListGroup as=\"ul\" className=\"service-task-list\">\r\n        <TaskFilterComponent totalTasks={isTaskListLoading?0:tasksCount} />\r\n        <p className=\"results-count\">{ tasksCount } { tasksCount > 0 ? 'results' :'result'}</p>\r\n        {isTaskListLoading ? <Loading /> : renderTaskList()}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ServiceFlowTaskList;\r\n"]},"metadata":{},"sourceType":"module"}