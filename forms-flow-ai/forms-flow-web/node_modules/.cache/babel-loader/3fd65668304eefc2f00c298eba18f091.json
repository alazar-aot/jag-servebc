{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\index.js\";\n\n/* istanbul ignore file */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport StoreService from \"./services/StoreService\"; // import UserService from \"./services/UserService\";\n\nimport { Formio, Components } from 'react-formio';\nimport { AppConfig } from './config'; //import * as serviceWorker from './serviceWorker';\n\nimport components from './customFormioComponents';\nimport './styles.scss'; // disable react-dev-tools for this project\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (typeof window.__REACT_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n  for (var _i = 0, _Object$entries = Object.entries(window.__REACT_DEVTOOLS_GLOBAL_HOOK__); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    window.__REACT_DEVTOOLS_GLOBAL_HOOK__[key] = typeof value == \"function\" ? function () {} : null;\n  }\n}\n\nvar store = StoreService.configureStore();\nvar history = StoreService.history;\nFormio.setProjectUrl(AppConfig.projectUrl);\nFormio.setBaseUrl(AppConfig.apiUrl);\nComponents.setComponents(components);\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  store: store,\n  history: history\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 17\n}, this), document.getElementById(\"app\")); // const renderApp = () => ReactDOM.render(<App {...{ store, history }} />, document.getElementById(\"app\"));\n//serviceWorker.register();\n// UserService.initKeycloak(renderApp, store);\n// Adding Bearer token to fileUpload operations\n\nif (!XMLHttpRequest.prototype.origOpen) {\n  XMLHttpRequest.prototype.origOpen = XMLHttpRequest.prototype.open;\n\n  XMLHttpRequest.prototype.open = function (method, url) {\n    this.origOpen.apply(this, arguments);\n\n    if (url && url.includes(\"/api/v1/files\")) {\n      this.setRequestHeader('Authorization', 'Bearer ' + localStorage.authToken);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/index.js"],"names":["React","ReactDOM","App","StoreService","Formio","Components","AppConfig","components","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","Object","entries","key","value","store","configureStore","history","setProjectUrl","projectUrl","setBaseUrl","apiUrl","setComponents","render","document","getElementById","XMLHttpRequest","prototype","origOpen","open","method","url","apply","arguments","includes","setRequestHeader","localStorage","authToken"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CACA;;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAkC,cAAlC;AACA,SAAQC,SAAR,QAAwB,UAAxB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,eAAP,C,CAGA;;;;AACA,IAAI,OAAOC,MAAM,CAACC,8BAAd,KAAiD,QAArD,EAA+D;AAC7D,qCAAyBC,MAAM,CAACC,OAAP,CAAeH,MAAM,CAACC,8BAAtB,CAAzB,qCAAgF;AAA3E;AAAA,QAAKG,GAAL;AAAA,QAAUC,KAAV;;AACHL,IAAAA,MAAM,CAACC,8BAAP,CAAsCG,GAAtC,IAA6C,OAAOC,KAAP,IAAgB,UAAhB,GAA6B,YAAI,CAAE,CAAnC,GAAsC,IAAnF;AACD;AACF;;AAED,IAAMC,KAAK,GAAGX,YAAY,CAACY,cAAb,EAAd;AACA,IAAMC,OAAO,GAAGb,YAAY,CAACa,OAA7B;AAEAZ,MAAM,CAACa,aAAP,CAAqBX,SAAS,CAACY,UAA/B;AACAd,MAAM,CAACe,UAAP,CAAkBb,SAAS,CAACc,MAA5B;AACAf,UAAU,CAACgB,aAAX,CAAyBd,UAAzB;AAEAN,QAAQ,CAACqB,MAAT,eAAgB,QAAC,GAAD;AAAWR,EAAAA,KAAK,EAALA,KAAX;AAAkBE,EAAAA,OAAO,EAAPA;AAAlB;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAiDO,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAjD,E,CACA;AAEA;AACA;AAGA;;AACA,IAAI,CAACC,cAAc,CAACC,SAAf,CAAyBC,QAA9B,EAAwC;AACtCF,EAAAA,cAAc,CAACC,SAAf,CAAyBC,QAAzB,GAAoCF,cAAc,CAACC,SAAf,CAAyBE,IAA7D;;AACAH,EAAAA,cAAc,CAACC,SAAf,CAAyBE,IAAzB,GAAgC,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AACrD,SAAKH,QAAL,CAAcI,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,QAAIF,GAAG,IAAIA,GAAG,CAACG,QAAJ,CAAa,eAAb,CAAX,EAA0C;AACxC,WAAKC,gBAAL,CAAsB,eAAtB,EAAuC,YAAWC,YAAY,CAACC,SAA/D;AACD;AACF,GALD;AAMD","sourcesContent":["/* istanbul ignore file */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport StoreService from \"./services/StoreService\";\r\n// import UserService from \"./services/UserService\";\r\n\r\nimport { Formio, Components} from 'react-formio';\r\nimport {AppConfig} from './config';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport components from './customFormioComponents';\r\nimport './styles.scss';\r\n\r\n\r\n// disable react-dev-tools for this project\r\nif (typeof window.__REACT_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\r\n  for (let [key, value] of Object.entries(window.__REACT_DEVTOOLS_GLOBAL_HOOK__)) {\r\n    window.__REACT_DEVTOOLS_GLOBAL_HOOK__[key] = typeof value == \"function\" ? ()=>{} : null;\r\n  }\r\n}\r\n\r\nconst store = StoreService.configureStore();\r\nconst history = StoreService.history;\r\n\r\nFormio.setProjectUrl(AppConfig.projectUrl);\r\nFormio.setBaseUrl(AppConfig.apiUrl);\r\nComponents.setComponents(components);\r\n\r\nReactDOM.render(<App {...{ store, history }} />, document.getElementById(\"app\"));\r\n// const renderApp = () => ReactDOM.render(<App {...{ store, history }} />, document.getElementById(\"app\"));\r\n\r\n//serviceWorker.register();\r\n// UserService.initKeycloak(renderApp, store);\r\n\r\n\r\n// Adding Bearer token to fileUpload operations\r\nif (!XMLHttpRequest.prototype.origOpen) {\r\n  XMLHttpRequest.prototype.origOpen = XMLHttpRequest.prototype.open;\r\n  XMLHttpRequest.prototype.open = function (method, url) {\r\n    this.origOpen.apply(this, arguments);\r\n    if (url && url.includes(\"/api/v1/files\")) {\r\n      this.setRequestHeader('Authorization', 'Bearer '+ localStorage.authToken);\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}