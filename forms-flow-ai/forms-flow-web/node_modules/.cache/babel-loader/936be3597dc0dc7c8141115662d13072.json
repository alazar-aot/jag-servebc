{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport ACTION_CONSTANTS from \"../actions/actionConstants\";\nimport { TASK_FILTER_LIST_DEFAULT_PARAM } from \"../constants/taskConstants\";\nimport { getFirstResultIndex, getFormattedParams } from \"../apiManager/services/taskSearchParamsFormatterService\";\nimport { QUERY_TYPES } from \"../components/ServiceFlow/constants/taskConstants\";\nimport { sortByPriorityList } from \"../apiManager/services/filterListFormatterService\";\nvar initialState = {\n  isTaskListLoading: true,\n  tasksList: [],\n  tasksCount: 0,\n  taskDetail: null,\n  isTaskUpdating: false,\n  appHistory: [],\n  isHistoryListLoading: true,\n  isTaskDetailLoading: true,\n  isTaskDetailUpdating: false,\n  isGroupLoading: false,\n  processList: [],\n  userList: [],\n  filterList: [],\n  isFilterLoading: true,\n  selectedFilter: null,\n  taskId: null,\n  filterListSortParams: {\n    sorting: [_objectSpread({}, TASK_FILTER_LIST_DEFAULT_PARAM)]\n  },\n  filterSearchSelections: [],\n  filterListSearchParams: {},\n  listReqParams: {\n    sorting: [_objectSpread({}, TASK_FILTER_LIST_DEFAULT_PARAM)]\n  },\n  searchQueryType: QUERY_TYPES.ALL,\n  variableNameIgnoreCase: false,\n  variableValueIgnoreCase: false,\n  taskGroups: [],\n  taskFormSubmissionReload: false,\n  activePage: 1,\n  firstResult: 0\n};\n\nvar bpmTasks = function bpmTasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACTION_CONSTANTS.IS_BPM_TASK_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isTaskListLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_BPM_TASK_DETAIL_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isTaskDetailLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_BPM_TASK_DETAIL_UPDATING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isTaskDetailUpdating: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_LIST_TASKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasksList: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_PROCESS_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processList: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_USER_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_TASKS_COUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasksCount: action.payload.count\n      });\n\n    case ACTION_CONSTANTS.BPM_TASK_DETAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        taskDetail: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_BPM_TASK_UPDATING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isTaskUpdating: action.payload\n      });\n\n    case ACTION_CONSTANTS.IS_HISTORY_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isHistoryListLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.LIST_APPLICATION_HISTORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        appHistory: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_FILTER_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterList: sortByPriorityList(action.payload)\n      });\n\n    case ACTION_CONSTANTS.IS_BPM_FILTERS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFilterLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_SELECTED_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedFilter: action.payload\n      });\n\n    case ACTION_CONSTANTS.SELECTED_TASK_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        taskId: action.payload,\n        taskDetail: null\n      });\n\n    case ACTION_CONSTANTS.IS_TASK_GROUP_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isGroupLoading: action.payload\n      });\n\n    case ACTION_CONSTANTS.SET_TASK_GROUP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        taskGroups: action.payload,\n        isGroupLoading: false\n      });\n\n    case ACTION_CONSTANTS.UPDATE_FILTER_LIST_SORT_PARAMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterListSortParams: {\n          sorting: action.payload\n        }\n      });\n\n    case ACTION_CONSTANTS.UPDATE_FILTER_LIST_SEARCH_PARAMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterListSearchParams: getFormattedParams(action.payload, state.searchQueryType, state.variableNameIgnoreCase, state.variableValueIgnoreCase),\n        filterSearchSelections: action.payload\n      });\n\n    case ACTION_CONSTANTS.UPDATE_SEARCH_QUERY_TYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterListSearchParams: getFormattedParams(state.filterSearchSelections, action.payload, state.variableNameIgnoreCase, state.variableValueIgnoreCase),\n        searchQueryType: action.payload\n      });\n\n    case ACTION_CONSTANTS.UPDATE_VARIABLE_NAME_IGNORE_CASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterListSearchParams: getFormattedParams(state.filterSearchSelections, state.searchQueryType, action.payload, state.variableValueIgnoreCase),\n        variableNameIgnoreCase: action.payload\n      });\n\n    case ACTION_CONSTANTS.UPDATE_VARIABLE_VALUE_IGNORE_CASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterListSearchParams: getFormattedParams(state.filterSearchSelections, state.searchQueryType, state.variableNameIgnoreCase, action.payload),\n        variableValueIgnoreCase: action.payload\n      });\n\n    case ACTION_CONSTANTS.UPDATE_LIST_PARAMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listReqParams: action.payload\n      });\n\n    case ACTION_CONSTANTS.RELOAD_TASK_FORM_SUBMISSION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        taskFormSubmissionReload: action.payload\n      });\n\n    case ACTION_CONSTANTS.BPM_TASK_LIST_ACTIVE_PAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activePage: action.payload,\n        firstResult: getFirstResultIndex(action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default bpmTasks;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/modules/bpmTaskReducer.js"],"names":["ACTION_CONSTANTS","TASK_FILTER_LIST_DEFAULT_PARAM","getFirstResultIndex","getFormattedParams","QUERY_TYPES","sortByPriorityList","initialState","isTaskListLoading","tasksList","tasksCount","taskDetail","isTaskUpdating","appHistory","isHistoryListLoading","isTaskDetailLoading","isTaskDetailUpdating","isGroupLoading","processList","userList","filterList","isFilterLoading","selectedFilter","taskId","filterListSortParams","sorting","filterSearchSelections","filterListSearchParams","listReqParams","searchQueryType","ALL","variableNameIgnoreCase","variableValueIgnoreCase","taskGroups","taskFormSubmissionReload","activePage","firstResult","bpmTasks","state","action","type","IS_BPM_TASK_LOADING","payload","IS_BPM_TASK_DETAIL_LOADING","IS_BPM_TASK_DETAIL_UPDATING","BPM_LIST_TASKS","BPM_PROCESS_LIST","BPM_USER_LIST","BPM_TASKS_COUNT","count","BPM_TASK_DETAIL","IS_BPM_TASK_UPDATING","IS_HISTORY_LOADING","LIST_APPLICATION_HISTORY","BPM_FILTER_LIST","IS_BPM_FILTERS_LOADING","BPM_SELECTED_FILTER","SELECTED_TASK_ID","IS_TASK_GROUP_LOADING","SET_TASK_GROUP","UPDATE_FILTER_LIST_SORT_PARAMS","UPDATE_FILTER_LIST_SEARCH_PARAMS","UPDATE_SEARCH_QUERY_TYPE","UPDATE_VARIABLE_NAME_IGNORE_CASE","UPDATE_VARIABLE_VALUE_IGNORE_CASE","UPDATE_LIST_PARAMS","RELOAD_TASK_FORM_SUBMISSION","BPM_TASK_LIST_ACTIVE_PAGE"],"mappings":"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","sourcesContent":["import ACTION_CONSTANTS from \"../actions/actionConstants\";\r\nimport {TASK_FILTER_LIST_DEFAULT_PARAM} from \"../constants/taskConstants\";\r\nimport {getFirstResultIndex, getFormattedParams} from \"../apiManager/services/taskSearchParamsFormatterService\";\r\nimport {QUERY_TYPES} from \"../components/ServiceFlow/constants/taskConstants\";\r\nimport {sortByPriorityList} from \"../apiManager/services/filterListFormatterService\";\r\n\r\nconst initialState = {\r\n  isTaskListLoading:true,\r\n  tasksList:[],\r\n  tasksCount:0,\r\n  taskDetail: null,\r\n  isTaskUpdating:false,\r\n  appHistory:[],\r\n  isHistoryListLoading: true,\r\n  isTaskDetailLoading:true,\r\n  isTaskDetailUpdating:false,\r\n  isGroupLoading:false,\r\n  processList:[],\r\n  userList:[],\r\n  filterList:[],\r\n  isFilterLoading:true,\r\n  selectedFilter:null,\r\n  taskId:null,\r\n  filterListSortParams:{sorting:[{...TASK_FILTER_LIST_DEFAULT_PARAM}]},\r\n  filterSearchSelections:[],\r\n  filterListSearchParams:{},\r\n  listReqParams:{sorting:[{...TASK_FILTER_LIST_DEFAULT_PARAM}]},\r\n  searchQueryType:QUERY_TYPES.ALL,\r\n  variableNameIgnoreCase:false,\r\n  variableValueIgnoreCase:false,\r\n  taskGroups:[],\r\n  taskFormSubmissionReload:false,\r\n  activePage:1,\r\n  firstResult:0,\r\n}\r\n\r\nconst bpmTasks =(state = initialState, action)=> {\r\n  switch (action.type) {\r\n    case ACTION_CONSTANTS.IS_BPM_TASK_LOADING:\r\n      return {...state, isTaskListLoading: action.payload};\r\n    case ACTION_CONSTANTS.IS_BPM_TASK_DETAIL_LOADING:\r\n      return {...state, isTaskDetailLoading: action.payload};\r\n    case ACTION_CONSTANTS.IS_BPM_TASK_DETAIL_UPDATING:\r\n      return {...state, isTaskDetailUpdating: action.payload};\r\n    case ACTION_CONSTANTS.BPM_LIST_TASKS:\r\n      return {...state, tasksList: action.payload};\r\n    case ACTION_CONSTANTS.BPM_PROCESS_LIST:\r\n      return {...state, processList: action.payload};\r\n    case ACTION_CONSTANTS.BPM_USER_LIST:\r\n      return {...state, userList: action.payload};\r\n    case ACTION_CONSTANTS.BPM_TASKS_COUNT:\r\n      return {...state, tasksCount: action.payload.count};\r\n    case ACTION_CONSTANTS.BPM_TASK_DETAIL:\r\n      return {...state, taskDetail: action.payload};\r\n    case ACTION_CONSTANTS.IS_BPM_TASK_UPDATING:\r\n      return {...state, isTaskUpdating: action.payload};\r\n    case ACTION_CONSTANTS.IS_HISTORY_LOADING:\r\n      return {...state, isHistoryListLoading: action.payload};\r\n    case ACTION_CONSTANTS.LIST_APPLICATION_HISTORY:\r\n      return {...state, appHistory: action.payload};\r\n    case ACTION_CONSTANTS.BPM_FILTER_LIST:\r\n      return {...state, filterList: sortByPriorityList(action.payload)};\r\n    case ACTION_CONSTANTS.IS_BPM_FILTERS_LOADING:\r\n      return {...state, isFilterLoading: action.payload};\r\n    case ACTION_CONSTANTS.BPM_SELECTED_FILTER:\r\n      return {...state, selectedFilter: action.payload};\r\n    case ACTION_CONSTANTS.SELECTED_TASK_ID:\r\n      return {...state, taskId: action.payload, taskDetail:null};\r\n    case ACTION_CONSTANTS.IS_TASK_GROUP_LOADING:\r\n      return {...state, isGroupLoading: action.payload};\r\n    case ACTION_CONSTANTS.SET_TASK_GROUP:\r\n      return {...state, taskGroups:action.payload,isGroupLoading:false}\r\n    case ACTION_CONSTANTS.UPDATE_FILTER_LIST_SORT_PARAMS:\r\n      return {...state, filterListSortParams:{sorting:action.payload}}\r\n    case ACTION_CONSTANTS.UPDATE_FILTER_LIST_SEARCH_PARAMS:\r\n      return {...state, filterListSearchParams:getFormattedParams(action.payload,state.searchQueryType,state.variableNameIgnoreCase, state.variableValueIgnoreCase), filterSearchSelections:action.payload}\r\n    case ACTION_CONSTANTS.UPDATE_SEARCH_QUERY_TYPE:\r\n      return {...state, filterListSearchParams:getFormattedParams(state.filterSearchSelections,action.payload,state.variableNameIgnoreCase, state.variableValueIgnoreCase), searchQueryType:action.payload}\r\n    case ACTION_CONSTANTS.UPDATE_VARIABLE_NAME_IGNORE_CASE:\r\n      return {...state, filterListSearchParams:getFormattedParams(state.filterSearchSelections,state.searchQueryType,action.payload, state.variableValueIgnoreCase), variableNameIgnoreCase:action.payload}\r\n    case ACTION_CONSTANTS.UPDATE_VARIABLE_VALUE_IGNORE_CASE:\r\n      return {...state, filterListSearchParams:getFormattedParams(state.filterSearchSelections,state.searchQueryType,state.variableNameIgnoreCase,action.payload), variableValueIgnoreCase:action.payload}\r\n    case ACTION_CONSTANTS.UPDATE_LIST_PARAMS:\r\n      return {...state, listReqParams:action.payload}\r\n    case ACTION_CONSTANTS.RELOAD_TASK_FORM_SUBMISSION:\r\n      return {...state, taskFormSubmissionReload:action.payload}\r\n    case ACTION_CONSTANTS.BPM_TASK_LIST_ACTIVE_PAGE:\r\n      return {...state, activePage:action.payload, firstResult: getFirstResultIndex(action.payload)}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bpmTasks;\r\n"]},"metadata":{},"sourceType":"module"}