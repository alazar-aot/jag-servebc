{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Devin\\\\AOT_Projects\\\\jag-servebc\\\\forms-flow-ai\\\\forms-flow-web\\\\src\\\\components\\\\Form\\\\Steps\\\\SaveNext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Buttons from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar SaveNext = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var handleNext = _ref.handleNext,\n      handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isLastStep = _ref.isLastStep,\n      submitData = _ref.submitData,\n      modified = _ref.modified;\n  var applicationCount = useSelector(function (state) {\n    return state.process.applicationCount;\n  });\n\n  var handleChanges = function handleChanges() {\n    if (applicationCount > 0) {\n      if (modified) {\n        handleShow();\n      } else if (!isLastStep) {\n        handleNext();\n      } else {\n        submitData();\n      }\n    } else {\n      !isLastStep ? handleNext() : submitData();\n    }\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleChanges,\n      children: isLastStep ? \"Save\" : \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Changing the form workflow will not affect the existing applications. It will only update in the newly created applications. Press Save Changes to continue or cancel the changes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Buttons, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Buttons, {\n          variant: \"primary\",\n          onClick: !isLastStep ? handleNext : submitData,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}, \"3R/oZoHBrXyNNLvu8cWdkC22Sck=\", false, function () {\n  return [useSelector];\n}));\n_c2 = SaveNext;\nexport default SaveNext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SaveNext$React.memo\");\n$RefreshReg$(_c2, \"SaveNext\");","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/src/components/Form/Steps/SaveNext.js"],"names":["React","useState","Button","Buttons","Modal","useSelector","SaveNext","memo","handleNext","handleBack","activeStep","isLastStep","submitData","modified","applicationCount","state","process","handleChanges","handleShow","show","setShow","handleClose"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,IAAMC,QAAQ,gBAAGN,KAAK,CAACO,IAAN,SAAW,gBAA6E;AAAA;;AAAA,MAA1EC,UAA0E,QAA1EA,UAA0E;AAAA,MAA9DC,UAA8D,QAA9DA,UAA8D;AAAA,MAAlDC,UAAkD,QAAlDA,UAAkD;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvG,MAAMC,gBAAgB,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAUA,KAAK,CAACC,OAAN,CAAcF,gBAAxB;AAAA,GAAD,CAApC;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACzB,QAAIH,gBAAgB,GAAG,CAAvB,EAAyB;AACxB,UAAGD,QAAH,EAAY;AACVK,QAAAA,UAAU;AACX,OAFD,MAEM,IAAG,CAACP,UAAJ,EAAe;AACnBH,QAAAA,UAAU;AACX,OAFK,MAED;AACHI,QAAAA,UAAU;AACX;AACD,KARD,MAQK;AACJ,OAACD,UAAD,GAAaH,UAAU,EAAvB,GAA4BI,UAAU,EAAtC;AACA;AAED,GAbD;;AAcA,kBAAwBX,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,OAAO,CAAC,KAAD,CAAb;AAAA,GAApB;;AACA,MAAMF,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAME,OAAO,CAAC,IAAD,CAAb;AAAA,GAAnB;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEV,UAAU,KAAK,CAAjC;AAAoC,MAAA,OAAO,EAAED,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAEQ,aAHX;AAAA,gBAKGN,UAAU,GAAG,MAAH,GAAY;AALzB;AAAA;AAAA;AAAA;AAAA,aAJF,eAWE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEQ,IAAb;AAAmB,MAAA,MAAM,EAAEE,WAA3B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,WAAjB;AAA6B,UAAA,OAAO,EAAEA,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,SAAjB;AAA2B,UAAA,OAAO,EAAE,CAACV,UAAD,GAAaH,UAAb,GAAwBI,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA,kBADF;AA4BD,CAhDgB;AAAA,UACUP,WADV;AAAA,GAAjB;MAAMC,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport Button  from \"@material-ui/core/Button\";\r\nimport Buttons from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useSelector } from \"react-redux\";\r\nconst SaveNext = React.memo(({ handleNext, handleBack, activeStep, isLastStep, submitData,modified }) => {\r\n  const applicationCount = useSelector((state) =>state.process.applicationCount)\r\n  const handleChanges = ()=>{\r\n   if( applicationCount > 0){\r\n    if(modified){\r\n      handleShow()\r\n    }else if(!isLastStep){\r\n      handleNext()\r\n    }else{\r\n      submitData()\r\n    }\r\n   }else{\r\n    !isLastStep? handleNext() : submitData()\r\n   }\r\n   \r\n  }\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  return (\r\n    <>\r\n      <Button disabled={activeStep === 0} onClick={handleBack}>\r\n        Back\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleChanges}\r\n      >\r\n        {isLastStep ? \"Save\" : \"Next\"}\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Changing the form workflow will not affect the existing applications. It will only update in the newly created applications. Press Save Changes to continue or cancel the changes.</Modal.Body>\r\n        <Modal.Footer>\r\n          <Buttons variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Buttons>\r\n          <Buttons variant=\"primary\" onClick={!isLastStep? handleNext:submitData}>\r\n            Save Changes\r\n          </Buttons>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\nexport default SaveNext;\r\n"]},"metadata":{},"sourceType":"module"}