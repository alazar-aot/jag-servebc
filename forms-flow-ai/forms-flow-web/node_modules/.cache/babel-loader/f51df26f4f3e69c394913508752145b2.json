{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Evaluator = _interopRequireDefault(require(\"../../../utils/Evaluator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = [{\n  key: 'placeholder',\n  ignore: true\n}, {\n  type: 'checkbox',\n  label: 'Open First Row when Empty',\n  key: 'openWhenEmpty',\n  tooltip: 'Check this if you would like to open up the first row when the EditGrid is empty',\n  weight: 1000,\n  input: true,\n  conditional: {\n    json: {\n      '!==': [{\n        var: 'data.modal'\n      }, true]\n    }\n  }\n}, {\n  type: 'checkbox',\n  label: 'Disable Adding / Removing Rows',\n  key: 'disableAddingRemovingRows',\n  tooltip: 'Check if you want to hide Add Another button and Remove Row button',\n  weight: 1001,\n  input: true,\n  clearOnHide: false,\n  calculateValue: 'value = data.disableAddingRemovingRows;'\n}, {\n  type: 'checkbox',\n  label: 'Display EditGrid as Table',\n  key: 'displayAsTable',\n  tooltip: 'use Table Template',\n  weight: 1002,\n  input: false,\n  customConditional: function customConditional() {\n    return !_Evaluator.default.noeval;\n  }\n}, {\n  weight: 1010,\n  type: 'textarea',\n  input: true,\n  key: 'conditionalAddButton',\n  label: 'Conditional Add Button',\n  placeholder: 'show = ...',\n  tooltip: 'Specify condition when Add Button should be displayed.',\n  editor: 'ace',\n  as: 'javascript',\n  wysiwyg: {\n    minLines: 3\n  }\n}];\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/forms-flow-master/forms-flow-ai/forms-flow-web/node_modules/formiojs/components/editgrid/editForm/EditGrid.edit.display.js"],"names":["Object","defineProperty","exports","value","default","_Evaluator","_interopRequireDefault","require","obj","__esModule","_default","key","ignore","type","label","tooltip","weight","input","conditional","json","var","clearOnHide","calculateValue","customConditional","noeval","placeholder","editor","as","wysiwyg","minLines"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAvC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,QAAQ,GAAG,CAAC;AACdC,EAAAA,GAAG,EAAE,aADS;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAD,EAGZ;AACDC,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,KAAK,EAAE,2BAFN;AAGDH,EAAAA,GAAG,EAAE,eAHJ;AAIDI,EAAAA,OAAO,EAAE,kFAJR;AAKDC,EAAAA,MAAM,EAAE,IALP;AAMDC,EAAAA,KAAK,EAAE,IANN;AAODC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE;AACJ,aAAO,CAAC;AACNC,QAAAA,GAAG,EAAE;AADC,OAAD,EAEJ,IAFI;AADH;AADK;AAPZ,CAHY,EAiBZ;AACDP,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,KAAK,EAAE,gCAFN;AAGDH,EAAAA,GAAG,EAAE,2BAHJ;AAIDI,EAAAA,OAAO,EAAE,oEAJR;AAKDC,EAAAA,MAAM,EAAE,IALP;AAMDC,EAAAA,KAAK,EAAE,IANN;AAODI,EAAAA,WAAW,EAAE,KAPZ;AAQDC,EAAAA,cAAc,EAAE;AARf,CAjBY,EA0BZ;AACDT,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,KAAK,EAAE,2BAFN;AAGDH,EAAAA,GAAG,EAAE,gBAHJ;AAIDI,EAAAA,OAAO,EAAE,oBAJR;AAKDC,EAAAA,MAAM,EAAE,IALP;AAMDC,EAAAA,KAAK,EAAE,KANN;AAODM,EAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,WAAO,CAAClB,UAAU,CAACD,OAAX,CAAmBoB,MAA3B;AACD;AATA,CA1BY,EAoCZ;AACDR,EAAAA,MAAM,EAAE,IADP;AAEDH,EAAAA,IAAI,EAAE,UAFL;AAGDI,EAAAA,KAAK,EAAE,IAHN;AAIDN,EAAAA,GAAG,EAAE,sBAJJ;AAKDG,EAAAA,KAAK,EAAE,wBALN;AAMDW,EAAAA,WAAW,EAAE,YANZ;AAODV,EAAAA,OAAO,EAAE,wDAPR;AAQDW,EAAAA,MAAM,EAAE,KARP;AASDC,EAAAA,EAAE,EAAE,YATH;AAUDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH;AAVR,CApCY,CAAf;AAkDA3B,OAAO,CAACE,OAAR,GAAkBM,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Evaluator = _interopRequireDefault(require(\"../../../utils/Evaluator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = [{\n  key: 'placeholder',\n  ignore: true\n}, {\n  type: 'checkbox',\n  label: 'Open First Row when Empty',\n  key: 'openWhenEmpty',\n  tooltip: 'Check this if you would like to open up the first row when the EditGrid is empty',\n  weight: 1000,\n  input: true,\n  conditional: {\n    json: {\n      '!==': [{\n        var: 'data.modal'\n      }, true]\n    }\n  }\n}, {\n  type: 'checkbox',\n  label: 'Disable Adding / Removing Rows',\n  key: 'disableAddingRemovingRows',\n  tooltip: 'Check if you want to hide Add Another button and Remove Row button',\n  weight: 1001,\n  input: true,\n  clearOnHide: false,\n  calculateValue: 'value = data.disableAddingRemovingRows;'\n}, {\n  type: 'checkbox',\n  label: 'Display EditGrid as Table',\n  key: 'displayAsTable',\n  tooltip: 'use Table Template',\n  weight: 1002,\n  input: false,\n  customConditional: function customConditional() {\n    return !_Evaluator.default.noeval;\n  }\n}, {\n  weight: 1010,\n  type: 'textarea',\n  input: true,\n  key: 'conditionalAddButton',\n  label: 'Conditional Add Button',\n  placeholder: 'show = ...',\n  tooltip: 'Specify condition when Add Button should be displayed.',\n  editor: 'ace',\n  as: 'javascript',\n  wysiwyg: {\n    minLines: 3\n  }\n}];\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}