{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nrequire(\"core-js/modules/es.array.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _Formio = require(\"./Formio\");\n\nvar FormioUtils = _interopRequireWildcard(require(\"./utils/utils\"));\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _vanillaTextMask = _interopRequireDefault(require(\"@formio/vanilla-text-mask\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * The root component for all elements within the Form.io renderer.\n */\n\n\nvar Element = /*#__PURE__*/function () {\n  function Element(options) {\n    _classCallCheck(this, Element);\n    /**\n     * The options for this component.\n     * @type {{}}\n     */\n\n\n    this.options = Object.assign({\n      language: 'en',\n      highlightErrors: true,\n      componentErrorClass: 'formio-error-wrapper',\n      componentWarningClass: 'formio-warning-wrapper',\n      row: '',\n      namespace: 'formio'\n    }, options || {});\n    /**\n     * The ID of this component. This value is auto-generated when the component is created, but\n     * can also be provided from the component.id value passed into the constructor.\n     * @type {string}\n     */\n\n    this.id = FormioUtils.getRandomComponentId();\n    /**\n     * An array of event handlers so that the destry command can deregister them.\n     * @type {Array}\n     */\n\n    this.eventHandlers = []; // Use the i18next that is passed in, otherwise use the global version.\n\n    this.i18next = this.options.i18next || _i18next.default;\n    /**\n     * An instance of the EventEmitter class to handle the emitting and registration of events.\n     *\n     * @type {EventEmitter}\n     */\n\n    this.events = options && options.events ? options.events : new _EventEmitter.default();\n    this.defaultMask = null;\n    /**\n     * Conditional to show or hide helplinks in editForm\n     *\n     * @type {*|boolean}\n     */\n\n    this.helplinks = this.helplinks = this.options.helplinks === 'false' ? false : this.options.helplinks || 'https://help.form.io';\n  }\n  /**\n   * Register for a new event within this component.\n   *\n   * @example\n   * let component = new BaseComponent({\n   *   type: 'textfield',\n   *   label: 'First Name',\n   *   key: 'firstName'\n   * });\n   * component.on('componentChange', (changed) => {\n   *   console.log('this element is changed.');\n   * });\n   *\n   *\n   * @param {string} event - The event you wish to register the handler for.\n   * @param {function} cb - The callback handler to handle this event.\n   */\n\n\n  _createClass(Element, [{\n    key: \"on\",\n    value: function on(event, cb, internal) {\n      var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event); // Store the component id in the handler so that we can determine which events are for this component.\n\n      cb.id = this.id;\n      cb.key = this.key;\n      cb.internal = internal; // Register for this event.\n\n      return this.events[once ? 'once' : 'on'](type, cb);\n    }\n    /**\n     * Register for a new single-fire event within this component.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"once\",\n    value: function once(event, cb, internal) {\n      return this.on(event, cb, internal, true);\n    }\n    /**\n     * Allow catching any event.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"onAny\",\n    value: function onAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.onAny(cb);\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"offAny\",\n    value: function offAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.offAny(cb);\n    }\n    /**\n     * Removes a listener for a certain event. Not passing the 2nd arg will remove all listeners for that event.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function|undefined} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(event, cb) {\n      var _this = this;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      this.events.listeners(type).forEach(function (listener) {\n        // Ensure the listener is for this element\n        if (!listener || listener.id !== _this.id) {\n          return;\n        } // If there is a given callback, only deal with the match\n\n\n        if (cb && cb !== listener) {\n          return;\n        }\n\n        _this.events.off(type, listener);\n      });\n    }\n    /**\n     * Emit a new event.\n     *\n     * @param {string} event - The event to emit.\n     * @param {Object} data - The data to emit with the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      if (this.events) {\n        var _this$events;\n\n        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          data[_key - 1] = arguments[_key];\n        }\n\n        (_this$events = this.events).emit.apply(_this$events, [\"\".concat(this.options.namespace, \".\").concat(event)].concat(data));\n      }\n    }\n    /**\n     * Check if the component has an event handler set up for the event.\n     *\n     * @param {string} event - The event name.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"hasEventHandler\",\n    value: function hasEventHandler(event) {\n      var _this2 = this;\n\n      if (!this.events) {\n        return false;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      return this.events.listeners(type).some(function (listener) {\n        if (!listener) {\n          return false;\n        }\n\n        return listener.id === _this2.id || listener.key === _this2.key;\n      });\n    }\n    /**\n     * Wrapper method to add an event listener to an HTML element.\n     *\n     * @param obj\n     *   The DOM element to add the event to.\n     * @param type\n     *   The event name to add.\n     * @param func\n     *   The callback function to be executed when the listener is triggered.\n     * @param persistent\n     *   If this listener should persist beyond \"destroy\" commands.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(obj, type, func, persistent) {\n      if (!obj) {\n        return;\n      }\n\n      if (!persistent) {\n        this.eventHandlers.push({\n          id: this.id,\n          obj: obj,\n          type: type,\n          func: func\n        });\n      }\n\n      if ('addEventListener' in obj) {\n        obj.addEventListener(type, func, false);\n      } else if ('attachEvent' in obj) {\n        obj.attachEvent(\"on\".concat(type), func);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an event listener from the object.\n     *\n     * @param obj\n     * @param type\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(obj, type) {\n      var _this3 = this;\n\n      var func = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var indexes = [];\n\n      if (!obj) {\n        return;\n      }\n\n      this.eventHandlers.forEach(function (handler, index) {\n        if (handler.id === _this3.id && obj.removeEventListener && handler.type === type && (!func || handler.func === func)) {\n          obj.removeEventListener(type, handler.func);\n          indexes.push(index);\n        }\n      });\n\n      if (indexes.length) {\n        _lodash.default.pullAt(this.eventHandlers, indexes);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var _this4 = this;\n\n      this.eventHandlers.forEach(function (handler) {\n        if (_this4.id === handler.id && handler.type && handler.obj && handler.obj.removeEventListener) {\n          handler.obj.removeEventListener(handler.type, handler.func);\n        }\n      });\n      this.eventHandlers = [];\n    }\n  }, {\n    key: \"removeAllEvents\",\n    value: function removeAllEvents(includeExternal) {\n      var _this5 = this;\n\n      _lodash.default.each(this.events._events, function (events, type) {\n        _lodash.default.each(events, function (listener) {\n          if (listener && _this5.id === listener.id && (includeExternal || listener.internal)) {\n            _this5.events.off(type, listener);\n          }\n        });\n      });\n    }\n    /**\n     * Removes all event listeners attached to this component.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeEventListeners();\n      this.removeAllEvents();\n    }\n    /**\n     * Append an HTML DOM element to a container.\n     *\n     * @param element\n     * @param container\n     */\n\n  }, {\n    key: \"appendTo\",\n    value: function appendTo(element, container) {\n      container === null || container === void 0 ? void 0 : container.appendChild(element);\n      return this;\n    }\n    /**\n     * Prepend an HTML DOM element to a container.\n     *\n     * @param {HTMLElement} element - The DOM element to prepend.\n     * @param {HTMLElement} container - The DOM element that is the container of the element getting prepended.\n     */\n\n  }, {\n    key: \"prependTo\",\n    value: function prependTo(element, container) {\n      if (container) {\n        if (container.firstChild) {\n          try {\n            container.insertBefore(element, container.firstChild);\n          } catch (err) {\n            console.warn(err);\n            container.appendChild(element);\n          }\n        } else {\n          container.appendChild(element);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Removes an HTML DOM element from its bounding container.\n     *\n     * @param {HTMLElement} element - The element to remove.\n     * @param {HTMLElement} container - The DOM element that is the container of the element to remove.\n     */\n\n  }, {\n    key: \"removeChildFrom\",\n    value: function removeChildFrom(element, container) {\n      if (container && container.contains(element)) {\n        try {\n          container.removeChild(element);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Alias for document.createElement.\n     *\n     * @param {string} type - The type of element to create\n     * @param {Object} attr - The element attributes to add to the created element.\n     * @param {Various} children - Child elements. Can be a DOM Element, string or array of both.\n     *\n     * @return {HTMLElement} - The created element.\n     */\n\n  }, {\n    key: \"ce\",\n    value: function ce(type, attr) {\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null; // console.warn('Call to deprecated this.ce(). Dom elements should be created with templates, not manually with ce.');\n      // Create the element.\n\n      var element = document.createElement(type); // Add attributes.\n\n      if (attr) {\n        this.attr(element, attr);\n      } // Append the children.\n\n\n      this.appendChild(element, children);\n      return element;\n    }\n    /**\n     * Append different types of children.\n     *\n     * @param child\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(element, child) {\n      var _this6 = this;\n\n      if (Array.isArray(child)) {\n        child.forEach(function (oneChild) {\n          return _this6.appendChild(element, oneChild);\n        });\n      } else if (child instanceof HTMLElement || child instanceof Text) {\n        element.appendChild(child);\n      } else if (child) {\n        element.appendChild(this.text(child.toString()));\n      }\n\n      return this;\n    }\n    /**\n     * Creates a new input mask placeholder.\n     * @param {HTMLElement} mask - The input mask.\n     * @returns {string} - The placeholder that will exist within the input as they type.\n     */\n\n  }, {\n    key: \"maskPlaceholder\",\n    value: function maskPlaceholder(mask) {\n      var _this7 = this;\n\n      return mask.map(function (char) {\n        return char instanceof RegExp ? _this7.placeholderChar : char;\n      }).join('');\n    }\n  }, {\n    key: \"placeholderChar\",\n    get: function get() {\n      var _this$component;\n\n      return ((_this$component = this.component) === null || _this$component === void 0 ? void 0 : _this$component.inputMaskPlaceholderChar) || '_';\n    }\n    /**\n     * Sets the input mask for an input.\n     *\n     * @param {HTMLElement} input - The html input to apply the mask to.\n     * @param {String} inputMask - The input mask to add to this input.\n     * @param {Boolean} usePlaceholder - Set the mask placeholder on the input.\n     */\n\n  }, {\n    key: \"setInputMask\",\n    value: function setInputMask(input, inputMask, usePlaceholder) {\n      if (input && inputMask) {\n        var mask = FormioUtils.getInputMask(inputMask, this.placeholderChar);\n        this.defaultMask = mask;\n\n        try {\n          //destroy previous mask\n          if (input.mask) {\n            input.mask.destroy();\n          }\n\n          input.mask = (0, _vanillaTextMask.default)({\n            inputElement: input,\n            mask: mask,\n            placeholderChar: this.placeholderChar,\n            shadowRoot: this.root ? this.root.shadowRoot : null\n          });\n        } catch (e) {\n          // Don't pass error up, to prevent form rejection.\n          // Internal bug of vanilla-text-mask on iOS (`selectionEnd`);\n          console.warn(e);\n        }\n\n        if (mask.numeric) {\n          input.setAttribute('pattern', '\\\\d*');\n        }\n\n        if (usePlaceholder) {\n          input.setAttribute('placeholder', this.maskPlaceholder(mask));\n        }\n      }\n    }\n    /**\n     * Translate a text using the i18n system.\n     *\n     * @param {string|Array<string>} text - The i18n identifier.\n     * @param {Object} params - The i18n parameters to use for translation.\n     */\n\n  }, {\n    key: \"t\",\n    value: function t(text) {\n      var _this$i18next;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      return (_this$i18next = this.i18next).t.apply(_this$i18next, [text].concat(args));\n    }\n    /**\n     * Alias to create a text node.\n     * @param text\n     * @returns {Text}\n     */\n\n  }, {\n    key: \"text\",\n    value: function text(_text) {\n      return document.createTextNode(this.t(_text));\n    }\n    /**\n     * Adds an object of attributes onto an element.\n     * @param {HtmlElement} element - The element to add the attributes to.\n     * @param {Object} attr - The attributes to add to the input element.\n     */\n\n  }, {\n    key: \"attr\",\n    value: function attr(element, _attr) {\n      var _this8 = this;\n\n      if (!element) {\n        return;\n      }\n\n      _lodash.default.each(_attr, function (value, key) {\n        if (typeof value !== 'undefined') {\n          if (key.indexOf('on') === 0) {\n            // If this is an event, add a listener.\n            _this8.addEventListener(element, key.substr(2).toLowerCase(), value);\n          } else {\n            // Otherwise it is just an attribute.\n            element.setAttribute(key, value);\n          }\n        }\n      });\n    }\n    /**\n     * Determines if an element has a class.\n     *\n     * Taken from jQuery https://j11y.io/jquery/#v=1.5.0&fn=jQuery.fn.hasClass\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(element, className) {\n      if (!element) {\n        return false;\n      } // Allow templates to intercept.\n\n\n      className = \" \".concat(className, \" \");\n      return \" \".concat(element.className, \" \").replace(/[\\n\\t\\r]/g, ' ').indexOf(className) > -1;\n    }\n    /**\n     * Adds a class to a DOM element.\n     *\n     * @param element\n     *   The element to add a class to.\n     * @param className\n     *   The name of the class to add.\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(element, className) {\n      if (!element || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var classes = element.getAttribute('class');\n\n      if (!(classes !== null && classes !== void 0 && classes.includes(className))) {\n        element.setAttribute('class', \"\".concat(classes, \" \").concat(className));\n      }\n\n      return this;\n    }\n    /**\n     * Remove a class from a DOM element.\n     *\n     * @param element\n     *   The DOM element to remove the class from.\n     * @param className\n     *   The name of the class that is to be removed.\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(element, className) {\n      if (!element || !className || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var cls = element.getAttribute('class');\n\n      if (cls) {\n        cls = cls.replace(new RegExp(\" \".concat(className), 'g'), '');\n        element.setAttribute('class', cls);\n      }\n\n      return this;\n    }\n    /**\n     * Empty's an HTML DOM element.\n     *\n     * @param {HTMLElement} element - The element you wish to empty.\n     */\n\n  }, {\n    key: \"empty\",\n    value: function empty(element) {\n      if (element) {\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n      }\n    }\n    /**\n     * Create an evaluation context for all script executions and interpolations.\n     *\n     * @param additional\n     * @return {*}\n     */\n\n  }, {\n    key: \"evalContext\",\n    value: function evalContext(additional) {\n      var _this$options;\n\n      return Object.assign({\n        _: _lodash.default,\n        utils: FormioUtils,\n        util: FormioUtils,\n        user: _Formio.GlobalFormio.getUser(),\n        moment: _moment.default,\n        instance: this,\n        self: this,\n        token: _Formio.GlobalFormio.getToken({\n          decode: true\n        }),\n        config: this.root && this.root.form && this.root.form.config ? this.root.form.config : (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.formConfig ? this.options.formConfig : {}\n      }, additional, _lodash.default.get(this.root, 'options.evalContext', {}));\n    }\n    /**\n     * Performs an interpolation using the evaluation context of this component.\n     *\n     * @param string\n     * @param data\n     * @return {XML|string|*|void}\n     */\n\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(string, data) {\n      var _this9 = this;\n\n      if (typeof string !== 'function' && this.component.content && !FormioUtils.Evaluator.templateSettings.interpolate.test(string)) {\n        string = FormioUtils.translateHTMLTemplate(String(string), function (value) {\n          return _this9.t(value);\n        });\n      }\n\n      return FormioUtils.interpolate(string, this.evalContext(data));\n    }\n    /**\n     * Performs an evaluation using the evaluation context of this component.\n     *\n     * @param func\n     * @param args\n     * @param ret\n     * @param tokenize\n     * @return {*}\n     */\n\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(func, args, ret, tokenize) {\n      return FormioUtils.evaluate(func, this.evalContext(args), ret, tokenize);\n    }\n    /**\n     * Allow for options to hook into the functionality of this renderer.\n     * @return {*}\n     */\n\n  }, {\n    key: \"hook\",\n    value: function hook() {\n      var name = arguments[0];\n\n      if (this.options && this.options.hooks && this.options.hooks[name]) {\n        return this.options.hooks[name].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        // If this is an async hook instead of a sync.\n        var fn = typeof arguments[arguments.length - 1] === 'function' ? arguments[arguments.length - 1] : null;\n\n        if (fn) {\n          return fn(null, arguments[1]);\n        } else {\n          return arguments[1];\n        }\n      }\n    }\n  }]);\n\n  return Element;\n}();\n\nexports.default = Element;","map":{"version":3,"sources":["C:/Users/Devin/AOT_Projects/jag-servebc/forms-flow-ai/forms-flow-web/node_modules/formiojs/Element.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","require","Object","defineProperty","exports","value","default","_EventEmitter","_interopRequireDefault","_Formio","FormioUtils","_interopRequireWildcard","_i18next","_lodash","_moment","_vanillaTextMask","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Element","options","assign","language","highlightErrors","componentErrorClass","componentWarningClass","row","namespace","id","getRandomComponentId","eventHandlers","i18next","events","defaultMask","helplinks","on","event","cb","internal","once","arguments","undefined","type","concat","onAny","offAny","off","_this","listeners","forEach","listener","emit","_this$events","_len","data","Array","_key","apply","hasEventHandler","_this2","some","addEventListener","func","persistent","push","attachEvent","removeEventListener","_this3","indexes","handler","index","pullAt","removeEventListeners","_this4","removeAllEvents","includeExternal","_this5","each","_events","destroy","appendTo","element","container","appendChild","prependTo","firstChild","insertBefore","err","console","warn","removeChildFrom","contains","removeChild","ce","attr","children","document","createElement","child","_this6","isArray","oneChild","HTMLElement","Text","text","toString","maskPlaceholder","mask","_this7","map","char","RegExp","placeholderChar","join","_this$component","component","inputMaskPlaceholderChar","setInputMask","input","inputMask","usePlaceholder","getInputMask","inputElement","shadowRoot","root","e","numeric","setAttribute","t","_this$i18next","_len2","args","_key2","_text","createTextNode","_attr","_this8","indexOf","substr","toLowerCase","hasClass","className","replace","addClass","classes","getAttribute","includes","removeClass","cls","empty","evalContext","additional","_this$options","_","utils","util","user","GlobalFormio","getUser","moment","self","token","getToken","decode","config","form","formConfig","interpolate","string","_this9","content","Evaluator","templateSettings","test","translateHTMLTemplate","String","evaluate","ret","tokenize","hook","name","hooks","slice","fn"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nrequire(\"core-js/modules/es.array.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _Formio = require(\"./Formio\");\n\nvar FormioUtils = _interopRequireWildcard(require(\"./utils/utils\"));\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _vanillaTextMask = _interopRequireDefault(require(\"@formio/vanilla-text-mask\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * The root component for all elements within the Form.io renderer.\n */\nvar Element = /*#__PURE__*/function () {\n  function Element(options) {\n    _classCallCheck(this, Element);\n\n    /**\n     * The options for this component.\n     * @type {{}}\n     */\n    this.options = Object.assign({\n      language: 'en',\n      highlightErrors: true,\n      componentErrorClass: 'formio-error-wrapper',\n      componentWarningClass: 'formio-warning-wrapper',\n      row: '',\n      namespace: 'formio'\n    }, options || {});\n    /**\n     * The ID of this component. This value is auto-generated when the component is created, but\n     * can also be provided from the component.id value passed into the constructor.\n     * @type {string}\n     */\n\n    this.id = FormioUtils.getRandomComponentId();\n    /**\n     * An array of event handlers so that the destry command can deregister them.\n     * @type {Array}\n     */\n\n    this.eventHandlers = []; // Use the i18next that is passed in, otherwise use the global version.\n\n    this.i18next = this.options.i18next || _i18next.default;\n    /**\n     * An instance of the EventEmitter class to handle the emitting and registration of events.\n     *\n     * @type {EventEmitter}\n     */\n\n    this.events = options && options.events ? options.events : new _EventEmitter.default();\n    this.defaultMask = null;\n    /**\n     * Conditional to show or hide helplinks in editForm\n     *\n     * @type {*|boolean}\n     */\n\n    this.helplinks = this.helplinks = this.options.helplinks === 'false' ? false : this.options.helplinks || 'https://help.form.io';\n  }\n  /**\n   * Register for a new event within this component.\n   *\n   * @example\n   * let component = new BaseComponent({\n   *   type: 'textfield',\n   *   label: 'First Name',\n   *   key: 'firstName'\n   * });\n   * component.on('componentChange', (changed) => {\n   *   console.log('this element is changed.');\n   * });\n   *\n   *\n   * @param {string} event - The event you wish to register the handler for.\n   * @param {function} cb - The callback handler to handle this event.\n   */\n\n\n  _createClass(Element, [{\n    key: \"on\",\n    value: function on(event, cb, internal) {\n      var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event); // Store the component id in the handler so that we can determine which events are for this component.\n\n      cb.id = this.id;\n      cb.key = this.key;\n      cb.internal = internal; // Register for this event.\n\n      return this.events[once ? 'once' : 'on'](type, cb);\n    }\n    /**\n     * Register for a new single-fire event within this component.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"once\",\n    value: function once(event, cb, internal) {\n      return this.on(event, cb, internal, true);\n    }\n    /**\n     * Allow catching any event.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"onAny\",\n    value: function onAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.onAny(cb);\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"offAny\",\n    value: function offAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.offAny(cb);\n    }\n    /**\n     * Removes a listener for a certain event. Not passing the 2nd arg will remove all listeners for that event.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function|undefined} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(event, cb) {\n      var _this = this;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      this.events.listeners(type).forEach(function (listener) {\n        // Ensure the listener is for this element\n        if (!listener || listener.id !== _this.id) {\n          return;\n        } // If there is a given callback, only deal with the match\n\n\n        if (cb && cb !== listener) {\n          return;\n        }\n\n        _this.events.off(type, listener);\n      });\n    }\n    /**\n     * Emit a new event.\n     *\n     * @param {string} event - The event to emit.\n     * @param {Object} data - The data to emit with the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      if (this.events) {\n        var _this$events;\n\n        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          data[_key - 1] = arguments[_key];\n        }\n\n        (_this$events = this.events).emit.apply(_this$events, [\"\".concat(this.options.namespace, \".\").concat(event)].concat(data));\n      }\n    }\n    /**\n     * Check if the component has an event handler set up for the event.\n     *\n     * @param {string} event - The event name.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"hasEventHandler\",\n    value: function hasEventHandler(event) {\n      var _this2 = this;\n\n      if (!this.events) {\n        return false;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      return this.events.listeners(type).some(function (listener) {\n        if (!listener) {\n          return false;\n        }\n\n        return listener.id === _this2.id || listener.key === _this2.key;\n      });\n    }\n    /**\n     * Wrapper method to add an event listener to an HTML element.\n     *\n     * @param obj\n     *   The DOM element to add the event to.\n     * @param type\n     *   The event name to add.\n     * @param func\n     *   The callback function to be executed when the listener is triggered.\n     * @param persistent\n     *   If this listener should persist beyond \"destroy\" commands.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(obj, type, func, persistent) {\n      if (!obj) {\n        return;\n      }\n\n      if (!persistent) {\n        this.eventHandlers.push({\n          id: this.id,\n          obj: obj,\n          type: type,\n          func: func\n        });\n      }\n\n      if ('addEventListener' in obj) {\n        obj.addEventListener(type, func, false);\n      } else if ('attachEvent' in obj) {\n        obj.attachEvent(\"on\".concat(type), func);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an event listener from the object.\n     *\n     * @param obj\n     * @param type\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(obj, type) {\n      var _this3 = this;\n\n      var func = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var indexes = [];\n\n      if (!obj) {\n        return;\n      }\n\n      this.eventHandlers.forEach(function (handler, index) {\n        if (handler.id === _this3.id && obj.removeEventListener && handler.type === type && (!func || handler.func === func)) {\n          obj.removeEventListener(type, handler.func);\n          indexes.push(index);\n        }\n      });\n\n      if (indexes.length) {\n        _lodash.default.pullAt(this.eventHandlers, indexes);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var _this4 = this;\n\n      this.eventHandlers.forEach(function (handler) {\n        if (_this4.id === handler.id && handler.type && handler.obj && handler.obj.removeEventListener) {\n          handler.obj.removeEventListener(handler.type, handler.func);\n        }\n      });\n      this.eventHandlers = [];\n    }\n  }, {\n    key: \"removeAllEvents\",\n    value: function removeAllEvents(includeExternal) {\n      var _this5 = this;\n\n      _lodash.default.each(this.events._events, function (events, type) {\n        _lodash.default.each(events, function (listener) {\n          if (listener && _this5.id === listener.id && (includeExternal || listener.internal)) {\n            _this5.events.off(type, listener);\n          }\n        });\n      });\n    }\n    /**\n     * Removes all event listeners attached to this component.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeEventListeners();\n      this.removeAllEvents();\n    }\n    /**\n     * Append an HTML DOM element to a container.\n     *\n     * @param element\n     * @param container\n     */\n\n  }, {\n    key: \"appendTo\",\n    value: function appendTo(element, container) {\n      container === null || container === void 0 ? void 0 : container.appendChild(element);\n      return this;\n    }\n    /**\n     * Prepend an HTML DOM element to a container.\n     *\n     * @param {HTMLElement} element - The DOM element to prepend.\n     * @param {HTMLElement} container - The DOM element that is the container of the element getting prepended.\n     */\n\n  }, {\n    key: \"prependTo\",\n    value: function prependTo(element, container) {\n      if (container) {\n        if (container.firstChild) {\n          try {\n            container.insertBefore(element, container.firstChild);\n          } catch (err) {\n            console.warn(err);\n            container.appendChild(element);\n          }\n        } else {\n          container.appendChild(element);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Removes an HTML DOM element from its bounding container.\n     *\n     * @param {HTMLElement} element - The element to remove.\n     * @param {HTMLElement} container - The DOM element that is the container of the element to remove.\n     */\n\n  }, {\n    key: \"removeChildFrom\",\n    value: function removeChildFrom(element, container) {\n      if (container && container.contains(element)) {\n        try {\n          container.removeChild(element);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Alias for document.createElement.\n     *\n     * @param {string} type - The type of element to create\n     * @param {Object} attr - The element attributes to add to the created element.\n     * @param {Various} children - Child elements. Can be a DOM Element, string or array of both.\n     *\n     * @return {HTMLElement} - The created element.\n     */\n\n  }, {\n    key: \"ce\",\n    value: function ce(type, attr) {\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      // console.warn('Call to deprecated this.ce(). Dom elements should be created with templates, not manually with ce.');\n      // Create the element.\n      var element = document.createElement(type); // Add attributes.\n\n      if (attr) {\n        this.attr(element, attr);\n      } // Append the children.\n\n\n      this.appendChild(element, children);\n      return element;\n    }\n    /**\n     * Append different types of children.\n     *\n     * @param child\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(element, child) {\n      var _this6 = this;\n\n      if (Array.isArray(child)) {\n        child.forEach(function (oneChild) {\n          return _this6.appendChild(element, oneChild);\n        });\n      } else if (child instanceof HTMLElement || child instanceof Text) {\n        element.appendChild(child);\n      } else if (child) {\n        element.appendChild(this.text(child.toString()));\n      }\n\n      return this;\n    }\n    /**\n     * Creates a new input mask placeholder.\n     * @param {HTMLElement} mask - The input mask.\n     * @returns {string} - The placeholder that will exist within the input as they type.\n     */\n\n  }, {\n    key: \"maskPlaceholder\",\n    value: function maskPlaceholder(mask) {\n      var _this7 = this;\n\n      return mask.map(function (char) {\n        return char instanceof RegExp ? _this7.placeholderChar : char;\n      }).join('');\n    }\n  }, {\n    key: \"placeholderChar\",\n    get: function get() {\n      var _this$component;\n\n      return ((_this$component = this.component) === null || _this$component === void 0 ? void 0 : _this$component.inputMaskPlaceholderChar) || '_';\n    }\n    /**\n     * Sets the input mask for an input.\n     *\n     * @param {HTMLElement} input - The html input to apply the mask to.\n     * @param {String} inputMask - The input mask to add to this input.\n     * @param {Boolean} usePlaceholder - Set the mask placeholder on the input.\n     */\n\n  }, {\n    key: \"setInputMask\",\n    value: function setInputMask(input, inputMask, usePlaceholder) {\n      if (input && inputMask) {\n        var mask = FormioUtils.getInputMask(inputMask, this.placeholderChar);\n        this.defaultMask = mask;\n\n        try {\n          //destroy previous mask\n          if (input.mask) {\n            input.mask.destroy();\n          }\n\n          input.mask = (0, _vanillaTextMask.default)({\n            inputElement: input,\n            mask: mask,\n            placeholderChar: this.placeholderChar,\n            shadowRoot: this.root ? this.root.shadowRoot : null\n          });\n        } catch (e) {\n          // Don't pass error up, to prevent form rejection.\n          // Internal bug of vanilla-text-mask on iOS (`selectionEnd`);\n          console.warn(e);\n        }\n\n        if (mask.numeric) {\n          input.setAttribute('pattern', '\\\\d*');\n        }\n\n        if (usePlaceholder) {\n          input.setAttribute('placeholder', this.maskPlaceholder(mask));\n        }\n      }\n    }\n    /**\n     * Translate a text using the i18n system.\n     *\n     * @param {string|Array<string>} text - The i18n identifier.\n     * @param {Object} params - The i18n parameters to use for translation.\n     */\n\n  }, {\n    key: \"t\",\n    value: function t(text) {\n      var _this$i18next;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      return (_this$i18next = this.i18next).t.apply(_this$i18next, [text].concat(args));\n    }\n    /**\n     * Alias to create a text node.\n     * @param text\n     * @returns {Text}\n     */\n\n  }, {\n    key: \"text\",\n    value: function text(_text) {\n      return document.createTextNode(this.t(_text));\n    }\n    /**\n     * Adds an object of attributes onto an element.\n     * @param {HtmlElement} element - The element to add the attributes to.\n     * @param {Object} attr - The attributes to add to the input element.\n     */\n\n  }, {\n    key: \"attr\",\n    value: function attr(element, _attr) {\n      var _this8 = this;\n\n      if (!element) {\n        return;\n      }\n\n      _lodash.default.each(_attr, function (value, key) {\n        if (typeof value !== 'undefined') {\n          if (key.indexOf('on') === 0) {\n            // If this is an event, add a listener.\n            _this8.addEventListener(element, key.substr(2).toLowerCase(), value);\n          } else {\n            // Otherwise it is just an attribute.\n            element.setAttribute(key, value);\n          }\n        }\n      });\n    }\n    /**\n     * Determines if an element has a class.\n     *\n     * Taken from jQuery https://j11y.io/jquery/#v=1.5.0&fn=jQuery.fn.hasClass\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(element, className) {\n      if (!element) {\n        return false;\n      } // Allow templates to intercept.\n\n\n      className = \" \".concat(className, \" \");\n      return \" \".concat(element.className, \" \").replace(/[\\n\\t\\r]/g, ' ').indexOf(className) > -1;\n    }\n    /**\n     * Adds a class to a DOM element.\n     *\n     * @param element\n     *   The element to add a class to.\n     * @param className\n     *   The name of the class to add.\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(element, className) {\n      if (!element || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var classes = element.getAttribute('class');\n\n      if (!(classes !== null && classes !== void 0 && classes.includes(className))) {\n        element.setAttribute('class', \"\".concat(classes, \" \").concat(className));\n      }\n\n      return this;\n    }\n    /**\n     * Remove a class from a DOM element.\n     *\n     * @param element\n     *   The DOM element to remove the class from.\n     * @param className\n     *   The name of the class that is to be removed.\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(element, className) {\n      if (!element || !className || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var cls = element.getAttribute('class');\n\n      if (cls) {\n        cls = cls.replace(new RegExp(\" \".concat(className), 'g'), '');\n        element.setAttribute('class', cls);\n      }\n\n      return this;\n    }\n    /**\n     * Empty's an HTML DOM element.\n     *\n     * @param {HTMLElement} element - The element you wish to empty.\n     */\n\n  }, {\n    key: \"empty\",\n    value: function empty(element) {\n      if (element) {\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n      }\n    }\n    /**\n     * Create an evaluation context for all script executions and interpolations.\n     *\n     * @param additional\n     * @return {*}\n     */\n\n  }, {\n    key: \"evalContext\",\n    value: function evalContext(additional) {\n      var _this$options;\n\n      return Object.assign({\n        _: _lodash.default,\n        utils: FormioUtils,\n        util: FormioUtils,\n        user: _Formio.GlobalFormio.getUser(),\n        moment: _moment.default,\n        instance: this,\n        self: this,\n        token: _Formio.GlobalFormio.getToken({\n          decode: true\n        }),\n        config: this.root && this.root.form && this.root.form.config ? this.root.form.config : (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.formConfig ? this.options.formConfig : {}\n      }, additional, _lodash.default.get(this.root, 'options.evalContext', {}));\n    }\n    /**\n     * Performs an interpolation using the evaluation context of this component.\n     *\n     * @param string\n     * @param data\n     * @return {XML|string|*|void}\n     */\n\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(string, data) {\n      var _this9 = this;\n\n      if (typeof string !== 'function' && this.component.content && !FormioUtils.Evaluator.templateSettings.interpolate.test(string)) {\n        string = FormioUtils.translateHTMLTemplate(String(string), function (value) {\n          return _this9.t(value);\n        });\n      }\n\n      return FormioUtils.interpolate(string, this.evalContext(data));\n    }\n    /**\n     * Performs an evaluation using the evaluation context of this component.\n     *\n     * @param func\n     * @param args\n     * @param ret\n     * @param tokenize\n     * @return {*}\n     */\n\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(func, args, ret, tokenize) {\n      return FormioUtils.evaluate(func, this.evalContext(args), ret, tokenize);\n    }\n    /**\n     * Allow for options to hook into the functionality of this renderer.\n     * @return {*}\n     */\n\n  }, {\n    key: \"hook\",\n    value: function hook() {\n      var name = arguments[0];\n\n      if (this.options && this.options.hooks && this.options.hooks[name]) {\n        return this.options.hooks[name].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        // If this is an async hook instead of a sync.\n        var fn = typeof arguments[arguments.length - 1] === 'function' ? arguments[arguments.length - 1] : null;\n\n        if (fn) {\n          return fn(null, arguments[1]);\n        } else {\n          return arguments[1];\n        }\n      }\n    }\n  }]);\n\n  return Element;\n}();\n\nexports.default = Element;"]},"metadata":{},"sourceType":"script"}